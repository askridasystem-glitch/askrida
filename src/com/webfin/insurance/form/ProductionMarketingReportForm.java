/***********************************************************************
 * Module:  com.webfin.insurance.form.ProductionMarketingReportForm
 * Author:  Denny Mahendra
 * Created: Aug 15, 2006 11:17:20 PM
 * Purpose:
 ***********************************************************************/
package com.webfin.insurance.form;

import com.crux.common.controller.FOPServlet;
import com.crux.util.DTOList;
import com.crux.util.SQLAssembler;
import com.crux.util.Tools;
import com.crux.util.ListUtil;
import com.crux.web.controller.SessionManager;
import com.crux.web.form.Form;
import com.crux.lov.LOVManager;
import com.crux.common.model.DTO;
import com.crux.common.model.HashDTO;
import com.crux.common.parameter.Parameter;
import com.crux.pool.DTOPool;
import com.webfin.gl.model.GLCostCenterView;
import com.webfin.insurance.model.InsurancePolicyView;
import com.webfin.insurance.model.InsuranceTreatyTypesView;
import com.webfin.insurance.ejb.PostProcessorManager;
import com.webfin.FinCodec;
import com.crux.lang.LanguageManager;
import com.crux.login.model.UserSessionView;
import com.crux.util.BDUtil;
import com.crux.util.DateUtil;
import com.crux.util.FileTransferDirectory;
import com.crux.util.LogManager;
import com.webfin.insurance.ejb.Insurance;
import com.webfin.insurance.ejb.InsuranceHome;
import com.webfin.system.region.model.RegionView;
import java.sql.PreparedStatement;

import javax.ejb.CreateException;
import javax.naming.NamingException;
import java.rmi.RemoteException;
import com.crux.util.JNDIUtil;

import java.util.Date;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.HashSet;
import java.lang.reflect.Method;
import java.math.BigDecimal;

import java.io.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.servlet.ServletOutputStream;

import com.crux.util.SQLUtil;
import com.crux.util.StringTools;
import com.itextpdf.text.pdf.fonts.otf.Language;
import com.webfin.entity.model.EntityView;
import com.webfin.gl.util.GLUtil;
import com.webfin.insurance.model.InsurancePolicyTypeGroupView;
import com.webfin.insurance.model.InsurancePolicyTypeView;
import com.webfin.insurance.model.InsuranceProdukView;
import com.webfin.postalcode.model.PostalCodeView;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import javax.ejb.SessionContext;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import org.apache.poi.hssf.util.CellRangeAddress;

import org.joda.time.Months;
import org.joda.time.DateTime;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class ProductionMarketingReportForm extends Form {

    public SessionContext ctx;
    private Date expirePeriodFrom;
    private Date expirePeriodTo;
    private Date periodFrom;
    private Date periodTo;
    private Date policyDateFrom;
    private Date policyDateTo;
    private Date entryDateFrom;
    private Date entryDateTo;
    private Date periodEndFrom;
    private Date periodEndTo;
    private Date restFrom;
    private Date restTo;
    private Date appDateFrom;
    private Date appDateTo;
    private String stPolicyTypeGroupID;
    private String stPolicyTypeID;
    private String stInsCompanyID;
    private String stInsCompanyName;
    private String stEntityName;
    private String stFltCoverType;
    private String stFltTreatyType;
    private String stFltTreatyTypeDesc;
    private String stFltCoverTypeDesc;
    private String stFltClaimStatus;
    private String stFltClaimStatusDesc;
    private String stCustCategory1;
    private String stEntityID;
    private String stPolicyTypeDesc;
    private String stPrintForm;
    private String stFontSize;
    private String stLang;
    private String stPolicyNo;
    private String stRiskLocation;
    private String stPostCode;
    private String stRiskCardNo;
    private String stBranch = SessionManager.getInstance().getSession().getStBranch();
    private String stBranchDesc = SessionManager.getInstance().getSession().getCostCenterDesc();
    private String stBranchName;
    private String stRiskCode;
    private String stCustCategory1Desc;
    private boolean enableRiskFilter;
    private boolean enableSelectForm = true;
    private String ref1;
    private HashMap refPropMap;
    private String status;
    private String stReportTitle;
    private String stReport;
    private String stReportDesc;
    private String stReportType;
    private String stNama;
    private String stMarketerID;
    private String stMarketerName;
    private String stCompanyID;
    private String stCompanyName;
    private String stZoneCode;
    private String stZoneCodeName;
    private String stPolicyTypeGroupDesc;
    private String stReportTypeOfFile;
    private String stFileName;
    private String stZoneEquake;
    private String stZoneEquakeName;
    private String stNoUrut;
    private String stNumber;
    private String stCreateID;
    private String stCreateName;
    private String stRekapNo;
    private String stAuthorized;
    private String stPostCodeDesc;
    private String stCoinsurerID;
    private String stCoinsurerName;
    private String stRiskCodeName;
    String stTreatyYear = "";
    private DTOList list;
    private String stABAFlag = "N";
    private String stIndex = "N";
    private String stReceiptNo;
    private String stObject;
    private String stParentID;
    private String stCustStatus;
    private String stStatus;
    private String stYearTreaty;
    private String stTime;
    private String stTax;
    private String stTaxDesc;
    private String stWilayahID;
    private String stWilayahName;
    private String stCompTypeID;
    private String stCompTypeName;
    private String stCreditID;
    private String stCreditName;
    private String stItemClaimID;
    private String stItemClaimName;
    private String stKreasiID;
    private String stKreasiName;
    private String stReinsID;
    private String stReinsName;
    private String stGroupID;
    private String stGroupName;
    private String stRegion = SessionManager.getInstance().getSession().getStRegion();
    private String stRegionDesc = SessionManager.getInstance().getSession().getRegionDesc();
    private String stRegionName;
    private String stTriwulan;
    private String stCompanyProdID;
    private String stCompanyProdName;
    private String stValidasi;
    private String stFFac;
    private String stMarketerOffID;
    private String stMarketerOffName;
    private String stProfileID;
    private String stProfileName;
    private String stGroupJenisID;
    private String stGroupJenisName;
    private String stGroupOutgoID;
    private String stGroupOutgoName;
    private String stBussinessPolType;
    private String stBussinessPolTypeCob;
    private String stBranchSource;
    private String stBranchSourceDesc;
    private String stRegionSource;
    private String stRegionSourceDesc;
    private String stBussinessSourceID;
    private String stBussinessSourceName;
    private boolean canNavigateBranch = SessionManager.getInstance().getSession().hasResource("POL_PROP_NAVBR");
    private boolean canNavigateRegion = SessionManager.getInstance().getSession().hasResource("POL_PROP_NAVREG");
    private static HashSet formList = null;
    private final static transient LogManager logger = LogManager.getInstance(ProductionMarketingReportForm.class);

    private Insurance getRemoteInsurance() throws NamingException, ClassNotFoundException, CreateException, RemoteException {
        return ((InsuranceHome) JNDIUtil.getInstance().lookup("InsuranceEJB", InsuranceHome.class.getName())).create();
    }

    public String getStZoneEquake() {
        return stZoneEquake;
    }

    public void setStZoneEquake(String stZoneEquake) {
        this.stZoneEquake = stZoneEquake;
    }

    public String getStZoneEquakeName() {
        return stZoneEquakeName;
    }

    public void setStZoneEquakeName(String stZoneEquakeName) {
        this.stZoneEquakeName = stZoneEquakeName;
    }

    public String getStFileName() {
        return stFileName;
    }

    public void setStFileName(String stFileName) {
        this.stFileName = stFileName;
    }

    public String getStMarketerID() {
        return stMarketerID;
    }

    public void setStMarketerID(String stMarketerID) {
        this.stMarketerID = stMarketerID;
    }

    public String getStMarketerName() {
        return stMarketerName;
    }

    public void setStMarketerName(String stMarketerName) {
        this.stMarketerName = stMarketerName;
    }

    public String getStCompanyID() {
        return stCompanyID;
    }

    public void setStCompanyID(String stCompanyID) {
        this.stCompanyID = stCompanyID;
    }

    public String getStCompanyName() {
        return stCompanyName;
    }

    public void setStCompanyName(String stCompanyName) {
        this.stCompanyName = stCompanyName;
    }

    public String getStReportType() {
        return stReportType;
    }

    public void setStReportType(String stReportType) {
        this.stReportType = stReportType;
    }

    public String getStReportTypeOfFile() {
        return stReportTypeOfFile;
    }

    public void setStReportTypeOfFile(String stReportTypeOfFile) {
        this.stReportTypeOfFile = stReportTypeOfFile;
    }

    public String getStFltClaimStatus() {
        return stFltClaimStatus;
    }

    public void setStFltClaimStatus(String stFltClaimStatus) {
        this.stFltClaimStatus = stFltClaimStatus;
    }

    public String getStReport() {
        return stReport;
    }

    public void setStReport(String stReport) {
        this.stReport = stReport;
    }

    public String getStReportDesc() {
        return stReportDesc;
    }

    public void setStReportDesc(String stReportDesc) {
        this.stReportDesc = stReportDesc;
    }

    public String getStFltClaimStatusDesc() {
        return stFltClaimStatusDesc;
    }

    public void setStFltClaimStatusDesc(String stFltClaimStatusDesc) {
        this.stFltClaimStatusDesc = stFltClaimStatusDesc;
    }

    public String getStEntityName() {
        return stEntityName;
    }

    public void setStEntityName(String stEntityName) {
        this.stEntityName = stEntityName;
    }

    public String getStPolicyTypeDesc() {
        return stPolicyTypeDesc;
    }

    public void setStPolicyTypeDesc(String stPolicyTypeDesc) {
        this.stPolicyTypeDesc = stPolicyTypeDesc;
    }

    public String getStFltTreatyTypeDesc() {
        return stFltTreatyTypeDesc;
    }

    public void setStFltTreatyTypeDesc(String stFltTreatyTypeDesc) {
        this.stFltTreatyTypeDesc = stFltTreatyTypeDesc;
    }

    public String getStFltTreatyType() {
        return stFltTreatyType;
    }

    public void setStFltTreatyType(String stFltTreatyType) {
        this.stFltTreatyType = stFltTreatyType;
    }

    public String getStBranchDesc() {
        return stBranchDesc;
    }

    public void setStBranchDesc(String stBranchDesc) {
        this.stBranchDesc = stBranchDesc;
    }

    public String getStBranch() {
        return stBranch;
    }

    public void setStBranch(String stBranch) {
        this.stBranch = stBranch;
    }

    public boolean isEnableSelectForm() {
        return enableSelectForm;
    }

    public void setEnableSelectForm(boolean enableSelectForm) {
        this.enableSelectForm = enableSelectForm;
    }
    private static String[][] objectFields = {
        {"b.description", "odescription",},
        {"b.nd_premi1", "nd_premi1",},
        {"b.nd_premi2", "nd_premi2",},
        {"b.nd_premi3", "nd_premi3",},
        {"b.nd_premi4", "nd_premi4",},
        {"b.nd_premirate1", "nd_premirate1",},
        {"b.nd_premirate2", "nd_premirate2",},
        {"b.nd_premirate3", "nd_premirate3",},
        {"b.nd_premirate4", "nd_premirate4",},};
    private static String[][] objectFields2 = {
        {"coalesce(b.ref1d,b.ref1)", "obj_ref1",},
        {"coalesce(b.ref2d,b.ref2)", "obj_ref2",},
        {"coalesce(b.ref3d,b.ref3)", "obj_ref3",},
        {"coalesce(b.ref4d,b.ref4)", "obj_ref4",},
        {"coalesce(b.ref5d,b.ref5)", "obj_ref5",},
        {"coalesce(b.ref6d,b.ref6)", "obj_ref6",},
        {"coalesce(b.ref7d,b.ref7)", "obj_ref7",},
        {"b.riskcode", "riskcode",},
        {"b.risk_location", "risk_location",},
        {"b.riskcardno", "riskcardno",},
        {"b.insured_amount", "obj_insured_amount",},
        {"b.premi_total", "obj_premi_total",},};
    private static String[][] policyFields = {
        {"a.pol_id", "pol_id",},
        {"a.pol_no", "pol_no",},
        {"a.description", "description",},
        {"a.ccy", "ccy",},
        {"a.posted_flag", "posted_flag",},
        {"a.create_date", "create_date",},
        {"a.create_who", "create_who",},
        {"a.change_date", "change_date",},
        {"a.change_who", "change_who",},
        {"a.pol_type_id", "pol_type_id",},
        {"a.amount", "amount",},
        {"a.period_start", "period_start",},
        {"a.period_end", "period_end",},
        {"a.pol_subtype_id", "pol_subtype_id",},
        {"a.premi_base", "premi_base",},
        {"a.premi_total", "premi_total",},
        {"a.premi_rate", "premi_rate",},
        {"a.insured_amount", "insured_amount",},
        {"a.policy_date", "policy_date",},
        {"a.catsumbis", "bus_source",},
        {"a.region_id", "region_id",},
        {"a.captive_flag", "captive_flag",},
        {"a.inward_flag", "inward_flag",},
        {"a.premi_netto", "premi_netto",},
        {"a.ccy_rate", "ccy_rate",},
        {"a.cc_code", "cc_code",},
        {"a.entity_id", "entity_id",},
        {"a.condition_id", "condition_id",},
        {"a.risk_category_id", "risk_category_id",},
        {"a.cover_type_code", "cover_type_code",},
        {"a.f_prodmode", "f_prodmode",},
        {"a.cust_name", "cust_name",},
        {"a.cust_address", "cust_address",},
        {"a.master_policy_id", "master_policy_id",},
        {"a.prod_name", "prod_name",},
        {"a.prod_address", "prod_address",},
        {"a.prod_id", "prod_id",},
        {"a.ins_policy_type_grp_id", "ins_policy_type_grp_id",},
        {"a.premi_total_adisc", "premi_total_adisc",},
        {"a.total_due", "total_due",},
        {"a.ins_period_id", "ins_period_id",},
        {"a.inst_period_id", "inst_period_id",},
        {"a.inst_periods", "inst_periods",},
        {"a.period_rate", "period_rate",},
        {"a.ref1", "ref1",},
        {"a.ref2", "ref2",},
        {"a.ref3", "ref3",},
        {"a.ref4", "ref4",},
        {"a.ref5", "ref5",},
        {"a.ref6", "ref6",},
        {"a.ref7", "ref7",},
        {"a.ref8", "ref8",},
        {"a.ref9", "ref9",},
        {"a.ref10", "ref10",},
        {"a.ref11", "ref11",},
        {"a.ref12", "ref12",},
        {"a.refd1", "refd1",},
        {"a.refd2", "refd2",},
        {"a.refd3", "refd3",},
        {"a.refd4", "refd4",},
        {"a.refd5", "refd5",},
        {"a.refn1", "refn1",},
        {"a.refn2", "refn2",},
        {"a.refn3", "refn3",},
        {"a.refn4", "refn4",},
        {"a.refn5", "refn5",},
        {"a.parent_id", "parent_id",},
        {"a.status", "status",},
        {"a.active_flag", "active_flag",},
        {"a.sppa_no", "sppa_no",},
        {"a.claim_no", "claim_no",},
        {"a.claim_date", "claim_date",},
        {"a.claim_cause", "claim_cause",},
        {"a.claim_cause_desc", "claim_cause_desc",},
        {"a.event_location", "event_location",},
        {"a.claim_person_id", "claim_person_id",},
        {"a.claim_person_name", "claim_person_name",},
        {"a.claim_person_address", "claim_person_address",},
        {"a.claim_person_status", "claim_person_status",},
        {"a.claim_amount_est", "claim_amount_est",},
        {"a.claim_currency", "claim_currency",},
        {"a.claim_loss_status", "claim_loss_status",},
        {"a.claim_benefit", "claim_benefit",},
        {"a.claim_documents", "claim_documents",},
        {"a.endorse_date", "endorse_date",},
        {"a.effective_flag", "effective_flag",},
        {"a.claim_status", "claim_status",},
        {"a.endorse_notes", "endorse_notes",},
        {"a.print_code", "print_code",},
        {"a.root_id", "root_id",},
        {"a.insured_amount_e", "insured_amount_e",},
        {"a.ins_period_base_id", "ins_period_base_id",},
        {"a.period_rate_before", "period_rate_before",},
        {"a.ins_period_base_b4", "ins_period_base_b4",},
        {"a.ins_premium_factor_id", "ins_premium_factor_id",},
        {"a.dla_no", "dla_no",},
        {"a.ins_treaty_id", "ins_treaty_id",},
        {"a.total_fee", "total_fee",},
        {"a.nd_comm1", "nd_comm1",},
        {"a.nd_comm2", "nd_comm2",},
        {"a.nd_comm3", "nd_comm3",},
        {"a.nd_comm4", "nd_comm4",},
        {"a.nd_brok1", "nd_brok1",},
        {"a.nd_brok2", "nd_brok2",},
        {"a.nd_hfee", "nd_hfee",},
        {"a.nd_sfee", "nd_sfee",},
        {"a.nd_pcost", "nd_pcost",},
        {"a.nd_update", "nd_update",},
        {"a.nd_brok1pct", "nd_brok1pct",},
        {"a.nd_brok2pct", "nd_brok2pct",},
        {"a.nd_hfeepct", "nd_hfeepct",},
        {"a.nd_disc1", "nd_disc1",},
        {"a.nd_disc2", "nd_disc2",},
        {"a.nd_disc1pct", "nd_disc1pct",},
        {"a.nd_disc2pct", "nd_disc2pct",},
        {"a.odescription", "odescription",},
        {"a.pfx_clauses", "pfx_clauses",},
        {"a.pfx_interest", "pfx_interest",},
        {"a.pfx_coverage", "pfx_coverage",},
        {"a.pfx_deductible", "pfx_deductible",},
        {"a.claim_ded_amount", "claim_ded_amount",},
        {"a.premi_pay_date", "premi_pay_date",},
        {"a.claim_amount", "claim_amount",},
        {"a.claim_amount_approved", "claim_amount_approved",},
        {"a.pla_no", "pla_no",},
        {"a.dla_remark", "dla_remark",},
        {"a.claim_cust_amount", "claim_cust_amount",},
        {"a.claim_cust_ded_amount", "claim_cust_ded_amount",},
        {"a.claim_ri_amount", "claim_ri_amount",},
        {"a.claim_object_id", "claim_object_id",},};

    public String getStCustCategory1Desc() {
        return stCustCategory1Desc;
    }

    public void setStCustCategory1Desc(String stCustCategory1Desc) {
        this.stCustCategory1Desc = stCustCategory1Desc;
    }

    public String getStFltCoverTypeDesc() {
        return stFltCoverTypeDesc;
    }

    public void setStFltCoverTypeDesc(String stFltCoverTypeDesc) {
        this.stFltCoverTypeDesc = stFltCoverTypeDesc;
    }

    public void onChangePolicyTypeGroup() {
    }

    public void onChangeBranchGroup() {
    }

    public void onChangeReport() {
    }

    public String getStPolicyTypeGroupID() {
        return stPolicyTypeGroupID;
    }

    public void setStPolicyTypeGroupID(String stPolicyTypeGroupID) {
        this.stPolicyTypeGroupID = stPolicyTypeGroupID;
    }

    public String getStPolicyTypeID() {
        return stPolicyTypeID;
    }

    public void setStPolicyTypeID(String stPolicyTypeID) {
        this.stPolicyTypeID = stPolicyTypeID;
    }

    public Date getPolicyDateFrom() {
        return policyDateFrom;
    }

    public void setPolicyDateFrom(Date policyDateFrom) {
        this.policyDateFrom = policyDateFrom;
    }

    public Date getPolicyDateTo() {
        return policyDateTo;
    }

    public void setPolicyDateTo(Date policyDateTo) {
        this.policyDateTo = policyDateTo;
    }

    public Date getEntryDateFrom() {
        return entryDateFrom;
    }

    public void setEntryDateFrom(Date entryDateFrom) {
        this.entryDateFrom = entryDateFrom;
    }

    public Date getEntryDateTo() {
        return entryDateTo;
    }

    public void setEntryDateTo(Date entryDateTo) {
        this.entryDateTo = entryDateTo;
    }

    public boolean isEnableRiskFilter() {
        return enableRiskFilter;
    }

    public void setEnableRiskFilter(boolean enableRiskFilter) {
        this.enableRiskFilter = enableRiskFilter;
    }

    public String getStRiskLocation() {
        return stRiskLocation;
    }

    public void setStRiskLocation(String stRiskLocation) {
        this.stRiskLocation = stRiskLocation;
    }

    public String getStPostCode() {
        return stPostCode;
    }

    public void setStPostCode(String stPostCode) {
        this.stPostCode = stPostCode;
    }

    public String getStRiskCardNo() {
        return stRiskCardNo;
    }

    public void setStRiskCardNo(String stRiskCardNo) {
        this.stRiskCardNo = stRiskCardNo;
    }

    public String getStRiskCode() {
        return stRiskCode;
    }

    public void setStRiskCode(String stRiskCode) {
        this.stRiskCode = stRiskCode;
    }

    public String getStPolicyNo() {
        return stPolicyNo;
    }

    public void setStPolicyNo(String stPolicyNo) {
        this.stPolicyNo = stPolicyNo;
    }

    public String getStLang() {
        return stLang;
    }

    public void setStLang(String stLang) {
        this.stLang = stLang;
    }

    public String getStPrintForm() {
        return stPrintForm;
    }

    public void setStPrintForm(String stPrintForm) {
        this.stPrintForm = stPrintForm;
    }

    public Date getExpirePeriodFrom() {
        return expirePeriodFrom;
    }

    public void setExpirePeriodFrom(Date expirePeriodFrom) {
        this.expirePeriodFrom = expirePeriodFrom;
    }

    public Date getExpirePeriodTo() {
        return expirePeriodTo;
    }

    public void setExpirePeriodTo(Date expirePeriodTo) {
        this.expirePeriodTo = expirePeriodTo;
    }

    public String getStEntityID() {
        return stEntityID;
    }

    public void setStEntityID(String stEntityID) {
        this.stEntityID = stEntityID;
    }

    public String getStCustCategory1() {
        return stCustCategory1;
    }

    public void setStCustCategory1(String stCustCategory1) {
        this.stCustCategory1 = stCustCategory1;
    }

    public String getStFltCoverType() {
        return stFltCoverType;
    }

    public void setStFltCoverType(String stFltCoverType) {
        this.stFltCoverType = stFltCoverType;
    }

    public void initialize() {
        setTitle("REPORT");

        stReportType = (String) getAttribute("rpt");
    }

    public Date getPeriodFrom() {
        return periodFrom;
    }

    public void setPeriodFrom(Date periodFrom) {
        this.periodFrom = periodFrom;
    }

    public Date getPeriodTo() {
        return periodTo;
    }

    public void setPeriodTo(Date periodTo) {
        this.periodTo = periodTo;
    }

    private void loadFormList() {
        if (formList == null || true) {
            final String[] filez = new File(SessionManager.getInstance().getRequest().getSession().getServletContext().getRealPath("/pages/insurance/prodrpt")).list();

            formList = new HashSet();

            for (int i = 0; i < filez.length; i++) {
                String s = filez[i];

                formList.add(s);
            }
        }
    }

    private void validateNumber() throws Exception {

        if (getStReport().equalsIgnoreCase("rppkreasi_koas") || getStReport().equalsIgnoreCase("rppkreasi_nettkoas")) {
            if (getStNoUrut() == null && getStRekapNo() == null) {
                throw new RuntimeException("No. belum diisi");
            }
        }
    }

    public void clickPrint() throws Exception {
        //PostProcessorManager.getInstance().runPolicyProcess();

        loadFormList();

        validateNumber();

        final DTOList l = loadList();

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final ArrayList plist = new ArrayList();

        plist.add(stReport + "_" + stFltTreatyType);

        plist.add(stReport + "_" + stValidasi);

        plist.add(stReport + "_" + stIndex);

        plist.add(stReport + "_" + stBranch);

        plist.add(stReport + "_" + stPolicyTypeGroupID + "_" + stPolicyTypeID);

        plist.add(stReport + "_" + stPolicyTypeGroupID);

        plist.add(stReport);

        String urx = null;
        String urxSave = null;

        logger.logDebug("printPolicy: scanlist:" + plist);

        for (int i = 0; i < plist.size(); i++) {
            String s = (String) plist.get(i);

            if (formList.contains(s + ".fop.jsp")) {
                urx = "/pages/insurance/prodrpt/" + s + ".fop?xlang=" + stLang;
                urxSave = "/pages/insurance/prodrpt/" + s + "_SAVE.fop";
                break;
            }
        }

        if (urx == null) {
            throw new RuntimeException("Unable to find suitable print form");
        }

        if (urxSave == null) {
            throw new RuntimeException("Unable to find suitable print form");
        }
//
//        if (stReport.equals("rpp_rekap_cab") || stReport.equals("rpp_rekap_jenis")) {
//            String dateFrom = LanguageManager.getInstance().translate(DateUtil.getDateStr(policyDateFrom, "^yyyy"));
//            String dateTo = LanguageManager.getInstance().translate(DateUtil.getDateStr(policyDateTo, "^yyyy"));
//
//            String filename = stReport + "-" + dateFrom + "-" + dateTo;
//            SessionManager.getInstance().getRequest().setAttribute("SAVE_TO_FILE", "Y");
//            SessionManager.getInstance().getRequest().setAttribute("FILE_NAME", filename);
//            SessionManager.getInstance().getRequest().setAttribute("REPORT_PROD", "Y");
//
//            FOPServlet srv = new FOPServlet();
//            srv.saveFOP(SessionManager.getInstance().getRequest(), SessionManager.getInstance().getResponse(), urxSave);
//
//            //COPY POLIS KE DIRECTORY
//            String filePath = "D:/fin-repository/report_temp/edocument/" + filename + "_temp.pdf";
//            String uploadPath = "uw-" + filename + ".pdf";
////            copyWithFTP(filePath, uploadPath);
//        }

        super.redirect(urx);

    }

    private DTOList loadList() throws Exception {
        //ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING",stPrintForm);
        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        final String queryID = (String) refPropMap.get("QUERY");

        status = (String) refPropMap.get("STATUS");

        if (queryID == null) {
            return defaultQuery();
        } else {
            final Method m = this.getClass().getMethod(queryID, null);

            return (DTOList) m.invoke(this, null);
        }
    }

    public void clickPrintTransfer() throws Exception {

        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        final String queryID = (String) refPropMap.get("QUERY_EXCEL");

        final Method m = this.getClass().getMethod(queryID, null);

        final DTOList data = (DTOList) m.invoke(this, null);

        final DTOList data2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        InsuranceProdukView prod = (InsuranceProdukView) data2.get(0);

        //SessionManager.getInstance().getRequest().setAttribute(queryID, data);

        //getRemoteInsurance().updateABAProdukByDate(data2);
        //if(true) throw new RuntimeException("data= "+prod.getStInsuranceNoPolis());
        //updateABAProdukByDate(data);

        exportExcelTransfer();

    }

    public void exportExcelTransfer() throws Exception {
        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        final String fileName = LanguageManager.getInstance().translate(LOVManager.getInstance().getDescriptionLOV("PROD_PRINTING", stReport), getStLang());

        setStFileName(fileName);

        final String exportID = (String) refPropMap.get("EXPORT");

        final Method m = this.getClass().getMethod(exportID, null);

        m.invoke(this, null);
    }

    public void clickPrintExcel() throws Exception {
        //PostProcessorManager.getInstance().runPolicyProcess();

        final DTOList l = loadListExcel();

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        exportExcel();
    }

    public void exportExcel() throws Exception {
        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        final String exportID = (String) refPropMap.get("EXPORT");

        final String fileName = LanguageManager.getInstance().translate(LOVManager.getInstance().getDescriptionLOV("PROD_PRINTING", stReport), getStLang());

        setStFileName(fileName);

        final Method m = this.getClass().getMethod(exportID, null);

        m.invoke(this, null);
    }

    private DTOList loadListExcel() throws Exception {
        //ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING",stPrintForm);
        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        final String queryID = (String) refPropMap.get("QUERY_EXCEL");


        status = (String) refPropMap.get("STATUS");

        if (queryID == null) {
            return defaultQuery();
        } else {
            final Method m = this.getClass().getMethod(queryID, null);

            return (DTOList) m.invoke(this, null);
        }
    }

    public void EXPORT_RPP() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            InsurancePolicyView pol = (InsurancePolicyView) list.get(i);
            //HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Tanggal Entry");
            row0.createCell(1).setCellValue("Tanggal Polis");
            row0.createCell(2).setCellValue("Periode Awal");
            row0.createCell(3).setCellValue("Periode Akhir");
            row0.createCell(4).setCellValue("Pol_ID");
            row0.createCell(5).setCellValue("Nomor Polis");
            row0.createCell(6).setCellValue("Kodeko");
            row0.createCell(7).setCellValue("Kodeko Fox");
            row0.createCell(8).setCellValue("Nama Tertanggung");
            row0.createCell(9).setCellValue("Nama PP");
            row0.createCell(10).setCellValue("TSI");
            row0.createCell(11).setCellValue("Premi Bruto");
            row0.createCell(12).setCellValue("Biaya Polis");
            row0.createCell(13).setCellValue("Biaya Materai");
            row0.createCell(14).setCellValue("Diskon Premi");
            row0.createCell(15).setCellValue("Komisi");
            row0.createCell(16).setCellValue("Pajak");
            row0.createCell(17).setCellValue("Fee Base");
            row0.createCell(18).setCellValue("Handling Fee");
            row0.createCell(19).setCellValue("Pajak Hfee");
            row0.createCell(20).setCellValue("Brokerage Fee");
            row0.createCell(21).setCellValue("Pajak Bfee");
            row0.createCell(22).setCellValue("Tagihan Netto");
            row0.createCell(23).setCellValue("Kode Relasi");
            row0.createCell(24).setCellValue("KDE");
            row0.createCell(25).setCellValue("APPROVAL");
            row0.createCell(26).setCellValue("KODA");
            row0.createCell(27).setCellValue("PP");
            row0.createCell(28).setCellValue("Entity ID");
            row0.createCell(29).setCellValue("Sumbis");
            row0.createCell(30).setCellValue("Prod ID");
            row0.createCell(31).setCellValue("Pemasar");

            /*
            BigDecimal tagihanNetto = null;
            BigDecimal nd_comm = null;
            BigDecimal nd_taxcomm = null;
            nd_comm         = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm3"));
            nd_taxcomm      = BDUtil.add(h.getFieldValueByFieldNameBD("nd_taxcomm1"), h.getFieldValueByFieldNameBD("nd_taxcomm3"));
            tagihanNetto    = BDUtil.add(h.getFieldValueByFieldNameBD("premi_amt"),h.getFieldValueByFieldNameBD("nd_pcost"));
            tagihanNetto    = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_sfee"));
            tagihanNetto    = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("diskon_premi"));
            tagihanNetto    = BDUtil.sub(tagihanNetto,nd_comm);
            tagihanNetto    = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_hfee"));
            tagihanNetto    = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("brok"));
            tagihanNetto    = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_feebase"));
            tagihanNetto    = BDUtil.add(tagihanNetto,nd_taxcomm);
             */

            BigDecimal tagihanNetto = null;
            BigDecimal nd_comm = null;
            BigDecimal nd_taxcomm = null;
            nd_comm = BDUtil.add(pol.getDbNDComm1(), pol.getDbNDComm3());
            nd_taxcomm = BDUtil.add(pol.getDbNDTaxComm1(), pol.getDbNDTaxComm3());
            tagihanNetto = BDUtil.add(pol.getDbPremiTotal(), pol.getDbNDPCost());
            tagihanNetto = BDUtil.add(tagihanNetto, pol.getDbNDSFee());
            tagihanNetto = BDUtil.sub(tagihanNetto, pol.getDbNDDisc1());
            tagihanNetto = BDUtil.sub(tagihanNetto, nd_comm);
            tagihanNetto = BDUtil.sub(tagihanNetto, pol.getDbNDHFee());
            tagihanNetto = BDUtil.sub(tagihanNetto, pol.getDbNDBrok1());
            tagihanNetto = BDUtil.sub(tagihanNetto, pol.getDbNDFeeBase1());
            tagihanNetto = BDUtil.add(tagihanNetto, nd_taxcomm);

            //bikin isi cell
            /*
            XSSFRow row = sheet.createRow(i+1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("create_date"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ref_ent_id"));
            row.createCell(8).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cust_name")));
            if (h.getFieldValueByFieldNameBD("insured_amount")!=null)
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            if (h.getFieldValueByFieldNameBD("premi_amt")!=null)
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_pcost")!=null)
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_sfee")!=null)
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            if (h.getFieldValueByFieldNameBD("diskon_premi")!=null)
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_comm1")!=null)
            row.createCell(14).setCellValue(nd_comm.doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_feebase")!=null)
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase").doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_hfee")!=null)
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            if (h.getFieldValueByFieldNameBD("brok")!=null)
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            if (h.getFieldValueByFieldNameBD("nd_taxcomm1")!=null)
            row.createCell(18).setCellValue(nd_taxcomm.doubleValue());
            row.createCell(19).setCellValue(tagihanNetto.doubleValue());
            row.createCell(20).setCellValue(String.valueOf(h.getFieldValueByFieldNameBD("prod_id")));
            row.createCell(21).setCellValue(h.getFieldValueByFieldNameST("create_who"));
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("approval_who"));
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            if(getStPolicyTypeGroupID()!=null) {
            if(getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            }
             */

            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(pol.getDtCreateDate());
            row.createCell(1).setCellValue(pol.getDtPolicyDate());
            row.createCell(2).setCellValue(pol.getDtPeriodStart());
            row.createCell(3).setCellValue(pol.getDtPeriodEnd());
            row.createCell(4).setCellValue(pol.getStPolicyID());
            row.createCell(5).setCellValue(pol.getStPolicyNo());
            row.createCell(6).setCellValue(pol.getStConditionID());
            row.createCell(7).setCellValue(pol.getStParentID());
            row.createCell(8).setCellValue(LanguageManager.getInstance().translate(pol.getStCustomerName()));
            if (pol.getStProducerName() != null) {
                row.createCell(9).setCellValue(LanguageManager.getInstance().translate(pol.getStProducerName()));
            }
            if (pol.getDbInsuredAmount() != null) {
                row.createCell(10).setCellValue(pol.getDbInsuredAmount().doubleValue());
            }
            if (pol.getDbPremiTotal() != null) {
                row.createCell(11).setCellValue(pol.getDbPremiTotal().doubleValue());
            }
            if (pol.getDbNDPCost() != null) {
                row.createCell(12).setCellValue(pol.getDbNDPCost().doubleValue());
            }
            if (pol.getDbNDSFee() != null) {
                row.createCell(13).setCellValue(pol.getDbNDSFee().doubleValue());
            }
            if (pol.getDbNDDisc1() != null) {
                row.createCell(14).setCellValue(pol.getDbNDDisc1().doubleValue());
            }
            if (pol.getDbNDComm1() != null) {
                row.createCell(15).setCellValue(nd_comm.doubleValue());
            }
            if (pol.getDbNDTaxComm1() != null) {
                row.createCell(16).setCellValue(nd_taxcomm.doubleValue());
            }
            if (pol.getDbNDFeeBase1() != null) {
                row.createCell(17).setCellValue(pol.getDbNDFeeBase1().doubleValue());
            }
            if (pol.getDbNDHFee() != null) {
                row.createCell(18).setCellValue(pol.getDbNDHFee().doubleValue());
            }
            if (pol.getDbNDTaxHFee() != null) {
                row.createCell(19).setCellValue(pol.getDbNDTaxHFee().doubleValue());
            }
            if (pol.getDbNDBrok1() != null) {
                row.createCell(20).setCellValue(pol.getDbNDBrok1().doubleValue());
            }
            if (pol.getDbNDTaxBrok1() != null) {
                row.createCell(21).setCellValue(pol.getDbNDTaxBrok1().doubleValue());
            }
            row.createCell(22).setCellValue(tagihanNetto.doubleValue());
            row.createCell(23).setCellValue(pol.getStProducerID());
            if (pol.getCreateUser().getStUserName() != null) {
                row.createCell(24).setCellValue(pol.getCreateUser().getStUserName());
            }
            if (pol.getUserApproved().getStUserName() != null) {
                row.createCell(25).setCellValue(pol.getUserApproved().getStUserName());
            }
            row.createCell(26).setCellValue(pol.getStCostCenterCode());
            if (pol.getStReference1() != null) {
                row.createCell(27).setCellValue(pol.getStReference1());
            }
            row.createCell(28).setCellValue(pol.getEntity().getStEntityID());
            row.createCell(29).setCellValue(pol.getEntity().getStEntityName());
            row.createCell(30).setCellValue(pol.getProducer().getStEntityID());
            row.createCell(31).setCellValue(pol.getProducer().getStEntityName());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPPCOMM() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            InsurancePolicyView h = (InsurancePolicyView) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Tanggal Entry");
            row0.createCell(1).setCellValue("Tanggal Polis");
            row0.createCell(2).setCellValue("Pol ID");
            row0.createCell(3).setCellValue("Nomor PP");
            row0.createCell(4).setCellValue("Nomor Polis");
            row0.createCell(5).setCellValue("Kodeko");
            row0.createCell(6).setCellValue("Nama Tertanggung");
            row0.createCell(7).setCellValue("Premi Bruto");
            row0.createCell(8).setCellValue("Biaya Polis");
            row0.createCell(9).setCellValue("Biaya Materai");
            row0.createCell(10).setCellValue("Diskon Premi");
            row0.createCell(11).setCellValue("Komisi 1");
            row0.createCell(12).setCellValue("Komisi 2");
            row0.createCell(13).setCellValue("Komisi 3");
            row0.createCell(14).setCellValue("Komisi 4");
            row0.createCell(15).setCellValue("Fee Base 1");
            row0.createCell(16).setCellValue("Fee Base 2");
            row0.createCell(17).setCellValue("Handling Fee");
            row0.createCell(18).setCellValue("Brokerage Fee 1");
            row0.createCell(19).setCellValue("Brokerage Fee 2");
            row0.createCell(20).setCellValue("Pajak 1");
            row0.createCell(21).setCellValue("Pajak 2");
            row0.createCell(22).setCellValue("Pajak 3");
            row0.createCell(23).setCellValue("Pajak 4");
            row0.createCell(24).setCellValue("Tagihan Netto");
            row0.createCell(25).setCellValue("Kode Relasi");
            row0.createCell(26).setCellValue("KDE");

            BigDecimal tagihanNetto = null;
            /*
            tagihanNetto = BDUtil.add(h.getFieldValueByFieldNameBD("premi_total"),h.getFieldValueByFieldNameBD("nd_pcost"));
            tagihanNetto = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_sfee"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("disc1"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_comm1"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_comm2"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_comm3"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_comm4"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_hfee"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_brok1"));
            tagihanNetto = BDUtil.sub(tagihanNetto,h.getFieldValueByFieldNameBD("nd_brok2"));
            tagihanNetto = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_taxcomm1"));
            tagihanNetto = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_taxcomm2"));
            tagihanNetto = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_taxcomm3"));
            tagihanNetto = BDUtil.add(tagihanNetto,h.getFieldValueByFieldNameBD("nd_taxcomm4"));
             */

            tagihanNetto = BDUtil.add(h.getDbPremiTotal(), h.getDbNDPCost());
            tagihanNetto = BDUtil.add(tagihanNetto, h.getDbNDSFee());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDDisc1());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDComm1());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDComm2());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDComm3());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDComm4());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDHFee());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDBrok1());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDBrok2());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDTaxComm1());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDTaxComm2());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDTaxComm3());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDTaxComm4());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDFeeBase1());
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getDbNDFeeBase2());

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getDtCreateDate());
            row.createCell(1).setCellValue(h.getDtPolicyDate());
            row.createCell(2).setCellValue(String.valueOf(h.getStPolicyID()));
            if (h.getStReference1() != null) {
                row.createCell(3).setCellValue(h.getStReference1());
            }
            row.createCell(4).setCellValue(h.getStPolicyNo());
            row.createCell(5).setCellValue(h.getStEntityID());
            row.createCell(6).setCellValue(LanguageManager.getInstance().translate(h.getStCustomerName()));
            row.createCell(7).setCellValue(h.getDbPremiTotal().doubleValue());
            row.createCell(8).setCellValue(h.getDbNDPCost().doubleValue());
            row.createCell(9).setCellValue(h.getDbNDSFee().doubleValue());
            row.createCell(10).setCellValue(h.getDbNDDisc1().doubleValue());
            if (h.getDbNDComm1() != null) {
                row.createCell(11).setCellValue(h.getDbNDComm1().doubleValue());
            }
            if (h.getDbNDComm2() != null) {
                row.createCell(12).setCellValue(h.getDbNDComm2().doubleValue());
            }
            if (h.getDbNDComm3() != null) {
                row.createCell(13).setCellValue(h.getDbNDComm3().doubleValue());
            }
            if (h.getDbNDComm4() != null) {
                row.createCell(14).setCellValue(h.getDbNDComm4().doubleValue());
            }
            if (h.getDbNDFeeBase1() != null) {
                row.createCell(15).setCellValue(h.getDbNDFeeBase1().doubleValue());
            }
            if (h.getDbNDFeeBase2() != null) {
                row.createCell(16).setCellValue(h.getDbNDFeeBase2().doubleValue());
            }
            if (h.getDbNDHFee() != null) {
                row.createCell(17).setCellValue(h.getDbNDHFee().doubleValue());
            }
            if (h.getDbNDBrok1() != null) {
                row.createCell(18).setCellValue(h.getDbNDBrok1().doubleValue());
            }
            if (h.getDbNDBrok2() != null) {
                row.createCell(19).setCellValue(h.getDbNDBrok2().doubleValue());
            }
            if (h.getDbNDTaxComm1() != null) {
                row.createCell(20).setCellValue(h.getDbNDTaxComm1().doubleValue());
            }
            if (h.getDbNDTaxComm2() != null) {
                row.createCell(21).setCellValue(h.getDbNDTaxComm2().doubleValue());
            }
            if (h.getDbNDTaxComm3() != null) {
                row.createCell(22).setCellValue(h.getDbNDTaxComm3().doubleValue());
            }
            if (h.getDbNDTaxComm4() != null) {
                row.createCell(23).setCellValue(h.getDbNDTaxComm4().doubleValue());
            }
            row.createCell(24).setCellValue(tagihanNetto.doubleValue());
            row.createCell(25).setCellValue(String.valueOf(h.getStProducerID()));
            row.createCell(26).setCellValue(h.getStCreateWho());
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    /*public void EXPORT_RPPCOMM100()  throws Exception {

    //XSSFWorkbook wb = new XSSFWorkbook();
    HSSFWorkbook wb = new HSSFWorkbook();

    //bikin sheet
    //XSSFSheet sheet = wb.createSheet("new sheet");
    HSSFSheet sheet = wb.createSheet("new sheet");

    final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");


    BigDecimal[] komisi = new BigDecimal[4];
    BigDecimal[] taxKomisi = new BigDecimal[4];

    for (int i=0;i< list.size() ; i++){
    InsurancePolicyView policy = (InsurancePolicyView) list.get(i);
    //HashDTO h = (HashDTO) list.get(i);

    //bikin header
    HSSFRow row0 = sheet.createRow(0);
    row0.createCell(0).setCellValue("Kode");
    row0.createCell(1).setCellValue("Cabang");
    row0.createCell(2).setCellValue("Tanggal Entry");
    row0.createCell(3).setCellValue("Tanggal Polis");
    row0.createCell(4).setCellValue("Pol ID");
    row0.createCell(5).setCellValue("Nomor PP");
    row0.createCell(6).setCellValue("Nomor Polis");
    row0.createCell(7).setCellValue("Nama Tertanggung");
    row0.createCell(8).setCellValue("Premi Bruto");
    row0.createCell(9).setCellValue("Biaya Polis");
    row0.createCell(10).setCellValue("Biaya Materai");
    row0.createCell(11).setCellValue("Diskon Premi");
    row0.createCell(12).setCellValue("Komisi A");
    row0.createCell(13).setCellValue("Komisi B");
    row0.createCell(14).setCellValue("Komisi C");
    row0.createCell(15).setCellValue("Komisi D");
    row0.createCell(16).setCellValue("Fee Base 1");
    row0.createCell(17).setCellValue("Fee Base 2");
    row0.createCell(18).setCellValue("Handling Fee");
    row0.createCell(19).setCellValue("Brokerage Fee 1");
    row0.createCell(20).setCellValue("Brokerage Fee 2");
    row0.createCell(21).setCellValue("Pajak A");
    row0.createCell(22).setCellValue("Pajak B");
    row0.createCell(23).setCellValue("Pajak C");
    row0.createCell(24).setCellValue("Pajak D");
    row0.createCell(25).setCellValue("Tagihan Netto");
    row0.createCell(26).setCellValue("Kode Relasi");
    row0.createCell(27).setCellValue("KDE");

    BigDecimal komisi1 = null;
    BigDecimal komisi2 = null;
    BigDecimal komisi3 = null;
    BigDecimal komisi4 = null;
    BigDecimal tax1 = null;
    BigDecimal tax2 = null;
    BigDecimal tax3 = null;
    BigDecimal tax4 = null;

    boolean cekKomisi1 = false;
    boolean cekKomisi2 = false;
    boolean cekKomisi3 = false;
    boolean cekKomisi4 = false;
    boolean cekTax1 = false;
    boolean cekTax2 = false;
    boolean cekTax3 = false;
    boolean cekTax4 = false;

    //DTOList items = h.getDetails(h.getFieldValueByFieldNameST("pol_id"));
    DTOList items = policy.getItems(policy.getStPolicyID());
    for (int k = 0; k < items.size(); k++) {
    InsurancePolicyItemsView item = (InsurancePolicyItemsView) items.get(k);

    if (item.isComission()) ;
    else continue;

    if (komisi1==null) {
    if(item.getTax().getStTaxCode()!=null) {
    if(item.getTax().getStTaxCode().equalsIgnoreCase("2")){
    komisi1 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbAmount());
    tax1 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbTaxAmount());
    cekKomisi1 = true;
    continue;
    }
    }
    }

    if (komisi2==null) {
    if(item.getTax().getStTaxCode()!=null) {
    if(item.getTax().getStTaxCode().equalsIgnoreCase("1")){
    komisi2 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbAmount());
    tax2 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbTaxAmount());
    cekKomisi2 = true;
    continue;
    }
    }
    }

    if (komisi3==null) {
    if(item.getTax().getStTaxCode()!=null) {
    if(item.getTax().getStTaxCode().equalsIgnoreCase("1")){
    komisi3 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbAmount());
    tax3 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbTaxAmount());
    cekKomisi3 = true;
    continue;
    }
    }
    }

    if (komisi4==null) {
    if(item.getTax().getStTaxCode()!=null) {
    if(item.getTax().getStTaxCode().equalsIgnoreCase("1")){
    komisi4 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbAmount());
    tax4 = BDUtil.mul(policy.getDbCurrencyRate(), item.getDbTaxAmount());
    cekKomisi4 = true;
    continue;
    }
    }
    }

    }


    BigDecimal tagihanNetto = null;
    tagihanNetto = BDUtil.add(policy.getDbPremiTotal(),policy.getDbNDPCost());
    tagihanNetto = BDUtil.add(tagihanNetto,policy.getDbNDSFee());
    tagihanNetto = BDUtil.sub(tagihanNetto,policy.getDbNDDisc1());
    tagihanNetto = BDUtil.sub(tagihanNetto,komisi1);
    tagihanNetto = BDUtil.sub(tagihanNetto,komisi2);
    tagihanNetto = BDUtil.sub(tagihanNetto,komisi3);
    tagihanNetto = BDUtil.sub(tagihanNetto,komisi4);
    tagihanNetto = BDUtil.sub(tagihanNetto,policy.getDbNDHFee());
    tagihanNetto = BDUtil.sub(tagihanNetto,policy.getDbNDBrok1());
    tagihanNetto = BDUtil.sub(tagihanNetto,policy.getDbNDBrok2());
    tagihanNetto = BDUtil.add(tagihanNetto,tax1);
    tagihanNetto = BDUtil.add(tagihanNetto,tax2);
    tagihanNetto = BDUtil.add(tagihanNetto,tax3);
    tagihanNetto = BDUtil.add(tagihanNetto,tax4);

    //bikin isi cell
    HSSFRow row = sheet.createRow(i+1);
    row.createCell(0).setCellValue(policy.getStCostCenterCode());
    row.createCell(1).setCellValue(policy.getStDescription());
    row.createCell(2).setCellValue(policy.getDtCreateDate());
    row.createCell(3).setCellValue(policy.getDtPolicyDate());
    row.createCell(4).setCellValue(policy.getStPolicyID());
    if (getStPolicyTypeGroupID()!=null) {
    if (getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
    row.createCell(5).setCellValue(policy.getStReference1());
    }
    }
    row.createCell(6).setCellValue(policy.getStPolicyNo());
    row.createCell(7).setCellValue(policy.getStCustomerName());
    row.createCell(8).setCellValue(policy.getDbPremiTotal().doubleValue());
    row.createCell(9).setCellValue(policy.getDbNDPCost().doubleValue());
    row.createCell(10).setCellValue(policy.getDbNDSFee().doubleValue());
    row.createCell(11).setCellValue(policy.getDbNDDisc1().doubleValue());
    if (komisi1!=null)
    row.createCell(12).setCellValue(komisi1.doubleValue());
    if (komisi2!=null)
    row.createCell(13).setCellValue(komisi2.doubleValue());
    if (komisi3!=null)
    row.createCell(14).setCellValue(komisi3.doubleValue());
    if (komisi4!=null)
    row.createCell(15).setCellValue(komisi4.doubleValue());
    if (policy.getDbNDFeeBase1()!=null)
    row.createCell(16).setCellValue(policy.getDbNDFeeBase1().doubleValue());
    if (policy.getDbNDFeeBase2()!=null)
    row.createCell(17).setCellValue(policy.getDbNDFeeBase2().doubleValue());
    if (policy.getDbNDHFee()!=null)
    row.createCell(18).setCellValue(policy.getDbNDHFee().doubleValue());
    if (policy.getDbNDBrok1()!=null)
    row.createCell(19).setCellValue(policy.getDbNDBrok1().doubleValue());
    if (policy.getDbNDBrok2()!=null)
    row.createCell(20).setCellValue(policy.getDbNDBrok2().doubleValue());
    if (tax1!=null)
    row.createCell(21).setCellValue(tax1.doubleValue());
    if (tax2!=null)
    row.createCell(22).setCellValue(tax2.doubleValue());
    if (tax3!=null)
    row.createCell(23).setCellValue(tax3.doubleValue());
    if (tax4!=null)
    row.createCell(24).setCellValue(tax4.doubleValue());
    row.createCell(25).setCellValue(tagihanNetto.doubleValue());
    row.createCell(26).setCellValue(String.valueOf(policy.getStProducerID()));
    row.createCell(27).setCellValue(policy.getStCreateWho());
    }

    SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    SessionManager.getInstance().getResponse().setHeader("Content-Disposition","attachment; filename="+ getStFileName()+".xls;");
    ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

    wb.write(sosStream);
    sosStream.flush();
    sosStream.close();

    }
     */
    public void btnPrintProd() throws Exception {
        PostProcessorManager.getInstance().runPolicyProcess();

        final DTOList l = loadList();

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        super.redirect("/pages/insurance/prodrpt/prodreport.fop");
    }

    public void btnPrintReminder() throws Exception {

        PostProcessorManager.getInstance().runPolicyProcess();

        final DTOList l = loadList();

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        super.redirect("/pages/insurance/prodrpt/reminderLetters.fop");
    }

    public DTOList NONE() throws Exception {
        return null;
    }

    public DTOList KREASI2() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.cc_code,a.pol_id,a.pol_no,a.pol_type_id,a.policy_date,"
                + "	sum(getpremi(a.status='ENDORSE' and a.create_who='administrator',c.refn4,c.insured_amount)) as insured,"
                + "	sum(c.insured_amount) as insured_amount,"
                + "	count(c.ref1) as jumlah, "
                + "	sum(c.refn2) as premi,sum(c.refn9) as comm1,c.ref8 as entity_id,b.description,"
                + "(select d.share_pct from ins_pol_coins d where d.policy_id = a.pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct");

        sqa.addQuery("   from ins_policy a "
                + "	inner join ins_pol_obj c on c.pol_id = a.pol_id "
                + "	left join ent_master e on e.ent_id = c.ref8::bigint "
                + " left join gl_cost_center b on b.cc_code = a.cc_code ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        //sqa.addClause("c.refn2 <> 0");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stCoinsurerID != null) {
//            sqa.addClause("a.coinsurer_id = ?");
            sqa.addClause("c.ref8 = ?");
            sqa.addPar(stCoinsurerID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stWilayahID != null) {
            if (stWilayahID.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code in ('10','13','17','20','21','22','40','43','70')");
            } else {
                sqa.addClause("a.cc_code not in ('10','13','17','20','21','22','40','43','70')");
            }
        }

        if (stRekapNo != null) {
//            if (stCoinsurerID.equalsIgnoreCase("96")) {
//                sqa.addClause("a.ref3 = ?");
//            } else {
//                sqa.addClause("a.ref4 = ?");
//            }
            sqa.addClause("c.rekap_kreasi = ?");
            sqa.addPar(stRekapNo);
        }


        final String sql = " select *,round(((insured_amount*share_pct)/100),0) as insured_amount,"
                + " round(((premi*share_pct)/100),0) as premi_koas,"
                + " round(((comm1*share_pct)/100),0) as nd_comm1"
                + " from ( " + sqa.getSQL() + " group by a.cc_code,a.pol_id,a.pol_no,a.pol_type_id,a.policy_date,c.ref8,b.description) x "
                + " order by cc_code,pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        if (getStNoUrut() != null) {
            getRemoteInsurance().updateRecapDoubleCoins(l, this);
        }

        return l;

    }

    public DTOList KREASI4() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.attr_pol_id as pol_id,a.attr_pol_no as pol_no,a.refx0 as jumlah,a.attr_pol_tsi_total as insured_amount,"
                + " a.amount as premi_koas,a.no_surat_hutang,a.cc_code,a.ent_id as entity_id,b.description,a.attr_pol_type_id as pol_type_id,"
                + "(select d.share_pct from ins_pol_coins d where d.policy_id = a.attr_pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct,f.division as ref12 ");

        sqa.addQuery(" from ar_invoice a "
                + " inner join ins_policy e on e.pol_id = a.attr_pol_id "
                + " inner join gl_cost_center b on b.cc_code = a.cc_code "
                + " left join s_valueset f on f.vs_code = e.kreasi_type_id and f.vs_group = 'INSOBJ_KREASI_KREDIT' ");

        sqa.addClause("a.ar_trx_type_id = 10");
        sqa.addClause("a.attr_pol_type_id = '21'");
        sqa.addClause("a.refx0 <> '0'");
        sqa.addClause("(coalesce(a.cancel_flag,'') <> 'Y' and coalesce(a.posted_flag,'Y') = 'Y')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.mutation_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.mutation_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stKreasiName != null) {
            sqa.addClause("a.no_surat_hutang = ?");
            sqa.addPar(stKreasiName);
        }

        if (stStatus != null) {
            sqa.addClause("e.status = ?");
            sqa.addPar(stStatus);
        }

        if (stWilayahID != null) {
            if (stWilayahID.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code in ('10','13','17','20','21','22','40','43','70')");
            } else {
                sqa.addClause("a.cc_code not in ('10','13','17','20','21','22','40','43','70')");
            }
        }

        final String sql = "select * "
                + " from ( " + sqa.getSQL() + " ) x order by cc_code,pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList KREASI3() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.cc_code,a.pol_id,a.pol_no,a.pol_type_id,e.ref_ent_id as kreasi_type_id,a.policy_date,a.create_who, "
                + " (select sum(y.insured_amount) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id where x.pol_id = a.pol_id) as insured_amount, "
                + " (select sum(y.refn4) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id where x.pol_id = a.pol_id) as amount, "
                + " (select count(y.ref1) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id where x.pol_id = a.pol_id) as jumlah, "
                + " (select sum(y.refn2)  from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " where x.pol_id = a.pol_id) as premi_koas, "
                + " (select sum(y.refn9) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " where x.pol_id = a.pol_id) as nd_comm1, "
                + " b.description,e.short_name as cust_name, "
                + " (select d.share_pct from ins_pol_coins d where d.policy_id = a.pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ent_master e on e.ent_id = d.entity_id "
                + " left join gl_cost_center b on b.cc_code = a.cc_code ");

        sqa.addClause("d.coins_type = 'COINS_COVER'");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");


        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stEntityID != null) {
            sqa.addClause("d.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stRekapNo != null) {
            sqa.addClause("a.ref3 = ?");
            sqa.addPar(stRekapNo);
        }

        final String sql = "select pol_id,pol_no,pol_type_id,kreasi_type_id,policy_date,insured_amount,create_who,amount,jumlah,((premi_koas*share_pct)/100) as premi_koas,nd_comm1, "
                + " description,cust_name from ( " + sqa.getSQL() + " group by a.cc_code,a.pol_type_id,a.pol_id,a.pol_no,a.create_who,e.ref_ent_id,b.description,e.short_name,d.share_pct,a.policy_date "
                + " ) x order by cc_code,pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        if (getStNoUrut() != null) {
            getRemoteInsurance().updateRecapCoinsNo(l, this);
        }


        return l;

    }

    public DTOList EXPIRED() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.policy_date,a.status,b.ins_pol_obj_id,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end,"
                + "a.pol_no,a.cust_name,b.ref1 as prod_name,(b.insured_amount*a.ccy_rate) as insured_amount,(b.premi_total*a.ccy_rate) as premi_total");

        sqa.addQuery("   from ins_policy a"
                + "	inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "	inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
                + "	left join ent_master e on e.ent_id = a.entity_id "
                + "	left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("c.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = ?");
//            sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = ?");
//            sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = "select * from ( " + sqa.getSQL() + " order by a.policy_date,a.pol_no,b.ins_pol_obj_id "
                + " ) a where a.status IN ('POLICY','ENDORSE','RENEWAL') ";

        if (getPeriodFrom() != null) {
            sql = sql + " and date_trunc('day',a.period_start) >= ?";
            sqa.addPar(periodFrom);
        }

        if (getPeriodTo() != null) {
            sql = sql + " and date_trunc('day',a.period_start) <= ?";
            sqa.addPar(periodTo);
        }

        if (getExpirePeriodFrom() != null) {
            sql = sql + " and date_trunc('day',a.period_end) >= ?";
            sqa.addPar(expirePeriodFrom);
        }

        if (getExpirePeriodTo() != null) {
            sql = sql + " and date_trunc('day',a.period_end) <= ?";
            sqa.addPar(expirePeriodTo);
        }

        sql = sql + " order by a.policy_date,a.pol_no,a.ins_pol_obj_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_EXPIRED() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code as cabang,a.pol_id,b.ins_pol_obj_id,';'||a.pol_no as pol_no,a.policy_date,a.cust_name,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end,"
                + "b.ref1,b.ref2,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9d as kode_pos,b.ref10,b.ref11,b.ref1d,b.ref2d,b.ref3d,b.ref4d,  "
                + "b.ref5d,b.ref6d,b.ref7d,b.ref8d,b.ref11,b.risk_class,b.refd1,b.refd2,b.refd3,f.ins_risk_cat_code,f.description,  "
                + "a.ccy_rate as kurs,getpremi(a.status = 'ENDORSE',a.insured_amount_e,a.insured_amount) as insured_amount,a.premi_total,b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,"
                + "(a.nd_disc1+a.nd_disc2) as diskon,a.status,a.ccy as mata_uang,a.nd_comm1,a.nd_comm2,a.nd_comm3,a.nd_comm4,  "
                + "a.nd_feebase1,a.nd_feebase2,a.nd_brok1,a.nd_brok2,a.nd_hfee, "
                + " (select sum(rate) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id where z.ins_pol_obj_id = b.ins_pol_obj_id ) as rate,"
                + " (select cekstatus(x.ins_cover_id = 1,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 1 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan1, "
                + " (select cekstatus(x.ins_cover_id = 2,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 2 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan2, "
                + " (select cekstatus(x.ins_cover_id = 3,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 3 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan3, "
                + " (select cekstatus(x.ins_cover_id = 4,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 4 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan4, "
                + " (select cekstatus(x.ins_cover_id = 5,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 5 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan5, "
                + " (select cekstatus(x.ins_cover_id = 6,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 6 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan6, "
                + " (select cekstatus(x.ins_cover_id = 7,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 7 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan7, "
                + " (select cekstatus(x.ins_cover_id = 8,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 8 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan8, "
                + " (select cekstatus(x.ins_cover_id = 9,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 9 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan9, "
                + " (select cekstatus(x.ins_cover_id = 10,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 10 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan10, "
                + " (select cekstatus(x.ins_cover_id = 11,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 11 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan11, "
                + " (select cekstatus(x.ins_cover_id = 12,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 12 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan12, "
                + " (select cekstatus(x.ins_cover_id = 13,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 13 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan13, "
                + " (select cekstatus(x.ins_cover_id = 14,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 14 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan14, "
                + " (select cekstatus(x.ins_cover_id = 15,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 15 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan15, "
                + " (select cekstatus(x.ins_cover_id = 16,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 16 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan16, "
                + " (select cekstatus(x.ins_cover_id = 17,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 17 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan17, "
                + " (select cekstatus(x.ins_cover_id = 18,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 18 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan18, "
                + " (select cekstatus(x.ins_cover_id = 19,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 19 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan19, "
                + " (select cekstatus(x.ins_cover_id = 20,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 20 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan20, "
                + " (select cekstatus(x.ins_cover_id = 21,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 21 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan21, "
                + " (select cekstatus(x.ins_cover_id = 22,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 22 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan22, "
                + " (select cekstatus(x.ins_cover_id = 23,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 23 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan23, "
                + " (select cekstatus(x.ins_cover_id = 24,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 24 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan24, "
                + " (select cekstatus(x.ins_cover_id = 25,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 25 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan25, "
                + " (select cekstatus(x.ins_cover_id = 26,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 26 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan26, "
                + " (select cekstatus(x.ins_cover_id = 27,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 27 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan27, "
                + " (select cekstatus(x.ins_cover_id = 28,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 28 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan28, "
                + " (select cekstatus(x.ins_cover_id = 29,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 29 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan29, "
                + " (select cekstatus(x.ins_cover_id = 31,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 31 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan30, "
                + " (select cekstatus(x.ins_cover_id = 33,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 33 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan31, "
                + " (select cekstatus(x.ins_cover_id = 34,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 34 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan32, "
                + " (select cekstatus(x.ins_cover_id = 35,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 35 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan33, "
                + " (select cekstatus(x.ins_cover_id = 36,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 36 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan34, "
                + " (select cekstatus(x.ins_cover_id = 37,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 37 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan35, "
                + " (select cekstatus(x.ins_cover_id = 39,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 39 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan36, "
                + " (select cekstatus(x.ins_cover_id = 40,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 40 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan37, "
                + " (select cekstatus(x.ins_cover_id = 41,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 41 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan38, "
                + " (select cekstatus(x.ins_cover_id = 42,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 42 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan39, "
                + " (select cekstatus(x.ins_cover_id = 43,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 43 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan40, "
                + " (select cekstatus(x.ins_cover_id = 44,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 44 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan41, "
                + " (select cekstatus(x.ins_cover_id = 45,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 45 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan42, "
                + " (select cekstatus(x.ins_cover_id = 46,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 46 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan43, "
                + " (select cekstatus(x.ins_cover_id = 47,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 47 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan44, "
                + " (select cekstatus(x.ins_cover_id = 48,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 48 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan45, "
                + " (select cekstatus(x.ins_cover_id = 49,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 49 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan46, "
                + " (select cekstatus(x.ins_cover_id = 50,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 50 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan47, "
                + " (select cekstatus(x.ins_cover_id = 51,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 51 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan48, "
                + " (select cekstatus(x.ins_cover_id = 52,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 52 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan49, "
                + " (select cekstatus(x.ins_cover_id = 53,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 53 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan50, "
                + " (select cekstatus(x.ins_cover_id = 54,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 54 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan51, "
                + " (select cekstatus(x.ins_cover_id = 55,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 55 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan52, "
                + " (select cekstatus(x.ins_cover_id = 56,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 56 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan53, "
                + " (select cekstatus(x.ins_cover_id = 57,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 57 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan54, "
                + " (select cekstatus(x.ins_cover_id = 58,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 58 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan55, "
                + " (select cekstatus(x.ins_cover_id = 59,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 59 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan56, "
                + " (select cekstatus(x.ins_cover_id = 60,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 60 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan57, "
                + " (select cekstatus(x.ins_cover_id = 61,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 61 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan58, "
                + " (select cekstatus(x.ins_cover_id = 62,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 62 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan59, "
                + " (select cekstatus(x.ins_cover_id = 63,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 63 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan60, "
                + " (select cekstatus(x.ins_cover_id = 64,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 64 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan61, "
                + " (select cekstatus(x.ins_cover_id = 65,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 65 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan62, "
                + " (select cekstatus(x.ins_cover_id = 67,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 67 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan63, "
                + " (select cekstatus(x.ins_cover_id = 68,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 68 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan64, "
                + " (select cekstatus(x.ins_cover_id = 69,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 69 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan65, "
                + " (select cekstatus(x.ins_cover_id = 70,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 70 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan66, "
                + " (select cekstatus(x.ins_cover_id = 72,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 72 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan67, "
                + " (select cekstatus(x.ins_cover_id = 75,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 75 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan68, "
                + " (select cekstatus(x.ins_cover_id = 76,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 76 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan69, "
                + " (select cekstatus(x.ins_cover_id = 78,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 78 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan70, "
                + " (select cekstatus(x.ins_cover_id = 80,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 80 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan71, "
                + " (select cekstatus(x.ins_cover_id = 81,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 81 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan72, "
                + " (select cekstatus(x.ins_cover_id = 83,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 83 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan73, "
                + " (select cekstatus(x.ins_cover_id = 84,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 84 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan74, "
                + " (select cekstatus(x.ins_cover_id = 85,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 85 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan75, "
                + " (select cekstatus(x.ins_cover_id = 86,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 86 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan76, "
                + " (select cekstatus(x.ins_cover_id = 87,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 87 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan77, "
                + " (select cekstatus(x.ins_cover_id = 88,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 88 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan78, "
                + " (select cekstatus(x.ins_cover_id = 89,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 89 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan79, "
                + " (select cekstatus(x.ins_cover_id = 90,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 90 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan80, "
                + " (select cekstatus(x.ins_cover_id = 91,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 91 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan81, "
                + " (select cekstatus(x.ins_cover_id = 92,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 92 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan82, "
                + " (select cekstatus(x.ins_cover_id = 93,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 93 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan83, "
                + " (select cekstatus(x.ins_cover_id = 94,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 94 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan84, "
                + " (select cekstatus(x.ins_cover_id = 95,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 95 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan85, "
                + " (select cekstatus(x.ins_cover_id = 96,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 96 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan86, "
                + " (select cekstatus(x.ins_cover_id = 97,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 97 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan87, "
                + " (select cekstatus(x.ins_cover_id = 98,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 98 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan88, "
                + " (select cekstatus(x.ins_cover_id = 99,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 99 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan89, "
                + " (select cekstatus(x.ins_cover_id = 101,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 101 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan90, "
                + " (select cekstatus(x.ins_cover_id = 102,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 102 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan91, "
                + " (select cekstatus(x.ins_cover_id = 103,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 103 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan92, "
                + " (select cekstatus(x.ins_cover_id = 104,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 104 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan93, "
                + " (select cekstatus(x.ins_cover_id = 105,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 105 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan94, "
                + " (select cekstatus(x.ins_cover_id = 106,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 106 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan95, "
                + " (select cekstatus(x.ins_cover_id = 107,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 107 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan96, "
                + " (select cekstatus(x.ins_cover_id = 108,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 108 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan97, "
                + " (select cekstatus(x.ins_cover_id = 109,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 109 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan98, "
                + " (select cekstatus(x.ins_cover_id = 110,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 110 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan99, "
                + " (select cekstatus(x.ins_cover_id = 112,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 112 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan100, "
                + " (select cekstatus(x.ins_cover_id = 113,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 113 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan101, "
                + " (select cekstatus(x.ins_cover_id = 114,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 114 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan102, "
                + " (select cekstatus(x.ins_cover_id = 115,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 115 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan103, "
                + " (select cekstatus(x.ins_cover_id = 116,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 116 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan104, "
                + " (select cekstatus(x.ins_cover_id = 117,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 117 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan105, "
                + " (select cekstatus(x.ins_cover_id = 118,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 118 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan106, "
                + " (select cekstatus(x.ins_cover_id = 119,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 119 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan107, "
                + " (select cekstatus(x.ins_cover_id = 120,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 120 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan108, "
                + " (select cekstatus(x.ins_cover_id = 121,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 121 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan109, "
                + " (select cekstatus(x.ins_cover_id = 122,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 122 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan110, "
                + " (select cekstatus(x.ins_cover_id = 123,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 123 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan111, "
                + " (select cekstatus(x.ins_cover_id = 124,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 124 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan112, "
                + " (select cekstatus(x.ins_cover_id = 125,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 125 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan113, "
                + " (select cekstatus(x.ins_cover_id = 126,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 126 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan114, "
                + " (select cekstatus(x.ins_cover_id = 127,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 127 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan115, "
                + " (select cekstatus(x.ins_cover_id = 128,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 128 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan116, "
                + " (select cekstatus(x.ins_cover_id = 129,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 129 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan117, "
                + " (select cekstatus(x.ins_cover_id = 130,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 130 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan118, "
                + " (select cekstatus(x.ins_cover_id = 131,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 131 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan119, "
                + " (select cekstatus(x.ins_cover_id = 139,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 139 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan120, "
                + " (select cekstatus(x.ins_cover_id = 140,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 140 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan121, "
                + " (select cekstatus(x.ins_cover_id = 141,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 141 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan122, "
                + " (select cekstatus(x.ins_cover_id = 142,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 142 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan123, "
                + " (select cekstatus(x.ins_cover_id = 143,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 143 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan124, "
                + " (select cekstatus(x.ins_cover_id = 144,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 144 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan125, "
                + " (select cekstatus(x.ins_cover_id = 145,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 145 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan126, "
                + " (select cekstatus(x.ins_cover_id = 146,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 146 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan127, "
                + " (select cekstatus(x.ins_cover_id = 147,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 147 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan128, "
                + " (select cekstatus(x.ins_cover_id = 148,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 148 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan129, "
                + " (select cekstatus(x.ins_cover_id = 204,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 204 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan130, "
                + " (select cekstatus(x.ins_cover_id = 205,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 205 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan131, "
                + " (select cekstatus(x.ins_cover_id = 206,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 206 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan132, "
                + " (select cekstatus(x.ins_cover_id = 207,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 207 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan133, "
                + " (select cekstatus(x.ins_cover_id = 208,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 208 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan134, "
                + " (select cekstatus(x.ins_cover_id = 209,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 209 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan135, "
                + " (select cekstatus(x.ins_cover_id = 210,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 210 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan136, "
                + " (select cekstatus(x.ins_cover_id = 211,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 211 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan137, "
                + " (select cekstatus(x.ins_cover_id = 212,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 212 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan138, "
                + " (select cekstatus(x.ins_cover_id = 213,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 213 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan139, "
                + " (select cekstatus(x.ins_cover_id = 214,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 214 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan140, "
                + " (select cekstatus(x.ins_cover_id = 215,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 215 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan141, "
                + " (select cekstatus(x.ins_cover_id = 216,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 216 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan142, "
                + " (select cekstatus(x.ins_cover_id = 217,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 217 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan143, "
                + " (select cekstatus(x.ins_cover_id = 218,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 218 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan144, "
                + " (select cekstatus(x.ins_cover_id = 219,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 219 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan145, "
                + " (select cekstatus(x.ins_cover_id = 220,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 220 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan146, "
                + " (select cekstatus(x.ins_cover_id = 221,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 221 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan147, "
                + " (select cekstatus(x.ins_cover_id = 222,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 222 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan148, "
                + " (select cekstatus(x.ins_cover_id = 223,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 223 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan149, "
                + " (select cekstatus(x.ins_cover_id = 224,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 224 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan150, "
                + " (select cekstatus(x.ins_cover_id = 225,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 225 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan151, "
                + " (select cekstatus(x.ins_cover_id = 226,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 226 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan152, "
                + " (select cekstatus(x.ins_cover_id = 227,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 227 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan153, "
                + " (select cekstatus(x.ins_cover_id = 228,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 228 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan154, "
                + " (select cekstatus(x.ins_cover_id = 229,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 229 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan155, "
                + " (select cekstatus(x.ins_cover_id = 230,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 230 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan156, "
                + " (select cekstatus(x.ins_cover_id = 231,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 231 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan157, "
                + " (select cekstatus(x.ins_cover_id = 232,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 232 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan158, "
                + " (select cekstatus(x.ins_cover_id = 233,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 233 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan159, "
                + " (select cekstatus(x.ins_cover_id = 234,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 234 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan160, "
                + " (select cekstatus(x.ins_cover_id = 235,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 235 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan161, "
                + " (select cekstatus(x.ins_cover_id = 236,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 236 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan162, "
                + " (select cekstatus(x.ins_cover_id = 237,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 237 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan163 ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join  ins_risk_cat f on f.ins_risk_cat_id = b.ins_risk_cat_id "
                + " left join gl_cost_center c on c.cc_code = a.cc_code "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + " inner join ent_master e on e.ent_id = a.entity_id "
                + " inner join ent_master g on g.ent_id = a.prod_id ");

        sqa.addClause("a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");

//        if (expirePeriodFrom != null) {
//            sqa.addClause("date_trunc('day',a.period_end) >= ? ");
//            sqa.addPar(expirePeriodFrom);
//        }
//
//        if (expirePeriodTo != null) {
//            sqa.addClause("date_trunc('day',a.period_end) <= ? ");
//            sqa.addPar(expirePeriodTo);
//        }
//
//        if (periodFrom != null) {
//            sqa.addClause("date_trunc('day',a.period_start) >= ? ");
//            sqa.addPar(periodFrom);
//        }
//
//        if (periodTo != null) {
//            sqa.addClause("date_trunc('day',a.period_start) <= ? ");
//            sqa.addPar(periodTo);
//        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ? ");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ? ");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ? ");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ? ");
            sqa.addPar(stPolicyTypeGroupID);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = ? ");
//            sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = ? ");
//            sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ? ");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ? ");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("e.ent_id = ? ");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ? ");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("g.ent_id = ? ");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("g.ref2 = ? ");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ? ");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = "select * from ( " + sqa.getSQL() + " order by a.policy_date,a.pol_no,b.ins_pol_obj_id "
                + " ) a where a.status IN ('POLICY','ENDORSE','RENEWAL') ";

        if (getPeriodFrom() != null) {
            sql = sql + " and date_trunc('day',a.period_start) >= ?";
            sqa.addPar(periodFrom);
        }

        if (getPeriodTo() != null) {
            sql = sql + " and date_trunc('day',a.period_start) <= ?";
            sqa.addPar(periodTo);
        }

        if (getExpirePeriodFrom() != null) {
            sql = sql + " and date_trunc('day',a.period_end) >= ?";
            sqa.addPar(expirePeriodFrom);
        }

        if (getExpirePeriodTo() != null) {
            sql = sql + " and date_trunc('day',a.period_end) <= ?";
            sqa.addPar(expirePeriodTo);
        }

        sql = sql + " order by a.policy_date,a.pol_no,a.ins_pol_obj_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_EXPIRED() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("periode mulai");
            row0.createCell(2).setCellValue("periode akhir");
            row0.createCell(3).setCellValue("pol_id");
            row0.createCell(4).setCellValue("tgl polis");
            row0.createCell(5).setCellValue("pol_no");
            row0.createCell(6).setCellValue("tertanggung");
            row0.createCell(7).setCellValue("ref1");
            row0.createCell(8).setCellValue("ref2");
            row0.createCell(9).setCellValue("ref3");
            row0.createCell(10).setCellValue("ref4");
            row0.createCell(11).setCellValue("ref5");
            row0.createCell(12).setCellValue("ref6");
            row0.createCell(13).setCellValue("ref7");
            row0.createCell(14).setCellValue("ref8");
            row0.createCell(15).setCellValue("kode_pos");
            row0.createCell(16).setCellValue("ref10");
            row0.createCell(17).setCellValue("ref11");
            row0.createCell(18).setCellValue("ref1d");
            row0.createCell(19).setCellValue("ref2d");
            row0.createCell(20).setCellValue("ref3d");
            row0.createCell(21).setCellValue("ref4d");
            row0.createCell(22).setCellValue("ref5d");
            row0.createCell(23).setCellValue("ref6d");
            row0.createCell(24).setCellValue("ref7d");
            row0.createCell(25).setCellValue("ref8d");
            row0.createCell(26).setCellValue("ref11");
            row0.createCell(27).setCellValue("risk_class");
            row0.createCell(28).setCellValue("refd1");
            row0.createCell(29).setCellValue("refd2");
            row0.createCell(30).setCellValue("refd3");
            row0.createCell(31).setCellValue("ins_risk_cat_code");
            row0.createCell(32).setCellValue("ins_risk_cat_name");
            row0.createCell(33).setCellValue("period_start");
            row0.createCell(34).setCellValue("period_end");
            row0.createCell(35).setCellValue("status");
            row0.createCell(36).setCellValue("mata_uang");
            row0.createCell(37).setCellValue("kurs");
            row0.createCell(38).setCellValue("insured_amount");
            row0.createCell(39).setCellValue("premi_total");
            row0.createCell(40).setCellValue("insured_amount_obj");
            row0.createCell(41).setCellValue("premi_total_obj");
//            row0.createCell(42).setCellValue("diskon");
//            row0.createCell(43).setCellValue("comm");
//            row0.createCell(44).setCellValue("nd_feebase");
//            row0.createCell(45).setCellValue("nd_brok");
//            row0.createCell(46).setCellValue("nd_hfee");
            row0.createCell(42).setCellValue("rate");
            row0.createCell(43).setCellValue("jaminan/coverage");

            BigDecimal comm1 = null;
            BigDecimal comm2 = null;
            BigDecimal bfee = null;
            BigDecimal feebase = null;
            comm1 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));
            comm2 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_comm4"));
            bfee = BDUtil.add(h.getFieldValueByFieldNameBD("nd_brok1"), h.getFieldValueByFieldNameBD("nd_brok2"));
            feebase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            if (h.getFieldValueByFieldNameDT("period_end") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            }
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (h.getFieldValueByFieldNameST("ref2") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            }
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("ref3"));
            }
            if (h.getFieldValueByFieldNameST("ref4") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("ref4"));
            }
            if (h.getFieldValueByFieldNameST("ref5") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("ref5"));
            }
            if (h.getFieldValueByFieldNameST("ref6") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            }
            if (h.getFieldValueByFieldNameST("ref7") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("ref7"));
            }
            if (h.getFieldValueByFieldNameST("ref8") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("ref8"));
            }
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("kode_pos"));
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameST("ref10"));
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameST("ref11"));
            row.createCell(18).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1d")));
            row.createCell(19).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
            row.createCell(20).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3d")));
            row.createCell(21).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4d")));
            row.createCell(22).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5d")));
            row.createCell(23).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6d")));
            row.createCell(24).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
            row.createCell(25).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8d")));
            row.createCell(26).setCellValue(h.getFieldValueByFieldNameST("ref11"));
            row.createCell(27).setCellValue(h.getFieldValueByFieldNameST("risk_class"));
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(28).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            if (h.getFieldValueByFieldNameDT("refd2") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            }
            if (h.getFieldValueByFieldNameDT("refd3") != null) {
                row.createCell(30).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            }
            row.createCell(31).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            row.createCell(32).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameDT("period_start") != null) {
                row.createCell(33).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            }
            if (h.getFieldValueByFieldNameDT("period_end") != null) {
                row.createCell(34).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            }
            row.createCell(35).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(36).setCellValue(h.getFieldValueByFieldNameST("mata_uang"));
            row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("kurs").doubleValue());
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(38).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(39).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount_obj") != null) {
                row.createCell(40).setCellValue(h.getFieldValueByFieldNameBD("insured_amount_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_obj") != null) {
                row.createCell(41).setCellValue(h.getFieldValueByFieldNameBD("premi_total_obj").doubleValue());
            }
//            if (h.getFieldValueByFieldNameBD("diskon") != null) {
//                row.createCell(42).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
//            }
//            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
//                row.createCell(43).setCellValue(BDUtil.add(comm1, comm2).doubleValue());
//            }
//            if (h.getFieldValueByFieldNameBD("nd_feebase1") != null) {
//                row.createCell(44).setCellValue(feebase.doubleValue());
//            }
//            if (h.getFieldValueByFieldNameBD("nd_brok1") != null) {
//                row.createCell(45).setCellValue(bfee.doubleValue());
//            }
//            if (h.getFieldValueByFieldNameBD("nd_hfee") != null) {
//                row.createCell(46).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
//            }
            if (h.getFieldValueByFieldNameBD("rate") != null) {
                row.createCell(42).setCellValue(h.getFieldValueByFieldNameBD("rate").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jaminan1") != null
                    || h.getFieldValueByFieldNameST("jaminan2") != null
                    || h.getFieldValueByFieldNameST("jaminan3") != null
                    || h.getFieldValueByFieldNameST("jaminan4") != null
                    || h.getFieldValueByFieldNameST("jaminan5") != null
                    || h.getFieldValueByFieldNameST("jaminan6") != null
                    || h.getFieldValueByFieldNameST("jaminan7") != null
                    || h.getFieldValueByFieldNameST("jaminan8") != null
                    || h.getFieldValueByFieldNameST("jaminan9") != null
                    || h.getFieldValueByFieldNameST("jaminan10") != null
                    || h.getFieldValueByFieldNameST("jaminan11") != null
                    || h.getFieldValueByFieldNameST("jaminan12") != null
                    || h.getFieldValueByFieldNameST("jaminan13") != null
                    || h.getFieldValueByFieldNameST("jaminan14") != null
                    || h.getFieldValueByFieldNameST("jaminan15") != null
                    || h.getFieldValueByFieldNameST("jaminan16") != null
                    || h.getFieldValueByFieldNameST("jaminan17") != null
                    || h.getFieldValueByFieldNameST("jaminan18") != null
                    || h.getFieldValueByFieldNameST("jaminan19") != null
                    || h.getFieldValueByFieldNameST("jaminan20") != null
                    || h.getFieldValueByFieldNameST("jaminan21") != null
                    || h.getFieldValueByFieldNameST("jaminan22") != null
                    || h.getFieldValueByFieldNameST("jaminan23") != null
                    || h.getFieldValueByFieldNameST("jaminan24") != null
                    || h.getFieldValueByFieldNameST("jaminan25") != null
                    || h.getFieldValueByFieldNameST("jaminan26") != null
                    || h.getFieldValueByFieldNameST("jaminan27") != null
                    || h.getFieldValueByFieldNameST("jaminan28") != null
                    || h.getFieldValueByFieldNameST("jaminan29") != null
                    || h.getFieldValueByFieldNameST("jaminan30") != null
                    || h.getFieldValueByFieldNameST("jaminan31") != null
                    || h.getFieldValueByFieldNameST("jaminan32") != null
                    || h.getFieldValueByFieldNameST("jaminan33") != null
                    || h.getFieldValueByFieldNameST("jaminan34") != null
                    || h.getFieldValueByFieldNameST("jaminan35") != null
                    || h.getFieldValueByFieldNameST("jaminan36") != null
                    || h.getFieldValueByFieldNameST("jaminan37") != null
                    || h.getFieldValueByFieldNameST("jaminan38") != null
                    || h.getFieldValueByFieldNameST("jaminan39") != null
                    || h.getFieldValueByFieldNameST("jaminan40") != null
                    || h.getFieldValueByFieldNameST("jaminan41") != null
                    || h.getFieldValueByFieldNameST("jaminan42") != null
                    || h.getFieldValueByFieldNameST("jaminan43") != null
                    || h.getFieldValueByFieldNameST("jaminan44") != null
                    || h.getFieldValueByFieldNameST("jaminan45") != null
                    || h.getFieldValueByFieldNameST("jaminan46") != null
                    || h.getFieldValueByFieldNameST("jaminan47") != null
                    || h.getFieldValueByFieldNameST("jaminan48") != null
                    || h.getFieldValueByFieldNameST("jaminan49") != null
                    || h.getFieldValueByFieldNameST("jaminan50") != null
                    || h.getFieldValueByFieldNameST("jaminan51") != null
                    || h.getFieldValueByFieldNameST("jaminan52") != null
                    || h.getFieldValueByFieldNameST("jaminan53") != null
                    || h.getFieldValueByFieldNameST("jaminan54") != null
                    || h.getFieldValueByFieldNameST("jaminan55") != null
                    || h.getFieldValueByFieldNameST("jaminan56") != null
                    || h.getFieldValueByFieldNameST("jaminan57") != null
                    || h.getFieldValueByFieldNameST("jaminan58") != null
                    || h.getFieldValueByFieldNameST("jaminan59") != null
                    || h.getFieldValueByFieldNameST("jaminan60") != null
                    || h.getFieldValueByFieldNameST("jaminan61") != null
                    || h.getFieldValueByFieldNameST("jaminan62") != null
                    || h.getFieldValueByFieldNameST("jaminan63") != null
                    || h.getFieldValueByFieldNameST("jaminan64") != null
                    || h.getFieldValueByFieldNameST("jaminan65") != null
                    || h.getFieldValueByFieldNameST("jaminan66") != null
                    || h.getFieldValueByFieldNameST("jaminan67") != null
                    || h.getFieldValueByFieldNameST("jaminan68") != null
                    || h.getFieldValueByFieldNameST("jaminan69") != null
                    || h.getFieldValueByFieldNameST("jaminan70") != null
                    || h.getFieldValueByFieldNameST("jaminan71") != null
                    || h.getFieldValueByFieldNameST("jaminan72") != null
                    || h.getFieldValueByFieldNameST("jaminan73") != null
                    || h.getFieldValueByFieldNameST("jaminan74") != null
                    || h.getFieldValueByFieldNameST("jaminan75") != null
                    || h.getFieldValueByFieldNameST("jaminan76") != null
                    || h.getFieldValueByFieldNameST("jaminan77") != null
                    || h.getFieldValueByFieldNameST("jaminan78") != null
                    || h.getFieldValueByFieldNameST("jaminan79") != null
                    || h.getFieldValueByFieldNameST("jaminan80") != null
                    || h.getFieldValueByFieldNameST("jaminan81") != null
                    || h.getFieldValueByFieldNameST("jaminan82") != null
                    || h.getFieldValueByFieldNameST("jaminan83") != null
                    || h.getFieldValueByFieldNameST("jaminan84") != null
                    || h.getFieldValueByFieldNameST("jaminan85") != null
                    || h.getFieldValueByFieldNameST("jaminan86") != null
                    || h.getFieldValueByFieldNameST("jaminan87") != null
                    || h.getFieldValueByFieldNameST("jaminan88") != null
                    || h.getFieldValueByFieldNameST("jaminan89") != null
                    || h.getFieldValueByFieldNameST("jaminan90") != null
                    || h.getFieldValueByFieldNameST("jaminan91") != null
                    || h.getFieldValueByFieldNameST("jaminan92") != null
                    || h.getFieldValueByFieldNameST("jaminan93") != null
                    || h.getFieldValueByFieldNameST("jaminan94") != null
                    || h.getFieldValueByFieldNameST("jaminan95") != null
                    || h.getFieldValueByFieldNameST("jaminan96") != null
                    || h.getFieldValueByFieldNameST("jaminan97") != null
                    || h.getFieldValueByFieldNameST("jaminan98") != null
                    || h.getFieldValueByFieldNameST("jaminan99") != null
                    || h.getFieldValueByFieldNameST("jaminan100") != null
                    || h.getFieldValueByFieldNameST("jaminan101") != null
                    || h.getFieldValueByFieldNameST("jaminan102") != null
                    || h.getFieldValueByFieldNameST("jaminan103") != null
                    || h.getFieldValueByFieldNameST("jaminan104") != null
                    || h.getFieldValueByFieldNameST("jaminan105") != null
                    || h.getFieldValueByFieldNameST("jaminan106") != null
                    || h.getFieldValueByFieldNameST("jaminan107") != null
                    || h.getFieldValueByFieldNameST("jaminan108") != null
                    || h.getFieldValueByFieldNameST("jaminan109") != null
                    || h.getFieldValueByFieldNameST("jaminan110") != null
                    || h.getFieldValueByFieldNameST("jaminan111") != null
                    || h.getFieldValueByFieldNameST("jaminan112") != null
                    || h.getFieldValueByFieldNameST("jaminan113") != null
                    || h.getFieldValueByFieldNameST("jaminan114") != null
                    || h.getFieldValueByFieldNameST("jaminan115") != null
                    || h.getFieldValueByFieldNameST("jaminan116") != null
                    || h.getFieldValueByFieldNameST("jaminan117") != null
                    || h.getFieldValueByFieldNameST("jaminan118") != null
                    || h.getFieldValueByFieldNameST("jaminan119") != null
                    || h.getFieldValueByFieldNameST("jaminan120") != null
                    || h.getFieldValueByFieldNameST("jaminan121") != null
                    || h.getFieldValueByFieldNameST("jaminan122") != null
                    || h.getFieldValueByFieldNameST("jaminan123") != null
                    || h.getFieldValueByFieldNameST("jaminan124") != null
                    || h.getFieldValueByFieldNameST("jaminan125") != null
                    || h.getFieldValueByFieldNameST("jaminan126") != null
                    || h.getFieldValueByFieldNameST("jaminan127") != null
                    || h.getFieldValueByFieldNameST("jaminan128") != null
                    || h.getFieldValueByFieldNameST("jaminan129") != null
                    || h.getFieldValueByFieldNameST("jaminan130") != null
                    || h.getFieldValueByFieldNameST("jaminan131") != null
                    || h.getFieldValueByFieldNameST("jaminan132") != null
                    || h.getFieldValueByFieldNameST("jaminan133") != null
                    || h.getFieldValueByFieldNameST("jaminan134") != null
                    || h.getFieldValueByFieldNameST("jaminan135") != null
                    || h.getFieldValueByFieldNameST("jaminan136") != null
                    || h.getFieldValueByFieldNameST("jaminan137") != null
                    || h.getFieldValueByFieldNameST("jaminan138") != null
                    || h.getFieldValueByFieldNameST("jaminan139") != null
                    || h.getFieldValueByFieldNameST("jaminan140") != null
                    || h.getFieldValueByFieldNameST("jaminan141") != null
                    || h.getFieldValueByFieldNameST("jaminan142") != null
                    || h.getFieldValueByFieldNameST("jaminan143") != null
                    || h.getFieldValueByFieldNameST("jaminan144") != null
                    || h.getFieldValueByFieldNameST("jaminan145") != null
                    || h.getFieldValueByFieldNameST("jaminan146") != null
                    || h.getFieldValueByFieldNameST("jaminan147") != null
                    || h.getFieldValueByFieldNameST("jaminan148") != null
                    || h.getFieldValueByFieldNameST("jaminan149") != null
                    || h.getFieldValueByFieldNameST("jaminan150") != null
                    || h.getFieldValueByFieldNameST("jaminan151") != null
                    || h.getFieldValueByFieldNameST("jaminan152") != null
                    || h.getFieldValueByFieldNameST("jaminan153") != null
                    || h.getFieldValueByFieldNameST("jaminan154") != null
                    || h.getFieldValueByFieldNameST("jaminan155") != null
                    || h.getFieldValueByFieldNameST("jaminan156") != null
                    || h.getFieldValueByFieldNameST("jaminan157") != null
                    || h.getFieldValueByFieldNameST("jaminan158") != null
                    || h.getFieldValueByFieldNameST("jaminan159") != null
                    || h.getFieldValueByFieldNameST("jaminan160") != null
                    || h.getFieldValueByFieldNameST("jaminan161") != null
                    || h.getFieldValueByFieldNameST("jaminan162") != null
                    || h.getFieldValueByFieldNameST("jaminan163") != null) {
                row.createCell(43).setCellValue(
                        LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan1")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan2")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan3")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan4")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan5")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan6")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan7")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan8")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan9")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan10")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan11")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan12")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan13")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan14")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan15")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan16")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan17")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan18")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan19")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan20")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan21")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan22")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan23")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan24")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan25")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan26")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan27")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan28")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan29")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan30")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan31")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan32")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan33")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan34")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan35")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan36")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan37")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan38")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan39")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan40")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan41")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan42")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan43")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan44")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan45")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan46")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan47")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan48")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan49")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan50")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan51")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan52")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan53")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan54")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan55")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan56")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan57")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan58")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan59")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan60")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan61")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan62")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan63")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan64")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan65")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan66")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan67")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan68")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan69")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan70")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan71")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan72")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan73")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan74")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan75")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan76")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan77")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan78")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan79")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan80")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan81")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan82")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan83")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan84")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan85")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan86")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan87")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan88")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan89")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan90")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan91")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan92")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan93")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan94")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan95")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan96")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan97")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan98")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan99")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan100")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan101")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan102")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan103")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan104")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan105")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan106")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan107")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan108")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan109")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan110")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan111")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan112")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan113")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan114")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan115")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan116")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan117")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan118")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan119")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan120")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan121")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan122")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan123")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan124")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan125")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan126")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan127")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan128")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan129")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan130")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan131")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan132")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan133")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan134")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan135")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan136")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan137")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan138")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan139")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan140")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan141")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan142")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan143")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan144")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan145")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan146")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan147")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan148")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan149")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan150")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan151")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan152")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan153")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan154")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan155")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan156")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan157")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan158")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan159")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan160")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan161")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan162")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan163")));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_VALID() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "a.policy_date,a.pol_no,a.cust_name,a.status,a.effective_flag, a.ccy,a.ccy_rate,"
                + "b.ins_pol_obj_id,b.description,coalesce(a.f_ri_finish,'N') as f_ri_finish,"
                + "b.insured_amount as insured_amount,b.premi_total as premi_total,b.ref1,a.cc_code,a.pol_type_id,x.refn1,b.ref3d,b.refd3,b.refd6 ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join gl_cost_center3 y on y.cc_code = a.cc_code "
                + "inner join ff_table x on x.ref1 = y.role_id and x.active_flag = 'Y' and x.fft_group_id='CAPA' and x.ref4 is null and x.ref2='ACCEPT' and x.ref3 = a.pol_type_id::varchar ");

//        sqa.addClause("a.status in ('POLICY','RENEWAL')");
        sqa.addClause("a.active_flag = 'Y'");
        sqa.addClause(" (a.f_ri_finish is null or a.effective_flag = 'N') ");

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','RENEWAL')");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("x.ref3 = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stValidasi.equalsIgnoreCase("1")) {
            sqa.addClause(" b.insured_amount < x.refn1 ");
        }

        if (stValidasi.equalsIgnoreCase("2")) {
            sqa.addClause(" b.insured_amount > x.refn1 ");
        }

        final String sql = sqa.getSQL() + " order by a.pol_no,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_VALID() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Tgl Polis");
            row0.createCell(1).setCellValue("No Polis");
            row0.createCell(2).setCellValue("Nama");
            row0.createCell(3).setCellValue("Objek");
            row0.createCell(4).setCellValue("Status Polis");
            row0.createCell(5).setCellValue("Eff Flag");
            row0.createCell(6).setCellValue("R/I Flag");
            row0.createCell(7).setCellValue("Ccy");
            row0.createCell(8).setCellValue("Kurs");
            row0.createCell(9).setCellValue("Insured");
            row0.createCell(10).setCellValue("Premi");
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("60")) {
                    row0.createCell(11).setCellValue("Principal");
                    row0.createCell(12).setCellValue("Awal SPK");
                    row0.createCell(13).setCellValue("Akhir SPK");
                }
            }

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("effective_flag"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("f_ri_finish"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ccy"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("ccy_rate").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("60")) {
                    if (h.getFieldValueByFieldNameST("ref3d") != null) {
                        row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("ref3d"));
                    }
                    if (h.getFieldValueByFieldNameDT("refd3") != null) {
                        row.createCell(12).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
                    }
                    if (h.getFieldValueByFieldNameDT("refd6") != null) {
                        row.createCell(13).setCellValue(h.getFieldValueByFieldNameDT("refd6"));
                    }
                }
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList RPP() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "a.create_date,a.policy_date,a.period_start,a.period_end,a.pol_id,a.create_who,a.prod_id,a.pol_no,b.entity_id as entity_id,a.ref1, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as cust_name, "
                + "getpremiend(b.entity_id,a.insured_amount*a.ccy_rate,0) as insured_amount, "
                + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi_total, "
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as nd_pcost, "
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as nd_sfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0) as nd_ppn, "
                + "getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1) as nd_disc1, "
                + "getpremiend(b.entity_id,(coalesce(a.nd_hfee*a.ccy_rate,0)),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as nd_hfee, "
                + "getpremiend(b.entity_id,(coalesce(a.nd_taxhfee*a.ccy_rate,0)),0) as nd_taxhfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1) as nd_comm1, "
                + "getpremiend(b.entity_id,(coalesce(a.nd_taxcomm1*a.ccy_rate,0)),0) as nd_taxcomm1, "
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1) as nd_brok1, "
                + "getpremiend(b.entity_id,(coalesce(a.nd_taxbrok1*a.ccy_rate,0)),0) as nd_taxbrok1, "
                + "getpremiend(b.entity_id,(coalesce(a.nd_feebase1*a.ccy_rate,0)),0) as nd_feebase1, "
                + "a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,a.payment_company_id ");

        sqa.addQuery(" from ins_policies a "
                + " left join ent_master e on e.ent_id = a.entity_id"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

//        if (stBussinessPolType != null) {
//            if (stBussinessPolType.equalsIgnoreCase("1")) {
//                if (stBranch != null) {
//                    sqa.addClause("a.cc_code = '80' and a.cc_code_source = ?");
//                    sqa.addPar(stBranch);
//                }
//
//                if (stRegion != null) {
//                    sqa.addClause("a.region_id_source = ?");
//                    sqa.addPar(stRegion);
//                }
//            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
//                if (stBranch != null) {
//                    sqa.addClause("a.cc_code = ?");
//                    sqa.addPar(stBranch);
//                }
//
//                if (stRegion != null) {
//                    sqa.addClause("a.region_id = ?");
//                    sqa.addPar(stRegion);
//                }
//            }
//        } else {
//            if (stBranch != null) {
//                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
//                sqa.addPar(stBranch);
//                sqa.addPar(stBranch);
//            }
//            if (stRegion != null) {
//                sqa.addClause("((a.cc_code = ? and a.region_id = ?) or (a.cc_code = '80' and a.cc_code_source = ? and a.region_id_source = ?))");
//                sqa.addPar(stBranch);
//                sqa.addPar(stRegion);
//                sqa.addPar(stBranch);
//                sqa.addPar(stRegion);
//            }
//        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stCoinsurerID != null) {
            sqa.addClause("b.entity_id = ?");
            sqa.addPar(stCoinsurerID);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCustStatus != null) {
            sqa.addClause("e.customer_status = ?");
            sqa.addPar(stCustStatus);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("b.ref12 is null");
        }

        final String sql = sqa.getSQL() + "   order by "
                + "      a.pol_no,b.entity_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPP() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code||i.region_code as koda,a.cc_code_source||m.region_code as koda_nonaks,l.description as cabang_nonaks,a.create_date as tglentry,a.policy_date as tglpolis,a.approved_date as tglsetujui,"
                + "a.period_start as periode_awal,a.period_end as periode_akhir,a.pol_type_id,a.pol_id,';'||a.pol_no as pol_no,a.cust_name as tertanggung,a.entity_id,"
                + "c.ref_ent_id as kodeko,c.short_name as namako,o.vs_description as sumbis,';'||a.ref1 as no_pp,a.ref5 as nama_pp,a.coins_pol_no as no_polis_rujukan,"
                + "getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) as tsi, "
                + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi, "
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as biapol, "
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as biamat, "
                + "getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0) as ppn, "
                + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as jumlah,"
                + "(select string_agg(trim(x.ref1),'|')||'|'||string_agg(trim(x.ref4),'|')||'|'||string_agg(trim(coalesce(x.ref16,'non')),'|') from ins_pol_obj x where x.pol_id = a.pol_id) as debitur,"
                + "getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1) as diskon, "
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as hfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as pajak_hfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1) as comm1, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as pajak_comm1, "
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1) as bfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as pajak_bfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as feebase, "
                + "d.ent_id as tertanggungid,d.ent_name as namatertanggung,"
                + "e.ent_id as sumbisid,e.ent_name as namasumberbisnis,"
                + "n.ent_id as paymentid,n.ent_name as paymentname,"
                + "f.user_name as createwho,g.user_name as approvedwho,h.ent_name as marketingofficer, "
                + "(select string_agg(y.ins_risk_cat_code,'| ') from ( "
                + "select y.ins_risk_cat_code from ins_pol_obj x "
                + "inner join ins_risk_cat y on y.ins_risk_cat_id = x.ins_risk_cat_id "
                + "where x.pol_id = a.pol_id group by y.ins_risk_cat_code ) y ) as risk_code, "
                + "(select string_agg(y.description,'| ') from ( "
                + "select y.description from ins_pol_obj x "
                + "inner join ins_risk_cat y on y.ins_risk_cat_id = x.ins_risk_cat_id "
                + "where x.pol_id = a.pol_id group by y.description ) y ) as risk_code2,j.vs_description as jenis_kredit,"
                + "a.status,(case when e.business_source_code is null then 'Direct' else p.vs_description end ) as bussiness_source_name ");

        sqa.addQuery(" from ins_policies a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + "left join ent_master c on c.ent_id = b.entity_id "
                + "left join ent_master d on d.ent_id = a.entity_id "
                + "left join ent_master e on e.ent_id = a.prod_id "
                + "left join s_users f on f.user_id = a.create_who "
                + "left join s_users g on g.user_id = a.approved_who "
                + "left join ent_master h on h.ent_id::text = a.marketing_officer_who "
                + "left join s_region i on i.region_id = a.region_id "
                + "left join s_valueset j on j.vs_code = a.kreasi_type_id and j.vs_group = 'INSOBJ_KREASI_KREDIT' "
                + "inner join ins_policy_types k on k.pol_type_id = a.pol_type_id "
                + "left join gl_cost_center l on l.cc_code = a.cc_code_source "
                + "left join s_region m on m.region_id = a.region_id_source "
                + "left join ent_master n on n.ent_id = a.payment_company_id::int "
                + "left join s_valueset o on o.vs_code = d.category1 and o.vs_group = 'ASK_BUS_SOURCE' "
                + "left join s_valueset p on p.vs_code = e.business_source_code and p.vs_group = 'BUSINESS_SOURCE_CODE' ");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (stStatus != null) {
            sqa.addClause("a.status = '" + stStatus + "'");
            //sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= '" + appDateFrom + "'");
            //sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= '" + appDateTo + "'");
            //sqa.addPar(appDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("d.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stCoinsurerID != null) {
            sqa.addClause("b.entity_id = '" + stCoinsurerID + "'");
            //sqa.addPar(stCoinsurerID);
        }

        if (stCustStatus != null) {
            sqa.addClause("d.customer_status = '" + stCustStatus + "'");
            //sqa.addPar(stCustStatus);
        }

//        if (stCompTypeID != null) {
//            sqa.addClause("d.ref1 = '" + stCompTypeID + "'");
//            //sqa.addPar(stCompTypeID);
//        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("d.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("d.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) = '" + stPolicyNo + "'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("b.ref12 is null");
        }

        if (stMarketerOffID != null) {
            sqa.addClause("a.marketing_officer_who = '" + stMarketerOffID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stBussinessSourceID != null) {
            sqa.addClause("d.business_source_code = '" + stBussinessSourceID + "'");
//            sqa.addClause("d.business_source_code = ?");
//            sqa.addPar(stBussinessSourceID);
        }

        String sql = "select ';'||koda as koda,tglentry,tglpolis,tglsetujui,periode_awal,periode_akhir,pol_id,pol_no,tertanggung,"
                + "entity_id,';'||kodeko as kodeko,namako,getpremi2(kodeko='00',jumlah) as jml_debitur,"
                + "no_pp,nama_pp,no_polis_rujukan,tsi,premi,biapol,biamat,ppn,diskon,hfee,pajak_hfee,bfee,pajak_bfee,"
                + "comm1 as komisi,pajak_comm1 as pajak_komisi,feebase,((premi+(biapol+biamat)+(pajak_comm1+(pajak_hfee+pajak_bfee)))-((ppn+((diskon+hfee)+comm1)+(bfee+feebase)))) as tagnetto,"
                + "checkstatus(a.pol_type_id in (1,2,19,81,83),a.risk_code,a.risk_code2) as risk_code,jenis_kredit,"
                + "tertanggungid,namatertanggung,sumbisid,namasumberbisnis,createwho,approvedwho,marketingofficer,cekstatus(a.pol_type_id = 59 and a.jumlah=1,debitur) as debitur,a.status,"
                + "sumbis,bussiness_source_name as klasifikasi,';'||koda_nonaks as koda_nonaks,a.paymentid,a.paymentname "
                + "from ( " + sqa.getSQL() + " ) a order by a.koda,a.pol_no,a.entity_id ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_produksi_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    /*
    public DTOList EXCEL_RPP() throws Exception {
    final SQLAssembler sqa = new SQLAssembler();

    sqa.addSelect(
    "a.cc_code,a.create_date,a.policy_date,a.period_start,a.period_end,a.pol_id,e.ent_id as entity_id,a.create_who,a.approved_who,"
    + "a.prod_id,a.pol_no,b.entity_id as condition_id,c.ref_ent_id as parent_id,a.ref1,a.cust_name,a.ref5 as prod_name, "
    + "getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0) as insured_amount, "
    + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi_total, "
    + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as nd_pcost, "
    + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as nd_sfee, "
    + "getpremiend(b.entity_id,((coalesce(a.nd_disc1*a.ccy_rate,0)) + (coalesce(a.nd_disc2*a.ccy_rate,0))),(coalesce(b.disc_amount*a.ccy_rate,0))*-1) as nd_disc1, "
    + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as nd_hfee, "
    + "getpremiend(b.entity_id,(coalesce(a.nd_taxhfee*a.ccy_rate,0)),0) as nd_taxhfee, "
    + "getpremiend(b.entity_id,((coalesce(a.nd_feebase1*a.ccy_rate,0)) + (coalesce(a.nd_feebase2*a.ccy_rate,0))),0) as nd_feebase1,"
    + "getpremiend(b.entity_id,((coalesce(a.nd_brok1*a.ccy_rate,0)) + (coalesce(a.nd_brok2*a.ccy_rate,0))),(coalesce(b.broker_amount*a.ccy_rate,0))*-1) as nd_brok1,"
    + "getpremiend(b.entity_id,(coalesce(a.nd_taxbrok1*a.ccy_rate,0)) + (coalesce(a.nd_taxbrok2*a.ccy_rate,0)),0) as nd_taxbrok1, "
    + "getpremiend(b.entity_id,((coalesce(a.nd_comm1*a.ccy_rate,0)) + (coalesce(a.nd_comm2*a.ccy_rate,0))),(coalesce(b.comm_amount*a.ccy_rate,0))*-1) as nd_comm1, "
    + "getpremiend(b.entity_id,((coalesce(a.nd_comm3*a.ccy_rate,0)) + (coalesce(a.nd_comm4*a.ccy_rate,0))),0) as nd_comm3, "
    + "getpremiend(b.entity_id,(coalesce(a.nd_taxcomm1*a.ccy_rate,0)) + (coalesce(a.nd_taxcomm2*a.ccy_rate,0)),0) as nd_taxcomm1, "
    + "getpremiend(b.entity_id,(coalesce(a.nd_taxcomm3*a.ccy_rate,0)) + (coalesce(a.nd_taxcomm4*a.ccy_rate,0)),0) as nd_taxcomm3 ");

    sqa.addQuery("   from ins_policy a "
    + " left join ent_master e on e.ent_id = a.entity_id"
    + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
    + " left join ent_master c on c.ent_id = b.entity_id "
    + " left join ent_master f on f.ent_id = a.prod_id  ");

    sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
    sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

    if (stStatus != null) {
    sqa.addClause("a.status = ?");
    sqa.addPar(stStatus);
    } else {
    sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
    }

    if (periodFrom != null) {
    sqa.addClause("date_trunc('day',a.period_start) >= ?");
    sqa.addPar(periodFrom);
    }

    if (periodTo != null) {
    sqa.addClause("date_trunc('day',a.period_start) <= ?");
    sqa.addPar(periodTo);
    }

    if (expirePeriodFrom != null) {
    sqa.addClause("date_trunc('day',a.period_end) >= ?");
    sqa.addPar(expirePeriodFrom);
    }

    if (expirePeriodTo != null) {
    sqa.addClause("date_trunc('day',a.period_end) <= ?");
    sqa.addPar(expirePeriodTo);
    }

    if (policyDateFrom != null) {
    sqa.addClause("date_trunc('day',a.policy_date) >= ?");
    sqa.addPar(policyDateFrom);
    }

    if (policyDateTo != null) {
    sqa.addClause("date_trunc('day',a.policy_date) <= ?");
    sqa.addPar(policyDateTo);
    }

    if (appDateFrom != null) {
    sqa.addClause("date_trunc('day',a.approved_date) >= ?");
    sqa.addPar(appDateFrom);
    }

    if (appDateTo != null) {
    sqa.addClause("date_trunc('day',a.approved_date) <= ?");
    sqa.addPar(appDateTo);
    }

    if (stPolicyTypeGroupID != null) {
    sqa.addClause("a.ins_policy_type_grp_id = ?");
    sqa.addPar(stPolicyTypeGroupID);
    }

    if (stPolicyTypeID != null) {
    sqa.addClause("a.pol_type_id = ?");
    sqa.addPar(stPolicyTypeID);
    }

    if (stBranch != null) {
    sqa.addClause("a.cc_code = ?");
    sqa.addPar(stBranch);
    }

    if (stRegion != null) {
    sqa.addClause("a.region_id = ?");
    sqa.addPar(stRegion);
    }

    if (stFltCoverType != null) {
    sqa.addClause("a.cover_type_code = ?");
    sqa.addPar(stFltCoverType);
    }

    if (stCustCategory1 != null) {
    sqa.addClause("e.category1 = ?");
    sqa.addPar(stCustCategory1);
    }

    if (stCoinsurerID != null) {
    sqa.addClause("b.entity_id = ?");
    sqa.addPar(stCoinsurerID);
    }

    if (stCustStatus != null) {
    sqa.addClause("e.customer_status = ?");
    sqa.addPar(stCustStatus);
    }

    if (stEntityID != null) {
    sqa.addClause("a.entity_id = ?");
    sqa.addPar(stEntityID);
    }

    if (stCompanyID != null) {
    sqa.addClause("e.ref2 = ?");
    sqa.addPar(stCompanyID);
    }

    if (stMarketerID != null) {
    sqa.addClause("a.prod_id = ?");
    sqa.addPar(stMarketerID);
    }

    if (stCompanyProdID != null) {
    sqa.addClause("f.ref2 = ?");
    sqa.addPar(stCompanyProdID);
    }

    if (stPolicyNo != null) {
    sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like ?");
    sqa.addPar('%' + stPolicyNo + '%');
    }

    if (stCreateID != null) {
    sqa.addClause("a.create_who = ?");
    sqa.addPar(stCreateID);
    }

    if (Tools.isYes(stABAFlag)) {
    sqa.addClause("b.ref12 is null");
    }

    final String sql = sqa.getSQL() + "   order by "
    + "      a.pol_no,b.entity_id";

    final DTOList l = ListUtil.getDTOListFromQuery(
    sql,
    sqa.getPar(),
    InsurancePolicyView.class);

    SessionManager.getInstance().getRequest().setAttribute("RPT", l);

    return l;

    }
     */
    public DTOList EXCEL_REKAP1() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.category1 as bus_source,a.cc_code,e.description, "
                + " sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi, "
                + " sum(getpremiend(d.entity_id,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon");

        sqa.addQuery(" from       ins_policy a "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join gl_cost_center e on e.cc_code = a.cc_code "
                + "	left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("a.ref12 = 'Y'");
        }

        String sql = " select cc_code,description, "
                + " sum(getkoas(bus_source='1',(premi-diskon))) as umum, "
                + " sum(getkoas(bus_source='2',(premi-diskon))) as pemda, "
                + " sum(getkoas(bus_source='3',(premi-diskon))) as perusda, "
                + " sum(getkoas(bus_source='4',(premi-diskon))) as bpd, "
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc from ( " + sqa.getSQL()
                + " group by b.category1,a.cc_code,e.description "
                + " ) z group by cc_code,description ";

        if (Tools.isYes(stIndex)) {
            sql = sql + " order by premi_total_adisc";
        }

        if (Tools.isNo(stIndex)) {
            sql = sql + " order by cc_code";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_REKAP7() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.category1 as bus_source,a.pol_type_id,e.description, "
                + " sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi, "
                + " sum(getpremiend(d.entity_id,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon");

        sqa.addQuery(" from       ins_policy a "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ins_policy_types e on e.pol_type_id = a.pol_type_id "
                + "	left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("a.ref12 = 'Y'");
        }

        String sql = " select pol_type_id,description, "
                + " sum(getkoas(bus_source='1',(premi-diskon))) as umum, "
                + " sum(getkoas(bus_source='2',(premi-diskon))) as pemda, "
                + " sum(getkoas(bus_source='3',(premi-diskon))) as perusda, "
                + " sum(getkoas(bus_source='4',(premi-diskon))) as bpd, "
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc from ( " + sqa.getSQL()
                + " group by b.category1,a.pol_type_id,e.description "
                + " ) z group by pol_type_id,description ";

        if (Tools.isYes(stIndex)) {
            sql = sql + " order by premi_total_adisc";
        }

        if (Tools.isNo(stIndex)) {
            sql = sql + " order by pol_type_id";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_RPP_JENIS() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" jenis,count(pol_no) as pol_no,status,pol_type_id,sum(jumlah) as jumlah, "
                    + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost, "
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi, "
                    + "sum(nd_hfee) as nd_hfee,sum(nd_comm1) as komisi, "
                    + "sum(brok) as brok,sum(feebase) as feebase,sum(nd_taxcomm1) as tax_comm, "
                    + "sum(nd_taxbrok1) as tax_bfee,sum(nd_taxhfee) as tax_hfee,sum(ppn) as ppn "
                    + "from (  "
                    + "select d.description as jenis,a.status,a.pol_type_id,a.pol_no,a.pol_id, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1)) as insured_amount, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_amt, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                    + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as jumlah,"
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee ");

            sqa.addQuery("   from       ins_policies a "
                    + " inner join ent_master e on e.ent_id = a.entity_id"
                    + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                    + " inner join ent_master f on f.ent_id = a.prod_id ");

            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            sqa.addClause("a.effective_flag='Y'");

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
                //sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
                //sqa.addPar(periodTo);
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
                //sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
                //sqa.addPar(policyDateTo);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = '" + stBranch + "'");

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                    }
                } else {
                    sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = '" + stRegion + "'");
                //sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stCustCategory1 != null) {
                sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
                //sqa.addPar(stCustCategory1);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = '" + stEntityID + "'");
                //sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = '" + stCompanyID + "'");
                //sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = '" + stMarketerID + "'");
                //sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
                //sqa.addPar(stCompanyProdID);
            }

            sql = " select jenis, "
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                    + "sum(checkreas(status='ENDORSE',pol_no)) as endorse,sum(jumlah) as jml_debitur, "
                    + "sum(insured_amount) as insured,sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                    + "sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                    + "sum(brok) as bfee,sum(tax_bfee) as tax_bfee, "
                    + "sum(nd_hfee) as hfee,sum(tax_hfee) as tax_hfee, "
                    + "sum(komisi) as komisi,sum(tax_comm) as tax_comm,"
                    + "sum(feebase) as feebase,sum(ppn) as ppn "
                    + "from ( " + sqa.getSQL() + " group by a.pol_type_id,d.description,a.status,a.pol_no,a.pol_id "
                    + " ) x group by jenis,pol_type_id,status "
                    + " ) x group by jenis,pol_type_id order by pol_type_id ";

            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,pol_type_id,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,status ";

                currentMonth = "select bus_source,a.pol_type_id,a.status,status,sum(polis) as polis,sum(tsi) as tsi,"
                        + "sum(premi) as premi,sum(diskon) as diskon,sum(comm1) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_comm) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat from ( "
                        + "select b.category1 as bus_source,a.pol_type_id,a.cc_code,a.cc_code_source,a.status,count(a.pol_id) as polis,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(d.amount*a.ccy_rate,0)*-1)) as tsi, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(d.disc_amount*a.ccy_rate,0))*-1)) as diskon,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(d.comm_amount*a.ccy_rate,0))*-1)) as comm1, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(d.broker_amount*a.ccy_rate,0))*-1)) as bfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(d.hfee_amount*a.ccy_rate,0)*-1)) as hfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as pajak_comm,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as pajak_bfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as pajak_hfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,pol_type_id,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,a.status ";
            }

            sqa.addSelect(" d.description as jenis,a.pol_type_id,status,sum(polis) as polis,"
                    + "sum(tsi) as tsi,sum(premi) as premi,sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,"
                    + "sum(ppn) as ppn,sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.pol_type_id,a.status ) a group by a.bus_source,a.pol_type_id,a.status ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a "
                    + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            sql = " select jenis,0::numeric as jml_debitur,"
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis,"
                    + "sum(checkreas(status='ENDORSE',polis)) as endorse, "
                    + "sum(tsi) as insured,sum(premi) as premi,sum(biapol) as biapol,"
                    + "sum(biamat) as biamat,sum(diskon) as diskon,"
                    + "sum(hfee) as hfee,sum(bfee) as bfee, "
                    + "sum(komisi) as komisi,sum(feebase) as feebase,sum(ppn) as ppn,"
                    + "sum(pajak_komisi)as tax_comm,sum(pajak_bfee)as tax_bfee,sum(pajak_hfee)as tax_hfee "
                    + "from ( " + sqa.getSQL() + " group by d.description,a.pol_type_id,a.status,a.polis "
                    + " ) x group by jenis,pol_type_id order by pol_type_id ";

        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final SQLAssembler sqa2 = new SQLAssembler();

        sqa2.addSelect(" (case when a.cc_code = '80' then f.description else null end) as cabang_source,"
                + "(case when a.cc_code = '80' then a.cc_code_source else null end) as cc_code_source,"
                + "a.cc_code,e.description as cabang,b.description as jenis,a.pol_type_id,sum(a.claim_amount*a.ccy_rate_claim) as claim_amount ");

        sqa2.addQuery(" from ins_policy a "
                + "inner join ins_policy_types b on b.pol_type_id = a.pol_type_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id  "
                + "inner join gl_cost_center e on e.cc_code = a.cc_code "
                + "left join gl_cost_center f on f.cc_code = a.cc_code_source ");

        sqa2.addClause("a.status IN ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA'");
        sqa2.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa2.addClause("date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'");
            //sqa2.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa2.addClause("date_trunc('day',a.approved_date) <= '" + policyDateTo + "'");
            //sqa2.addPar(policyDateTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa2.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa2.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa2.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa2.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa2.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa2.addClause("a.region_id = '" + stRegion + "'");
            //sqa2.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa2.addClause("c.category1 = '" + stCustCategory1 + "'");
            //sqa2.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa2.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa2.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa2.addClause("c.ref2 = '" + stCompanyID + "'");
            //sqa2.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa2.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa2.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa2.addClause("d.ref2 = '" + stCompanyProdID + "'");
            //sqa2.addPar(stCompanyProdID);
        }

        String sql2 = "select a.cc_code,a.cabang,a.cc_code_source,a.cabang_source,a.jenis,a.pol_type_id,sum(claim_amount) as claim_amount "
                + " from  ( " + sqa2.getSQL() + " group by a.cc_code,e.description,a.cc_code_source,f.description,b.description,a.pol_type_id "
                + "order by a.cc_code,a.cc_code_source,a.pol_type_id "
                + " ) a group by a.cc_code,a.cabang,a.cabang_source,a.cc_code_source,a.jenis,a.pol_type_id "
                + "order by a.cc_code,a.cc_code_source,a.pol_type_id ";

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa2.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        final SQLAssembler sqa3 = new SQLAssembler();
        String sql3 = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa3.addSelect(" cabang,jenis,count(pol_no) as pol_no,status,pol_type_id,cc_code,sum(jumlah) as jumlah, " /*cabang_source,cc_code_source,*/
                    + "(case when cc_code = '80' then cabang_source else null end) as cabang_source,"
                    + "(case when cc_code = '80' then cc_code_source else null end) as cc_code_source,"
                    + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost, "
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi, "
                    + "sum(nd_hfee) as nd_hfee,sum(nd_comm1) as komisi, "
                    + "sum(brok) as brok,sum(feebase) as feebase,sum(nd_taxcomm1) as tax_comm, "
                    + "sum(nd_taxbrok1) as tax_bfee,sum(nd_taxhfee) as tax_hfee,sum(ppn) as ppn "
                    + "from (  "
                    + "select d.description as jenis,c.description as cabang,g.description as cabang_source,a.status,a.pol_type_id,a.cc_code,a.cc_code_source,a.pol_no,a.pol_id, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1)) as insured_amount, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_amt, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                    + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as jumlah,"
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee ");

            sqa3.addQuery("   from       ins_policies a "
                    + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                    + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                    + " inner join ent_master e on e.ent_id = a.entity_id"
                    + " inner join ent_master f on f.ent_id = a.prod_id "
                    + " left join gl_cost_center g on g.cc_code = a.cc_code_source ");

            sqa3.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa3.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            sqa3.addClause("a.effective_flag='Y'");

            if (policyDateFrom != null) {
                sqa3.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
                //sqa3.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa3.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
                //sqa3.addPar(policyDateTo);
            }

            if (stCustCategory1 != null) {
                sqa3.addClause("e.category1 = '" + stCustCategory1 + "'");
                //sqa3.addPar(stCustCategory1);
            }

            if (stEntityID != null) {
                sqa3.addClause("a.entity_id = '" + stEntityID + "'");
                //sqa3.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa3.addClause("e.ref2 = '" + stCompanyID + "'");
                //sqa3.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa3.addClause("a.prod_id = '" + stMarketerID + "'");
                //sqa3.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa3.addClause("f.ref2 = '" + stCompanyProdID + "'");
                //sqa3.addPar(stCompanyProdID);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa3.addClause("a.cc_code = '" + stBranch + "'");

                    if (stBranchSource != null) {
                        sqa3.addClause("a.cc_code_source = '" + stBranchSource + "'");
                    }
                    if (stRegionSource != null) {
                        sqa3.addClause("a.region_id_source = '" + stRegionSource + "'");
                    }
                } else {
                    sqa3.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
                }
                //sqa3.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa3.addClause("a.region_id = '" + stRegion + "'");
                //sqa3.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa3.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa3.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa3.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa3.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa3.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            sql3 = " select cabang,cabang_source,jenis, "
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                    + "sum(checkreas(status='ENDORSE',pol_no)) as endorse,sum(jumlah) as jml_debitur, "
                    + "sum(insured_amount) as insured,sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                    + "sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                    + "sum(brok) as bfee,sum(tax_bfee) as tax_bfee, "
                    + "sum(nd_hfee) as hfee,sum(tax_hfee) as tax_hfee, "
                    + "sum(komisi) as komisi,sum(tax_comm) as tax_comm,"
                    + "sum(feebase) as feebase,sum(ppn) as ppn "
                    + "from ( " + sqa3.getSQL() + " group by a.pol_type_id,a.cc_code,a.cc_code_source,d.description,c.description,g.description,a.status,a.pol_no,a.pol_id "
                    + " ) x group by cabang,cabang_source,jenis,pol_type_id,cc_code,cc_code_source,status "
                    + " ) x group by cabang,cabang_source,jenis,pol_type_id,cc_code,cc_code_source order by cc_code,cc_code_source,pol_type_id ";

            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,a.cc_code,a.cc_code_source,pol_type_id,cc_code,cc_code_source,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,cc_code,cc_code_source,status ";

                currentMonth = "select bus_source,a.pol_type_id,cc_code,cc_code_source,a.status,status,sum(polis) as polis,sum(tsi) as tsi,"
                        + "sum(premi) as premi,sum(diskon) as diskon,sum(comm1) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_comm) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat from ( "
                        + "select b.category1 as bus_source,a.pol_type_id,a.cc_code,a.cc_code_source,a.status,count(a.pol_id) as polis,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(d.amount*a.ccy_rate,0)*-1)) as tsi, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(d.disc_amount*a.ccy_rate,0))*-1)) as diskon,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(d.comm_amount*a.ccy_rate,0))*-1)) as comm1, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(d.broker_amount*a.ccy_rate,0))*-1)) as bfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(d.hfee_amount*a.ccy_rate,0)*-1)) as hfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as pajak_comm,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as pajak_bfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as pajak_hfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,a.cc_code,a.cc_code_source,pol_type_id,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,cc_code,cc_code_source,a.status ";
            }

            sqa3.addSelect(" a.cc_code,a.cc_code_source,d.description as jenis,c.description as cabang,g.description as cabang_source,a.pol_type_id,status,sum(polis) as polis,"
                    + "sum(tsi) as tsi,sum(premi) as premi,sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,"
                    + "sum(ppn) as ppn,sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.pol_type_id,cc_code,cc_code_source,a.status ) a group by a.bus_source,a.pol_type_id,cc_code,cc_code_source,a.status ";
            } else {
                addQuery = beforeMonth;
            }

            sqa3.addQuery(" from (" + addQuery + ") a "
                    + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                    + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                    + " left join gl_cost_center g on g.cc_code = a.cc_code_source ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            sql3 = " select cabang,cabang_source,jenis,0::numeric as jml_debitur, "
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                    + "sum(checkreas(status='ENDORSE',polis)) as endorse, "
                    + "sum(tsi) as insured,sum(premi) as premi,sum(biapol) as biapol,"
                    + "sum(biamat) as biamat,sum(diskon) as diskon,"
                    + "sum(bfee) as bfee,sum(pajak_bfee) as tax_bfee, "
                    + "sum(hfee) as hfee,sum(pajak_hfee) as tax_hfee, "
                    + "sum(komisi) as komisi,sum(pajak_komisi) as tax_comm,"
                    + "sum(feebase) as feebase,sum(ppn) as ppn "
                    + "from ( " + sqa3.getSQL() + " group by a.pol_type_id,a.cc_code,a.cc_code_source,d.description,c.description,g.description,a.status,a.polis "
                    + " ) x group by cabang,cabang_source,jenis,pol_type_id,cc_code,cc_code_source order by cc_code,cc_code_source,pol_type_id ";

        }

        final DTOList l3 = ListUtil.getDTOListFromQuery(
                sql3,
                sqa3.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT3", l3);

        return l;

        /*SQLUtil S = new SQLUtil();

        String nama_file = "rekap_jenis_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
        + sql
        + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
        outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();*/

    }

    public DTOList RPP_JENIS() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" pol_type_id,count(pol_no) as pol_no,status, "
                    + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost, "
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi, "
                    + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi, "
                    + "sum(brok) as brok,sum(tax) as tax "
                    + "from (  "
                    + "select a.status,a.pol_type_id,a.pol_no, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1)) as insured_amount, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_amt, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as diskon_premi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as nd_feebase1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),((coalesce(b.comm_amount,0))*a.ccy_rate)*-1)) as komisi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(b.broker_amount*a.ccy_rate)*-1)) as brok, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as tax ");

            sqa.addQuery("   from       ins_policies a "
                    + "	inner join ent_master e on e.ent_id = a.entity_id"
                    + "	inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + "	left join ent_master f on f.ent_id = a.prod_id ");

            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            //sqa.addClause("a.pol_type_id in (21,59)");
            //sqa.addClause("e.category1 = '4'");

            boolean isClaim = "CLAIM".equalsIgnoreCase(status);

            if (FLT_CLAIM_STATUS != null) {
                sqa.addClause("a.claim_status = ?");
                sqa.addPar(FLT_CLAIM_STATUS);
            }

            boolean displayEffective = true;

            if (isClaim && stFltClaimStatus != null) {
                displayEffective = false;
            }

            if (displayEffective) {
                sqa.addClause("a.effective_flag='Y'");
            }

            if (isClaim) {
                sqa.addClause("a.status in(?,?)");
                sqa.addPar(FinCodec.PolicyStatus.CLAIM);
                sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stCustCategory1 != null) {
                sqa.addClause("e.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            sql = " select pol_type_id,"
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis,"
                    + "sum(checkreas(status='ENDORSE',pol_no)) as jumlah, "
                    + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,"
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,"
                    + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi,"
                    + "sum(brok) as brok,sum(tax) as tax "
                    + "from ( " + sqa.getSQL() + " group by a.pol_type_id,a.status,a.pol_no "
                    + " ) x group by pol_type_id,status "
                    + " ) x group by pol_type_id order by pol_type_id ";

            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,pol_type_id,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,status ";

                currentMonth = "select bus_source,a.pol_type_id,a.status,status,sum(polis) as polis,sum(tsi) as tsi,"
                        + "sum(premi) as premi,sum(diskon) as diskon,sum(comm1) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_comm) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.cc_code_source,a.status,count(a.pol_id) as polis,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(d.amount*a.ccy_rate,0)*-1)) as tsi, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(d.disc_amount*a.ccy_rate,0))*-1)) as diskon,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(d.comm_amount*a.ccy_rate,0))*-1)) as comm1, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(d.broker_amount*a.ccy_rate,0))*-1)) as bfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(d.hfee_amount*a.ccy_rate,0)*-1)) as hfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as pajak_comm,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as pajak_bfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as pajak_hfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,pol_type_id,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.pol_type_id,a.status ";
            }

            sqa.addSelect(" a.pol_type_id,status,sum(polis) as polis,"
                    + "sum(tsi) as tsi,sum(premi) as premi,sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,"
                    + "sum(ppn) as ppn,sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.pol_type_id,a.status ) a group by a.bus_source,a.pol_type_id,a.status ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            sql = " select pol_type_id,"
                    + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis,"
                    + "sum(checkreas(status='ENDORSE',polis)) as jumlah, "
                    + "sum(tsi) as insured_amount,sum(premi) as premi_amt,sum(biapol) as nd_pcost,"
                    + "sum(biamat) as nd_sfee,sum(diskon) as diskon_premi,"
                    + "sum(hfee) as nd_hfee,sum(bfee) as brok, "
                    + "sum(komisi) as komisi,sum(feebase) as nd_feebase1,sum(ppn) as ppn,"
                    + "sum(coalesce(pajak_komisi,0)+coalesce(pajak_bfee,0)+coalesce(pajak_hfee,0)) as tax "
                    + "from ( " + sqa.getSQL() + " group by a.pol_type_id,a.status,a.polis "
                    + " ) x group by pol_type_id order by pol_type_id ";

        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList RPP_CABANG() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" cc_code,cc_code_source,count(pol_no) as pol_no,status,"
                    + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,  "
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                    + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi,  "
                    + "sum(brok) as brok,sum(tax) as tax "
                    + "from (  "
                    + "select a.status,a.cc_code,a.cc_code_source,a.pol_no, "
                    + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,b.premi_amt*a.ccy_rate*-1)) as premi_amt, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost,0)*a.ccy_rate,0)) as nd_pcost, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee,0)*a.ccy_rate,0)) as nd_sfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as diskon_premi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as nd_feebase1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee,  "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),((coalesce(b.comm_amount,0))*a.ccy_rate)*-1)) as komisi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(b.broker_amount*a.ccy_rate)*-1)) as brok, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as tax ");

            sqa.addQuery("   from       ins_policies a "
                    + "	inner join ent_master e on e.ent_id = a.entity_id"
                    + "	left join ins_pol_coins b on b.policy_id = a.pol_id "
                    + "	left join ent_master f on f.ent_id = a.prod_id ");

            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

            boolean isClaim = "CLAIM".equalsIgnoreCase(status);

            if (FLT_CLAIM_STATUS != null) {
                sqa.addClause("a.claim_status = ?");
                sqa.addPar(FLT_CLAIM_STATUS);
            }

            boolean displayEffective = true;

            if (isClaim && stFltClaimStatus != null) {
                displayEffective = false;
            }

            if (displayEffective) {
                sqa.addClause("a.effective_flag='Y'");
            }

            if (isClaim) {
                sqa.addClause("a.status in(?,?)");
                sqa.addPar(FinCodec.PolicyStatus.CLAIM);
                sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stCustCategory1 != null) {
                sqa.addClause("e.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCompTypeID != null) {
                String type = null;
                if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                    type = "('93','98')";
                } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                    type = "('89','97')";
                } else {
                    type = "('" + stCompTypeID + "')";
                }
                sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stBussinessPolType == null) {
                sql = " select cc_code,"
                        + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as polis,"
                        + "coalesce(sum(checkreas(status='ENDORSE',pol_no)),0) as jumlah, "
                        + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,  "
                        + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                        + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi,  "
                        + "sum(brok) as brok,sum(tax) as tax "
                        + "from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,a.status,a.pol_no "
                        + " ) x group by cc_code,cc_code_source,status "
                        + " ) x group by cc_code order by cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = " select cc_code_source as cc_code,"
                            + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as polis,"
                            + "coalesce(sum(checkreas(status='ENDORSE',pol_no)),0) as jumlah, "
                            + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,  "
                            + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                            + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi,  "
                            + "sum(brok) as brok,sum(tax) as tax "
                            + "from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,a.status,a.pol_no "
                            + " ) x group by cc_code,cc_code_source,status "
                            + " ) x group by cc_code,cc_code_source order by cc_code,cc_code_source ";
                } else {
                    sql = " select cc_code,"
                            + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as polis,"
                            + "coalesce(sum(checkreas(status='ENDORSE',pol_no)),0) as jumlah, "
                            + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,  "
                            + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                            + "sum(nd_hfee) as nd_hfee,sum(nd_feebase1) as nd_feebase1,sum(komisi) as komisi,  "
                            + "sum(brok) as brok,sum(tax) as tax "
                            + "from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,a.status,a.pol_no "
                            + " ) x group by cc_code,cc_code_source,status "
                            + " ) x group by cc_code order by cc_code ";
                }
            }
            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,cc_code,cc_code_source,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,status,a.cc_code_source ";

                currentMonth = "select bus_source,a.cc_code,a.cc_code_source,a.status,status,sum(polis) as polis,sum(tsi) as tsi,"
                        + "sum(premi) as premi,sum(diskon) as diskon,sum(comm1) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_comm) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.cc_code_source,a.status,count(a.pol_id) as polis,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(d.amount*a.ccy_rate,0)*-1)) as tsi, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(d.disc_amount*a.ccy_rate,0))*-1)) as diskon,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(d.comm_amount*a.ccy_rate,0))*-1)) as comm1, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(d.broker_amount*a.ccy_rate,0))*-1)) as bfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(d.hfee_amount*a.ccy_rate,0)*-1)) as hfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as pajak_comm,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as pajak_bfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as pajak_hfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,cc_code,cc_code_source,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source,a.status ";
            }

            sqa.addSelect(" bus_source,c.description as cabang,a.cc_code,d.description as cabang_nonaks,status,sum(polis) as polis,"
                    + "sum(tsi) as tsi,sum(premi) as premi,sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,"
                    + "sum(ppn) as ppn,sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.cc_code_source,a.status ) a group by a.bus_source,a.cc_code,a.cc_code_source,a.status ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a "
                    + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                    + " left join gl_cost_center d on d.cc_code = a.cc_code_source ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            if (stBussinessPolType == null) {
                sql = " select cc_code, "
                        + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                        + "sum(checkreas(status='ENDORSE',polis)) as jumlah, "
                        + "sum(premi) as premi_amt,sum(biapol) as nd_pcost,"
                        + "sum(biamat) as nd_sfee,sum(diskon) as diskon_premi,"
                        + "sum(hfee) as nd_hfee,sum(bfee) as brok, "
                        + "sum(komisi) as komisi,sum(feebase) as nd_feebase1,sum(ppn) as ppn,"
                        + "sum(coalesce(pajak_komisi,0)+coalesce(pajak_bfee,0)+coalesce(pajak_hfee,0)) as tax "
                        + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                        + " ) x group by cc_code order by cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = " select cc_code_source as cc_code,"
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                            + "sum(checkreas(status='ENDORSE',polis)) as jumlah, "
                            + "sum(premi) as premi_amt,sum(biapol) as nd_pcost,"
                            + "sum(biamat) as nd_sfee,sum(diskon) as diskon_premi,"
                            + "sum(hfee) as nd_hfee,sum(bfee) as brok, "
                            + "sum(komisi) as komisi,sum(feebase) as nd_feebase1,sum(ppn) as ppn,"
                            + "sum(coalesce(pajak_komisi,0)+coalesce(pajak_bfee,0)+coalesce(pajak_hfee,0)) as tax "
                            + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                            + " ) x group by cc_code_source order by cc_code_source ";
                } else {
                    sql = " select cc_code,"
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                            + "sum(checkreas(status='ENDORSE',polis)) as jumlah, "
                            + "sum(premi) as premi_amt,sum(biapol) as nd_pcost,"
                            + "sum(biamat) as nd_sfee,sum(diskon) as diskon_premi,"
                            + "sum(hfee) as nd_hfee,sum(bfee) as brok, "
                            + "sum(komisi) as komisi,sum(feebase) as nd_feebase1,sum(ppn) as ppn,"
                            + "sum(coalesce(pajak_komisi,0)+coalesce(pajak_bfee,0)+coalesce(pajak_hfee,0)) as tax "
                            + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                            + " ) x group by cc_code order by cc_code ";
                }
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPP_CABANG() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" cabang,cabang_nonaks,count(pol_no) as pol_no,status,cc_code,cc_code_source, "
                    + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost, "
                    + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi, "
                    + "sum(nd_hfee) as nd_hfee,sum(nd_comm1) as komisi, "
                    + "sum(brok) as brok,sum(feebase) as feebase,sum(nd_taxcomm1) as nd_taxcomm1,"
                    + "sum(nd_taxbrok1) as nd_taxbrok1,sum(nd_taxhfee) as nd_taxhfee,sum(ppn) as ppn "
                    + "from (  "
                    + "select c.description as cabang,a.status,a.cc_code,d.description as cabang_nonaks,a.cc_code_source,a.pol_no, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1)) as insured_amount, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_amt, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
                    + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase ");

            sqa.addQuery(" from ins_policies a "
                    + " inner join ent_master e on e.ent_id = a.entity_id"
                    + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                    + " left join gl_cost_center d on d.cc_code = a.cc_code_source "
                    + " inner join ent_master f on f.ent_id = a.prod_id ");

            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            sqa.addClause("a.effective_flag='Y'");

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
                //sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
                //sqa.addPar(periodTo);
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
                //sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
                //sqa.addPar(policyDateTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
                //sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
                //sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
                //sqa.addPar(stFltCoverType);
            }

            if (stCustCategory1 != null) {
                sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
                //sqa.addPar(stCustCategory1);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = '" + stEntityID + "'");
                //sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = '" + stCompanyID + "'");
                //sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = '" + stMarketerID + "'");
                //sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
                //sqa.addPar(stCompanyProdID);
            }

            if (stCompTypeID != null) {
                String type = null;
                if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                    type = "('93','98')";
                } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                    type = "('89','97')";
                } else {
                    type = "('" + stCompTypeID + "')";
                }
                sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stBussinessPolType == null) {
                sql = " select cabang, "
                        + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                        + "sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
                        + "sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                        + "sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                        + "sum(nd_hfee) as hfee,sum(nd_taxhfee) as taxhfee,"
                        + "sum(brok) as bfee,sum(nd_taxbrok1) as taxbrok, "
                        + "sum(komisi) as komisi,sum(nd_taxcomm1) as taxcomm, "
                        + "sum(feebase) as feebase,sum(ppn) as ppn "
                        + " from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,c.description,d.description,a.status,a.pol_no "
                        + " ) x group by cabang,cabang_nonaks,cc_code,cc_code_source,status "
                        + " ) x group by cabang,cc_code order by cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = " select cabang,cabang_nonaks, "
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                            + "sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
                            + "sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                            + "sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                            + "sum(nd_hfee) as hfee,sum(nd_taxhfee) as taxhfee,"
                            + "sum(brok) as bfee,sum(nd_taxbrok1) as taxbrok, "
                            + "sum(komisi) as komisi,sum(nd_taxcomm1) as taxcomm, "
                            + "sum(feebase) as feebase,sum(ppn) as ppn "
                            + " from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,c.description,d.description,a.status,a.pol_no "
                            + " ) x group by cabang,cabang_nonaks,cc_code,cc_code_source,status "
                            + " ) x group by cabang,cabang_nonaks,cc_code,cc_code_source order by cc_code,cc_code_source ";
                } else {
                    sql = " select cabang, "
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                            + "sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
                            + "sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                            + "sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                            + "sum(nd_hfee) as hfee,sum(nd_taxhfee) as taxhfee,"
                            + "sum(brok) as bfee,sum(nd_taxbrok1) as taxbrok, "
                            + "sum(komisi) as komisi,sum(nd_taxcomm1) as taxcomm, "
                            + "sum(feebase) as feebase,sum(ppn) as ppn "
                            + " from ( " + sqa.getSQL() + " group by a.cc_code,a.cc_code_source,c.description,d.description,a.status,a.pol_no "
                            + " ) x group by cabang,cabang_nonaks,cc_code,cc_code_source,status "
                            + " ) x group by cabang,cc_code order by cc_code ";
                }
            }
            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,cc_code,cc_code_source,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,status,a.cc_code,a.cc_code_source ";

                currentMonth = "select bus_source,a.cc_code,a.cc_code_source,a.status,status,sum(polis) as polis,sum(tsi) as tsi,"
                        + "sum(premi) as premi,sum(diskon) as diskon,sum(comm1) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_comm) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.cc_code_source,a.status,count(a.pol_id) as polis,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(d.amount*a.ccy_rate,0)*-1)) as tsi, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(d.disc_amount*a.ccy_rate,0))*-1)) as diskon,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(d.comm_amount*a.ccy_rate,0))*-1)) as comm1, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(d.broker_amount*a.ccy_rate,0))*-1)) as bfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(d.hfee_amount*a.ccy_rate,0)*-1)) as hfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as pajak_comm,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as pajak_bfee,  "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as pajak_hfee,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,cc_code,cc_code_source,status,sum(polis) as polis,sum(tsi) as tsi,sum(preto) as premi,"
                        + "sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,sum(ppn) as ppn,"
                        + "sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source,a.status ";
            }

            sqa.addSelect(" bus_source,c.description as cabang,a.cc_code,d.description as cabang_nonaks,status,sum(polis) as polis,"
                    + "sum(tsi) as tsi,sum(premi) as premi,sum(diskon) as diskon,sum(komisi) as komisi,sum(bfee) as bfee,sum(hfee) as hfee,sum(feebase) as feebase,"
                    + "sum(ppn) as ppn,sum(pajak_komisi) as pajak_komisi,sum(pajak_bfee) as pajak_bfee,sum(pajak_hfee) as pajak_hfee,sum(biapol) as biapol,sum(biamat) as biamat ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.cc_code_source,a.status ) a group by a.bus_source,a.cc_code,a.cc_code_source,a.status ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a "
                    + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                    + " left join gl_cost_center d on d.cc_code = a.cc_code_source ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            if (stBussinessPolType == null) {
                sql = " select cabang, "
                        + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                        + "sum(checkreas(status='ENDORSE',polis)) as endorse, "
                        + "sum(premi) as premi,sum(biapol) as biapol,"
                        + "sum(biamat) as biamat,sum(diskon) as diskon,"
                        + "sum(hfee) as hfee,sum(pajak_hfee) as taxhfee,"
                        + "sum(bfee) as bfee,sum(pajak_bfee) as taxbrok, "
                        + "sum(komisi) as komisi,sum(pajak_komisi) as taxcomm, "
                        + "sum(feebase) as feebase,sum(ppn) as ppn "
                        + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                        + " ) x group by cabang,cc_code order by cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = " select cabang,cabang_nonaks, "
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                            + "sum(premi) as premi,sum(biapol) as biapol,"
                            + "sum(biamat) as biamat,sum(diskon) as diskon,"
                            + "sum(hfee) as hfee,sum(pajak_hfee) as taxhfee,"
                            + "sum(bfee) as bfee,sum(pajak_bfee) as taxbrok, "
                            + "sum(komisi) as komisi,sum(pajak_komisi) as taxcomm, "
                            + "sum(feebase) as feebase,sum(ppn) as ppn "
                            + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                            + " ) x group by cabang,cabang_nonaks,cc_code,cc_code_source order by cc_code,cc_code_source ";
                } else {
                    sql = " select cabang, "
                            + "sum(checkreas(status in ('POLICY','RENEWAL'),polis)) as polis, "
                            + "sum(checkreas(status='ENDORSE',polis)) as endorse, "
                            + "sum(premi) as premi,sum(biapol) as biapol,"
                            + "sum(biamat) as biamat,sum(diskon) as diskon,"
                            + "sum(hfee) as hfee,sum(pajak_hfee) as taxhfee,"
                            + "sum(bfee) as bfee,sum(pajak_bfee) as taxbrok, "
                            + "sum(komisi) as komisi,sum(pajak_komisi) as taxcomm, "
                            + "sum(feebase) as feebase,sum(ppn) as ppn "
                            + " from ( " + sqa.getSQL() + " group by bus_source,a.cc_code,a.cc_code_source,c.description,d.description,a.status "
                            + " ) x group by cabang,cc_code order by cc_code ";
                }
            }
        }

        /*
        String sql = " select cabang, "
        + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
        + "sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
        + "sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,"
        + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,"
        + "sum(nd_hfee) as nd_hfee,sum(komisi) as komisi,sum(feebase) as feebase,"
        + "sum(brok) as brok,sum(tax) as tax "
        + "from ( " + sqa.getSQL() + " group by a.cc_code,c.description,a.status,a.pol_no "
        + " ) x group by cabang,cc_code,status "
        + " ) x group by cabang,cc_code order by cc_code ";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rekap_cabang_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXPORT_RPP_CABANG() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("premi");
            row0.createCell(4).setCellValue("bpol");
            row0.createCell(5).setCellValue("bmat");
            row0.createCell(6).setCellValue("diskon");
            row0.createCell(7).setCellValue("hfee");
            row0.createCell(8).setCellValue("komisi");
            row0.createCell(9).setCellValue("feebase");
            row0.createCell(10).setCellValue("bfee");
            row0.createCell(11).setCellValue("pajak");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());


        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_RPP_COMPANY() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String sqla = "a.cc_code as koda,c.description as cabang,a.cc_code_source as koda_nonaks,g.description as cabang_nonaks,"
                + "e.ent_id,e.ent_name as bank,e.address as alamat,e.gl_code as glcode, "
                + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),(b.amount*a.ccy_rate)*-1)) as insured, "
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as taxhfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as taxbfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as taxcomm, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase ";

        sqa.addSelect(sqla);

        /*
        sqa.addSelect("c.cc_code,c.description,e.ent_id,e.ent_name as cust_name,e.address,e.gl_code, "
        + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),(b.amount*a.ccy_rate)*-1)) as insured_amount, "
        + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_amt, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
        + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase ");*/

        sqa.addQuery(" from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                + " inner join ent_master e on e.ent_id = a.entity_id "
                + " inner join ent_master f on f.ent_id = a.prod_id "
                + " inner join ins_policy_types k on k.pol_type_id = a.pol_type_id "
                + " left join gl_cost_center g on g.cc_code = a.cc_code_source "
                + " left join ent_master h on h.ent_id = a.payment_company_id::int ");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
//            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
//            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
//            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
//            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
//            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
//            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
//            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
//            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
//            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
//            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
//            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
//            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
//            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stMarketerOffID != null) {
            sqa.addClause("a.marketing_officer_who = ?");
            sqa.addPar(stMarketerOffID);
        }

        if (stGroupJenisID != null) {
            if (stGroupJenisID.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
            } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
            } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
            }
        }

        String sql = sqa.getSQL() + " group by a.cc_code,c.description,a.cc_code_source,g.description,e.ent_id,e.ent_name,e.address,e.gl_code order by a.cc_code,e.ent_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        final SQLAssembler sqa2 = new SQLAssembler();

        String sqlb = "a.cc_code as koda,c.description as cabang,a.cc_code_source as koda_nonaks,g.description as cabang_nonaks,"
                + "e.ent_id,a.cust_name as bank,e.address as alamat,e.gl_code as glcode, "
                + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),(b.amount*a.ccy_rate)*-1)) as insured, "
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as ppn, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as taxhfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as taxbfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as taxcomm, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase ";

        sqa2.addSelect(sqlb);

        sqa2.addQuery(" from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id"
                + " inner join gl_cost_center c on c.cc_code = a.cc_code"
                + " left join ent_master e on e.ent_id = a.entity_id "
                + " left join ent_master f on f.ent_id = a.prod_id "
                + " left join gl_cost_center g on g.cc_code = a.cc_code_source "
                + " left join ent_master h on h.ent_id = a.payment_company_id::int ");

        sqa2.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqa2.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa2.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
//            sqa2.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            sqa2.addClause("date_trunc('day',a.period_start) >= ?");
            sqa2.addPar(periodFrom);
        }

        if (periodTo != null) {
//            sqa2.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            sqa2.addClause("date_trunc('day',a.period_start) <= ?");
            sqa2.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
//            sqa2.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            sqa2.addClause("date_trunc('day',a.period_end) >= ?");
            sqa2.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
//            sqa2.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            sqa2.addClause("date_trunc('day',a.period_end) <= ?");
            sqa2.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
//            sqa2.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            sqa2.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa2.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
//            sqa2.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            sqa2.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa2.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
//            sqa2.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            sqa2.addClause("a.ins_policy_type_grp_id = ?");
            sqa2.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
//            sqa2.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            sqa2.addClause("a.pol_type_id = ?");
            sqa2.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
//            sqa2.addClause("a.cc_code = '" + stBranch + "'");
            sqa2.addClause("a.cc_code = ?");
            sqa2.addPar(stBranch);
        }

        if (stRegion != null) {
//            sqa2.addClause("a.region_id = '" + stRegion + "'");
            sqa2.addClause("a.region_id = ?");
            sqa2.addPar(stRegion);
        }

        if (stFltCoverType != null) {
//            sqa2.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            sqa2.addClause("a.cover_type_code = ?");
            sqa2.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
//            sqa2.addClause("e.category1 = '" + stCustCategory1 + "'");
            sqa2.addClause("e.category1 = ?");
            sqa2.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
//            sqa2.addClause("a.entity_id = '" + stEntityID + "'");
            sqa2.addClause("a.entity_id = ?");
            sqa2.addPar(stEntityID);
        }

        if (stCompanyID != null) {
//            sqa2.addClause("e.ref2 = '" + stCompanyID + "'");
            sqa2.addClause("e.ref2 = ?");
            sqa2.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
//            sqa2.addClause("a.prod_id = '" + stMarketerID + "'");
            sqa2.addClause("a.prod_id = ?");
            sqa2.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
//            sqa2.addClause("f.ref2 = '" + stCompanyProdID + "'");
            sqa2.addClause("f.ref2 = ?");
            sqa2.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stMarketerOffID != null) {
            sqa2.addClause("a.marketing_officer_who = ?");
            sqa2.addPar(stMarketerOffID);
        }

        if (stGroupJenisID != null) {
            if (stGroupJenisID.equalsIgnoreCase("1")) {
                sqa2.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
            } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                sqa2.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
            } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                sqa2.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
            }
        }

        String sql2 = sqa2.getSQL() + " group by a.cc_code,c.description,a.cc_code_source,g.description,e.ent_id,a.cust_name,e.address,e.gl_code order by a.cc_code,e.ent_id ";

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa2.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        return l;

        /*
        //        SQLUtil S = new SQLUtil();
        //
        //        String nama_file = "rpp_company_" + System.currentTimeMillis() + ".csv";
        //
        //        sql = "Copy ("
        //                + sql
        //                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";
        //
        //        final PreparedStatement ps = S.setQuery(sql);
        //
        //        boolean tes = ps.execute();
        //
        //        S.release();
        //
        //        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        //        int length = 0;
        //        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();
        //
        //        SessionManager.getInstance().getResponse().setContentType("text/csv");
        //        SessionManager.getInstance().getResponse().setContentLength((int) file.length());
        //
        //        // sets HTTP header
        //        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");
        //
        //        int BUFSIZE = 4096;
        //        byte[] byteBuffer = new byte[BUFSIZE];
        //        DataInputStream in = new DataInputStream(new FileInputStream(file));
        //
        //        // reads the file's bytes and writes them to the response stream
        //        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
        //            outStream.write(byteBuffer, 0, length);
        //        }
        //
        //        in.close();
        //        outStream.close();
        //
        //        file.delete();
         */
    }

    public void EXCEL_RPP_COMPANY_ALL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String sqla = " c.cc_code as koda,c.description as cabang,a.ent_id as entid,a.ent_name as bank,sum(premi_amt-diskon_premi) as preminet,"
                + " sum(premi_amt) as premi, sum(nd_pcost) as biapol, "
                + " sum(nd_sfee) as biamat, sum(diskon_premi) as diskon,"
                + " sum(brok) as bfee,sum(nd_hfee) as hfee, "
                + " sum(nd_comm1) as komisi,sum(feebase) as feebase ";

        sqa.addSelect(sqla);

        String sql = " left join ( select a.entity_id,c.category1 as bus_source,a.cc_code, "
                + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,(b.premi_amt*a.ccy_rate)*-1)) as premi_amt, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),b.broker_amount*-1)) as brok "
                + " from       ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master c on c.ent_id = a.entity_id "
                + " where a.status in ('POLICY','ENDORSE','RENEWAL') "
                + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER') "
                + " and a.effective_flag='Y'";

//        sqa.addSelect(" c.cc_code,c.description,a.ent_id,a.ent_name, sum(premi_amt-diskon_premi) as premi_adisc,"
//                + " sum(premi_amt) as premi_amt, sum(nd_pcost) as nd_pcost, "
//                + " sum(nd_sfee) as nd_sfee, sum(diskon_premi) as diskon_premi,"
//                + " sum(nd_hfee) as nd_hfee, sum(nd_comm1) as komisi,sum(brok) as brok,sum(feebase) as feebase ");
//
//        String sql = " left join ( select a.entity_id,c.category1 as bus_source,a.cc_code, "
//                + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,(b.premi_amt*a.ccy_rate)*-1)) as premi_amt, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),b.broker_amount*-1)) as brok "
//                + " from       ins_policies a "
//                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
//                + " inner join ent_master c on c.ent_id = a.entity_id "
//                + " where a.status in ('POLICY','ENDORSE','RENEWAL') "
//                + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER') "
//                + " and a.effective_flag='Y'";


        if (getPolicyDateFrom() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            //sqa.addPar(policyDateFrom);
        }

        if (getPolicyDateTo() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            //sqa.addPar(policyDateTo);
        }

        if (getStPolicyTypeGroupID() != null) {
            sql = sql + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (getStPolicyTypeID() != null) {
            sql = sql + " and a.pol_type_id = '" + stPolicyTypeID + "'";
            //sqa.addPar(stPolicyTypeID);
        }

        if (getStFltCoverType() != null) {
            sql = sql + " and a.cover_type_code = '" + stFltCoverType + "'";
            //sqa.addPar(stFltCoverType);
        }

        sqa.addQuery(" from ent_master a " + sql + " group by a.entity_id,a.pol_no,a.cc_code,c.category1 order by a.entity_id ) as x on a.ent_id = x.entity_id "
                + " inner join gl_cost_center c on c.cc_code = x.cc_code ");

        if (stBranch != null) {
            sqa.addClause("x.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("x.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("x.bus_source = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stCompanyID != null) {
            sqa.addClause("a.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        sql = sqa.getSQL() + " group by c.cc_code,c.description,a.ent_id,a.ent_name order by c.cc_code,a.ent_id";

        /*
        sql = sqa.getSQL() + " group by c.cc_code,c.description,a.ent_id,a.ent_name order by c.cc_code,a.ent_id";

         *
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_companyall_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXCEL_RPP_COMPANY100_ALL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String sqla = " c.cc_code as koda,c.description as cabang,a.ent_id as entid,a.ent_name as bank,sum(premi_amt-diskon_premi) as preminet,"
                + " sum(premi_amt) as premi, sum(nd_pcost) as biapol, "
                + " sum(nd_sfee) as biamat, sum(diskon_premi) as diskon,"
                + " sum(brok) as bfee,sum(nd_hfee) as hfee, "
                + " sum(nd_comm1) as komisi,sum(feebase) as feebase ";

        sqa.addSelect(sqla);

        String sql = " left join ( select a.entity_id,b.category1 as bus_source,a.cc_code, "
                + " sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi_amt, "
                + " sum(coalesce(a.nd_pcost*a.ccy_rate,0)) as nd_pcost, "
                + " sum(coalesce(a.nd_sfee*a.ccy_rate,0)) as nd_sfee, "
                + " sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon_premi, "
                + " sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee, "
                + " sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as nd_comm1, "
                + " sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as brok, "
                + " sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as feebase "
                + " from       ins_policies a "
                + " inner join ent_master b on b.ent_id = a.entity_id "
                + " where a.status in ('POLICY','ENDORSE','RENEWAL') "
                + " and a.effective_flag='Y'";

//         sqa.addSelect(" c.cc_code,c.description,a.ent_id,a.ent_name, sum(premi_amt-diskon_premi) as premi_adisc,"
//                + " sum(premi_amt) as premi_amt, sum(nd_pcost) as nd_pcost, "
//                + " sum(nd_sfee) as nd_sfee, sum(diskon_premi) as diskon_premi,"
//                + " sum(nd_hfee) as nd_hfee, sum(nd_comm1) as komisi,sum(brok) as brok,sum(feebase) as feebase ");
//
//        String sql = " left join ( select a.entity_id,b.category1 as bus_source,a.cc_code, "
//                + " sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi_amt, "
//                + " sum(coalesce(a.nd_pcost*a.ccy_rate,0)) as nd_pcost, "
//                + " sum(coalesce(a.nd_sfee*a.ccy_rate,0)) as nd_sfee, "
//                + " sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon_premi, "
//                + " sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee, "
//                + " sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as nd_comm1, "
//                + " sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as brok, "
//                + " sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as feebase "
//                + " from       ins_policies a "
//                + " inner join ent_master b on b.ent_id = a.entity_id "
//                + " where a.status in ('POLICY','ENDORSE','RENEWAL') "
//                + " and a.effective_flag='Y'";


        if (getPolicyDateFrom() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            //sqa.addPar(policyDateFrom);
        }

        if (getPolicyDateTo() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            //sqa.addPar(policyDateTo);
        }

        if (getStPolicyTypeGroupID() != null) {
            sql = sql + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (getStPolicyTypeID() != null) {
            sql = sql + " and a.pol_type_id = '" + stPolicyTypeID + "'";
            //sqa.addPar(stPolicyTypeID);
        }

        if (getStFltCoverType() != null) {
            sql = sql + " and a.cover_type_code = '" + stFltCoverType + "'";
            //sqa.addPar(stFltCoverType);
        }

        sqa.addQuery(" from ent_master a " + sql + " group by a.entity_id,a.pol_no,a.cc_code,b.category1 order by a.entity_id ) as x on a.ent_id = x.entity_id "
                + " inner join gl_cost_center c on c.cc_code = x.cc_code ");

        if (stBranch != null) {
            sqa.addClause("x.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("x.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("x.bus_source = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stCompanyID != null) {
            sqa.addClause("a.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        sql = sqa.getSQL() + " group by c.cc_code,c.description,a.ent_id,a.ent_name order by c.cc_code,a.ent_id";

        /*
        sql = sqa.getSQL() + " group by c.cc_code,c.description,a.ent_id,a.ent_name order by c.cc_code,a.ent_id";

         *
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_company100all_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList EXCEL_RPP_COMPANY_ALLTYPE() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" c.description,a.ent_id,a.ent_name,a.category1,a.gl_code, "
                + " sum(getkoas(pol_type_id='1',premi)) as FR_premi, sum(getkoas(pol_type_id='1',diskon)) as FR_disc, "
                + " sum(getkoas(pol_type_id='2',premi)) as CONS_premi, sum(getkoas(pol_type_id='2',diskon)) as CONS_disc, "
                + " sum(getkoas(pol_type_id='3',premi)) as MV_premi, sum(getkoas(pol_type_id='3',diskon)) as MV_disc, "
                + " sum(getkoas(pol_type_id='4',premi)) as PA_premi, sum(getkoas(pol_type_id='4',diskon)) as PA_disc, "
                + " sum(getkoas(pol_type_id='5',premi)) as CIS_premi, sum(getkoas(pol_type_id='5',diskon)) as CIS_disc, "
                + " sum(getkoas(pol_type_id='6',premi)) as CAR_premi, sum(getkoas(pol_type_id='6',diskon)) as CAR_disc, "
                + " sum(getkoas(pol_type_id='7',premi)) as EAR_premi, sum(getkoas(pol_type_id='7',diskon)) as EAR_disc, "
                + " sum(getkoas(pol_type_id='8',premi)) as MB_premi, sum(getkoas(pol_type_id='8',diskon)) as MB_disc, "
                + " sum(getkoas(pol_type_id='9',premi)) as CPM_premi, sum(getkoas(pol_type_id='9',diskon)) as CPM_disc, "
                + " sum(getkoas(pol_type_id='10',premi)) as EEI_premi, sum(getkoas(pol_type_id='10',diskon)) as EEI_disc, "
                + " sum(getkoas(pol_type_id='11',premi)) as PLiab_premi, sum(getkoas(pol_type_id='11',diskon)) as PLiab_disc, "
                + " sum(getkoas(pol_type_id='12',premi)) as BURG_premi, sum(getkoas(pol_type_id='12',diskon)) as BURG_disc, "
                + " sum(getkoas(pol_type_id='13',premi)) as MC_premi, sum(getkoas(pol_type_id='13',diskon)) as MC_disc, "
                + " sum(getkoas(pol_type_id='14',premi)) as CIT_premi, sum(getkoas(pol_type_id='14',diskon)) as CIT_disc, "
                + " sum(getkoas(pol_type_id='15',premi)) as HULL_premi, sum(getkoas(pol_type_id='15',diskon)) as HULL_disc, "
                + " sum(getkoas(pol_type_id='16',premi)) as GOLF_premi, sum(getkoas(pol_type_id='16',diskon)) as GOLF_disc, "
                + " sum(getkoas(pol_type_id='17',premi)) as GA_premi, sum(getkoas(pol_type_id='17',diskon)) as GA_disc, "
                + " sum(getkoas(pol_type_id='18',premi)) as AV_premi, sum(getkoas(pol_type_id='18',diskon)) as AV_disc, "
                + " sum(getkoas(pol_type_id='19',premi)) as EQ_premi, sum(getkoas(pol_type_id='19',diskon)) as EQ_disc, "
                + " sum(getkoas(pol_type_id='20',premi)) as PJTKI_premi, sum(getkoas(pol_type_id='20',diskon)) as PJTKI_disc, "
                + " sum(getkoas(pol_type_id='21',premi)) as KREASI_premi, sum(getkoas(pol_type_id='21',diskon)) as KREASI_disc, "
                + " sum(getkoas(pol_type_id='22',premi)) as OIL_premi, sum(getkoas(pol_type_id='22',diskon)) as OIL_disc, "
                + " sum(getkoas(pol_type_id='23',premi)) as TS_premi, sum(getkoas(pol_type_id='23',diskon)) as TS_disc, "
                + " sum(getkoas(pol_type_id='24',premi)) as HE_premi, sum(getkoas(pol_type_id='24',diskon)) as HE_disc, "
                + " sum(getkoas(pol_type_id='31',premi)) as SIMPEDA_premi, sum(getkoas(pol_type_id='31',diskon)) as SIMPEDA_disc, "
                + " sum(getkoas(pol_type_id='32',premi)) as NSIMPEDA_premi, sum(getkoas(pol_type_id='32',diskon)) as NSIMPEDA_disc, "
                + " sum(getkoas(pol_type_id='33',premi)) as HAJI_premi, sum(getkoas(pol_type_id='33',diskon)) as HAJI_disc, "
                + " sum(getkoas(pol_type_id='41',premi)) as CITCM_premi, sum(getkoas(pol_type_id='41',diskon)) as CITCM_disc, "
                + " sum(getkoas(pol_type_id='42',premi)) as CISCM_premi, sum(getkoas(pol_type_id='42',diskon)) as CISCM_disc, "
                + " sum(getkoas(pol_type_id='51',premi)) as SBBB_premi, sum(getkoas(pol_type_id='51',diskon)) as SBBB_disc, "
                + " sum(getkoas(pol_type_id='52',premi)) as SBPB_premi, sum(getkoas(pol_type_id='52',diskon)) as SBPB_disc, "
                + " sum(getkoas(pol_type_id='53',premi)) as SBAPB_premi, sum(getkoas(pol_type_id='53',diskon)) as SBAPB_disc, "
                + " sum(getkoas(pol_type_id='54',premi)) as SBMB_premi, sum(getkoas(pol_type_id='54',diskon)) as SBMB_disc, "
                + " sum(getkoas(pol_type_id='55',premi)) as KBGBB_premi, sum(getkoas(pol_type_id='55',diskon)) as KBGBB_disc, "
                + " sum(getkoas(pol_type_id='56',premi)) as KBGPB_premi, sum(getkoas(pol_type_id='56',diskon)) as KBGPB_disc, "
                + " sum(getkoas(pol_type_id='57',premi)) as KBGAPB_premi, sum(getkoas(pol_type_id='57',diskon)) as KBGAPB_disc, "
                + " sum(getkoas(pol_type_id='58',premi)) as KBGMB_premi, sum(getkoas(pol_type_id='58',diskon)) as KBGMB_disc, "
                + " sum(getkoas(pol_type_id='61',premi)) as AUTO_premi, sum(getkoas(pol_type_id='61',diskon)) as AUTO_disc, "
                + " sum(getkoas(pol_type_id='62',premi)) as CGL_premi, sum(getkoas(pol_type_id='62',diskon)) as CGL_disc, "
                + " sum(getkoas(pol_type_id='63',premi)) as EL_premi, sum(getkoas(pol_type_id='63',diskon)) as EL_disc, "
                + " sum(getkoas(pol_type_id='65',premi)) as MAR_premi, sum(getkoas(pol_type_id='65',diskon)) as MAR_disc, "
                + " sum(getkoas(pol_type_id='66',premi)) as GLASS_premi, sum(getkoas(pol_type_id='66',diskon)) as GLASS_disc, "
                + " sum(getkoas(pol_type_id='67',premi)) as PI_premi, sum(getkoas(pol_type_id='67',diskon)) as PI_disc, "
                + " sum(getkoas(pol_type_id='68',premi)) as BOILER_premi, sum(getkoas(pol_type_id='68',diskon)) as BOILER_disc, "
                + " sum(getkoas(pol_type_id='69',premi)) as WCA_premi, sum(getkoas(pol_type_id='69',diskon)) as WCA_disc, "
                + " sum(getkoas(pol_type_id='70',premi)) as PPJU_premi, sum(getkoas(pol_type_id='70',diskon)) as PPJU_disc, "
                + " sum(getkoas(pol_type_id='71',premi)) as HEALTH_premi, sum(getkoas(pol_type_id='71',diskon)) as HEALTH_disc, "
                + " sum(getkoas(pol_type_id='81',premi)) as PAR_premi, sum(getkoas(pol_type_id='81',diskon)) as PAR_disc, "
                + " sum(getkoas(pol_type_id='82',premi)) as CECR_premi, sum(getkoas(pol_type_id='82',diskon)) as CECR_disc, "
                + " sum(getkoas(pol_type_id='84',premi)) as FG_premi, sum(getkoas(pol_type_id='84',diskon)) as FG_disc, "
                + " sum(getkoas(pol_type_id='92',premi)) as HOLE_premi, sum(getkoas(pol_type_id='92',diskon)) as HOLE_disc, "
                + " sum(getkoas(pol_type_id='59',premi)) as CREDIT_premi, sum(getkoas(pol_type_id='59',diskon)) as CREDIT_disc, "
                + " coalesce(sum(premi),0) as total_premi,coalesce(sum(diskon),0) as total_diskon ");

        String sql = " inner join ( select a.entity_id,a.pol_type_id,c.category1 as bus_source, "
                + " sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,b.premi_amt*a.ccy_rate*-1)) as premi, "
                + " sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon "
                + " from       ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master c on c.ent_id = a.entity_id "
                + " where (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER') "
                + " and a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'";


        if (getPolicyDateFrom() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) >= ?";
            sqa.addPar(policyDateFrom);
        }

        if (getPolicyDateTo() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) <= ?";
            sqa.addPar(policyDateTo);
        }

        if (getStPolicyTypeGroupID() != null) {
            sql = sql + " and a.ins_policy_type_grp_id = ?";
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (getStPolicyTypeID() != null) {
            sql = sql + " and a.pol_type_id = ?";
            sqa.addPar(stPolicyTypeID);
        }

        if (getStFltCoverType() != null) {
            sql = sql + " and a.cover_type_code = ?";
            sqa.addPar(stFltCoverType);
        }

        if (getStBranch() != null) {
            if (getStBranch().equalsIgnoreCase("80")) {
                sql = sql + " and a.cc_code = '" + getStBranch() + "'";
//                sqa.addClause("a.cc_code = '" + getStBranch() + "'");

                if (getStBranchSource() != null) {
                    sql = sql + " and a.cc_code_source = '" + getStBranchSource() + "'";
//                    sqa.addClause("a.cc_code_source = '" + getStBranchSource() + "'");
                }
                if (getStRegionSource() != null) {
                    sql = sql + " and a.region_id_source = '" + getStRegionSource() + "'";
//                    sqa.addClause("a.region_id_source = '" + getStRegionSource() + "'");
                }
            } else {
                sql = sql + " and ((a.cc_code = '" + getStBranch() + "') or (a.cc_code = '80' and a.cc_code_source = '" + getStBranch() + "'))";
//                sqa.addClause("((a.cc_code = '" + getStBranch() + "') or (a.cc_code = '80' and a.cc_code_source = '" + getStBranch() + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (getStRegion() != null) {
            sql = sql + " and a.region_id = '" + getStRegion() + "'";
//            sqa.addClause("a.region_id = '" + getStRegion() + "'");
//            sqa.addPar(stRegion);
        }

//        if (getStBranch() != null) {
//            sql = sql + " and a.cc_code = ?";
//            sqa.addPar(stBranch);
//        }
//
//        if (getStRegion() != null) {
//            sql = sql + " and a.region_id = ?";
//            sqa.addPar(stRegion);
//        }

        if (getStCreateID() != null) {
            sql = sql + " and a.create_who = ?";
//            sqa.addClause("a.create_who = '" + stCreateID + "'");
            sqa.addPar(stCreateID);
        }

        sqa.addQuery(" from ent_master a " + sql + " group by a.entity_id,a.pol_type_id,a.pol_no,c.category1 order by a.entity_id ) as x on a.ent_id = x.entity_id "
                + " inner join gl_cost_center c on c.cc_code = a.cc_code ");

        if (stCustCategory1 != null) {
            sqa.addClause("x.bus_source = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stCompanyID != null) {
            sqa.addClause("a.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        sql = sqa.getSQL() + " group by c.description,a.ent_id,a.ent_name,a.cc_code,a.category1,a.gl_code order by a.cc_code,a.ent_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList RPP_COMPANY() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("e.ent_name as cust_name, "
                + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,b.premi_amt*a.ccy_rate*-1)) as premi_amt, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as diskon_premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),((coalesce(b.comm_amount,0))*a.ccy_rate)*-1)) as komisi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(b.broker_amount*a.ccy_rate)*-1)) as brok, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as tax ");

        sqa.addQuery(" from ins_policies a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " inner join ent_master f on f.ent_id = a.prod_id"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stMarketerOffID != null) {
            sqa.addClause("a.marketing_officer_who = ?");
            sqa.addPar(stMarketerOffID);
        }

        if (stGroupJenisID != null) {
            if (stGroupJenisID.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
            } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
            } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
            }
        }

        final String sql = sqa.getSQL() + " group by e.ent_id,e.ent_name order by e.ent_id  ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPP_COMPANY100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("c.cc_code,c.description,e.ent_id,e.ent_name as cust_name, "
                + " sum(coalesce(a.insured_amount*a.ccy_rate,0)) as insured_amount, "
                + " sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi_amt, "
                + " sum(coalesce(a.nd_pcost*a.ccy_rate,0)) as nd_pcost, "
                + " sum(coalesce(a.nd_sfee*a.ccy_rate,0)) as nd_sfee, "
                + " sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon_premi, "
                + " sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee, "
                + " sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as nd_comm1, "
                + " sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as brok, "
                + " sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as nd_feebase1, "
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1,"
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3 ");

        sqa.addQuery("   from       ins_policies a "
                + "	left join ent_master e on e.ent_id = a.entity_id"
                + "	left join ent_master f on f.ent_id = a.prod_id "
                + "	left join gl_cost_center c on c.cc_code = a.cc_code");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stGroupJenisID != null) {
            if (stGroupJenisID.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
            } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
            } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
            }
        }

        String sql = " select a.cc_code as koda,a.description as cabang,a.ent_id as entid,a.cust_name as bank,"
                + " sum(insured_amount) as insured,sum(premi_amt) as premi,sum(nd_pcost) as biapol,"
                + " sum(nd_sfee) as biamat,sum(diskon_premi) as diskon,"
                + " sum(brok) as brok,sum(nd_hfee) as hfee, "
                + " sum(nd_comm1) as komisi,sum(nd_taxcomm1+nd_taxcomm3) as tax,sum(nd_feebase1) as nd_feebase "
                + " from ( " + sqa.getSQL() + " group by a.pol_id,c.cc_code,e.ent_id,e.ent_name,c.description,a.cc_code,a.ccy_rate "
                + " order by a.cc_code,e.ent_id ) a group by a.cc_code,a.description,a.ent_id,a.cust_name"
                + " order by a.cc_code,a.description,a.ent_id,a.cust_name ";

        /*
        final String sql = " select a.cc_code,a.description,a.ent_id,a.cust_name,"
        + " sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,"
        + " sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,"
        + " sum(nd_feebase1) as nd_feebase,sum(nd_hfee) as nd_hfee,"
        + " sum(nd_comm1) as komisi,sum(brok) as brok,sum(nd_taxcomm1+nd_taxcomm3) as tax from ( "
        + sqa.getSQL() + " group by a.pol_id,c.cc_code,e.ent_id,e.ent_name,c.description,a.cc_code,a.ccy_rate "
        + " order by a.cc_code,e.ent_id ) a group by a.cc_code,a.description,a.ent_id,a.cust_name"
        + " order by a.cc_code,a.description,a.ent_id,a.cust_name ";
         *
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_company100_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList RPP_COMPANY100() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("e.ent_name as cust_name, "
                + "sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi_amt, "
                + "sum(coalesce(a.nd_pcost*a.ccy_rate,0)) as nd_pcost, "
                + "sum(coalesce(a.nd_sfee*a.ccy_rate,0)) as nd_sfee, "
                + "sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as nd_feebase1, "
                + "sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon_premi, "
                + "sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee, "
                + "sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as nd_comm1, "
                + "sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as brok, "
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1, "
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id"
                + "	inner join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stGroupJenisID != null) {
            if (stGroupJenisID.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
            } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
            } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
            }
        }

        final String sql = "select a.cust_name,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,"
                + " sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,sum(nd_feebase1) as nd_feebase1,"
                + " sum(nd_hfee) as nd_hfee,sum(nd_comm1) as komisi,sum(brok) as brok,"
                + " sum(nd_taxcomm1+nd_taxcomm3) as tax from ( " + sqa.getSQL() + " group by a.pol_id,e.ent_id,e.ent_name,a.ccy_rate order by e.ent_id "
                + " ) a group by a.cust_name order by a.cust_name ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList RPP_COMM() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "a.pol_id,a.create_date,a.policy_date,a.create_who,a.prod_id,a.pol_no,b.entity_id as entity_id,a.ref1, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as cust_name, "
                + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi_total,"
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as nd_pcost, "
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as nd_sfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as nd_disc1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),((coalesce(b.comm_amount*a.ccy_rate,0))*-1)) as nd_comm1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as nd_comm2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as nd_comm3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as nd_comm4,"
                + "getpremiend(b.entity_id,((coalesce(a.nd_feebase1*a.ccy_rate,0)) + (coalesce(a.nd_feebase2*a.ccy_rate,0))),0) as nd_feebase1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as nd_hfee,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1) as nd_brok1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as nd_brok2, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as nd_taxcomm1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as nd_taxcomm2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as nd_taxcomm3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as nd_taxcomm4, "
                + "a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,a.payment_company_id ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no,b.entity_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        //HashDTO.class

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPPCOMM() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code||g.region_code as koda,a.cc_code_source||h.region_code as koda_nonaks,a.period_start as tglawal,a.period_end as tglakhir,a.create_date as tglentry,"
                + "a.policy_date as tglpolis,a.pol_id,a.ref1 as pp,';'||a.pol_no as pol_no,getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as nama,a.ccy,a.ccy_rate,"
                + "getpremi(a.status = 'ENDORSE',a.insured_amount_e*a.ccy_rate,a.insured_amount*a.ccy_rate) as insured_amount,(a.premi_total*a.ccy_rate) as premi_total,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (29,22,36,15) and a.pol_id = x.pol_id),0) as nd_pcost,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (28,21,35,14) and a.pol_id = x.pol_id),0) as nd_sfee,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as nd_comm1, "
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as nd_taxcomm1,"
                //                + "(select b.description from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as descomm1,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as nd_comm2,"
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as nd_taxcomm2,"
                //                + "(select b.description from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as descomm2,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 3 "
                //                + ") as nd_comm3,"
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 3 "
                //                + ") as nd_taxcomm3,"
                //                + "(select b.description from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 3 "
                //                + ") as descomm3,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 4 "
                //                + ") as nd_comm4,"
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 4 "
                //                + ") as nd_taxcomm4,"
                //                + "(select b.description from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 4 "
                //                + ") as descomm4,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as nd_brok1,"
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as nd_taxbrok1,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as nd_brok2,"
                //                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as nd_taxbrok2,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 1 "
                //                + ") as nd_feebase1,"
                //                + "(select coalesce(b.amount*a.ccy_rate,0) from ( "
                //                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                //                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                //                + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id "
                //                + ") b where ROWNUMBER = 2 "
                //                + ") as nd_feebase2,"
                //                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0) as nd_hfee,"
                //                + "coalesce((select sum(x.tax_amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and x.tax_code in (9)and a.pol_id = x.pol_id),0) as nd_taxhfee,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_comm1,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_taxcomm1,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as descomm1,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as nd_comm2,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as nd_taxcomm2,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as descomm2,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as nd_comm3,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as nd_taxcomm3,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as descomm3,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as nd_comm4,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as nd_taxcomm4,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as descomm4,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_brok1,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_taxbrok1,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as descbrok1,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as nd_brok2,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as nd_taxbrok2,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as descbrok2,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_hfee,"
                + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_taxhfee,"
                + "(select b.description from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as deschfee,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as nd_feebase1,"
                + "(select coalesce(b.amount*a.ccy_rate,0) from ("
                + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
                + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
                + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as nd_feebase2,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0) as nd_disc1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101,113,114,115) and a.pol_id = x.pol_id),0) as nd_ppn,"
                + "b.ent_name as marketername,d.ent_name as mark_officer,a.create_who as kde,f.ent_name as paymentname ");

        sqa.addQuery(" from ins_policy a "
                + "left join ent_master b on b.ent_id = a.prod_id "
                + "left join ent_master c on c.ent_id::text = a.ref5 "
                + "left join ent_master d on d.ent_id::text = a.marketing_officer_who "
                + "left join ent_master e on e.ent_id = a.entity_id "
                + "left join ent_master f on f.ent_id = a.payment_company_id::int "
                + "left join s_region g on g.region_id = a.region_id "
                + "left join s_region h on h.region_id = a.region_id_source ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");

        /*
        sqa.addSelect(
        " a.period_start as tglawal,a.period_end as tglakhir,a.create_date as tglentry,d.short_desc as jenis,e.ent_name as bank, "
        + "a.policy_date as tglpolis,a.pol_id as polid,a.ref1 as pp,';'||a.pol_no as polno,"
        + "b.entity_id as kodeko,getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as nama,"
        + "getpremiend(b.entity_id,coalesce(a.premi_total,0)*a.ccy_rate,coalesce(b.premi_amt,0)*a.ccy_rate*-1) as premi,"
        + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as biapol,"
        + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as biamat,"
        + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + coalesce(a.nd_disc2*a.ccy_rate,0)),(coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as komisi2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as komisi3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as komisi4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as feebase1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as feebase2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as bfee2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as taxkomisi1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as taxkomisi2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as taxkomisi3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as taxkomisi4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as taxbfee1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as taxbfee2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as taxhfee,"
        + "a.prod_id as relasi,a.create_who as kde ");
         */

//        sqa.addQuery(" from ins_policy a "
//                + " inner join ent_master e on e.ent_id = a.entity_id"
//                + " left join ent_master c on c.ent_id::text = a.ref5"
//                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
//                + " inner join ent_master f on f.ent_id = a.prod_id  "
//                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");
//
//        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
//        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
//        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("b.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        String sql = " select ';'||a.koda,';'||koda_nonaks,a.tglawal,a.tglakhir,a.tglentry,a.tglpolis,a.pol_id,a.pp,a.pol_no,';'||c.ref_ent_id as kodeko,a.nama,a.ccy,a.ccy_rate,"
                + "getpremiend(b.entity_id,coalesce(a.insured_amount,0),coalesce(b.amount*a.ccy_rate,0)*-1) as tsi, "
                + "getpremiend(b.entity_id,coalesce(a.premi_total,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi,"
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost,0),0) as biapol, "
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee,0),0) as biamat, "
                + "getpremiend(b.entity_id,coalesce(a.nd_disc1,0),(coalesce(b.disc_amount*a.ccy_rate,0))*-1) as diskon, "
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1,0),(coalesce(b.broker_amount*a.ccy_rate,0))*-1) as bfee1,a.descbrok1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok2,0),0) as bfee2,a.descbrok2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1,0),0) as taxbfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2,0),0) as taxbfee2, "
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as hfee,a.deschfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee,0),0) as taxhfee, "
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1,0),(coalesce(b.comm_amount*a.ccy_rate,0))*-1) as komisi1, a.descomm1, "
                + "getpremiend(b.entity_id,coalesce(a.nd_comm2,0),0) as komisi2, a.descomm2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm3,0),0) as komisi3, a.descomm3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm4,0),0) as komisi4, a.descomm4, "
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1,0),0) as pajak_comm1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2,0),0) as pajak_comm2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3,0),0) as pajak_comm3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4,0),0) as pajak_comm4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase1,0),0) as feebase1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase2,0),0) as feebase2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_ppn,0),0) as ppn, marketername, mark_officer, kde,paymentname "
                + "from ( " + sqa.getSQL() + " ) a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + "left join ent_master c on c.ent_id = b.entity_id "
                + "where (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER') "
                + "order by a.tglpolis,a.pol_no,b.entity_id asc ";

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rppcomm_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXCEL_RPPCOMM100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code as koda,b.description as cabang,a.cc_code_source as koda_nonaks,g.description as cabang_nonaks,a.pol_id as polid,a.period_start as tglawal,a.period_end as tglakhir,d.short_desc as jenis,e.ent_name as bank,"
                + "a.create_date as tglentry,a.policy_date as tglpolis,c.user_name as createuser,a.prod_id as relasi,';'||a.pol_no as polno, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as nama,a.ccy_rate as kurs,a.payment_date as tglbayar, a.payment_note as nobuk, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref1,null) as pp, "
                + "coalesce(a.premi_total*a.ccy_rate,0) as premi,"
                + "coalesce(a.nd_pcost*a.ccy_rate,0) as biapol, "
                + "coalesce(a.nd_sfee*a.ccy_rate,0) as biamat, "
                + "coalesce(a.nd_disc1*a.ccy_rate,0) as diskon,"
                + "coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase,"
                + "coalesce(a.nd_hfee*a.ccy_rate,0) as hfee,"
                + "coalesce(a.nd_brok1*a.ccy_rate,0) as bfee,"
                + "coalesce(a.nd_ppn*a.ccy_rate,0) as ppn,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,112,116,117) and tax_code in (1)) as comm21,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,112,116,117) and tax_code in (2)) as comm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,112,116,117) and tax_code in (1)) as taxcomm21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,112,116,117) and tax_code in (2)) as taxcomm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (4)) as taxbfee21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (5,6)) as taxbfee23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as taxhfee, "
                + "f.ent_name as marketername,h.ent_name as paymentname ");

        /*sqa.addSelect(
        " a.cc_code as koda,b.description as cabang,a.pol_id as polid,a.period_start as tglawal,a.period_end as tglakhir,d.short_desc as jenis,"
        + "e.ent_name as bank,a.create_date as tglentry,a.policy_date as tglpolis,c.user_name as createuser,a.prod_id as relasi,';'||a.pol_no as polno, "
        + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as nama,a.ccy_rate as kurs,a.payment_date as tglbayar, a.payment_note as nobuk, "
        + "getname(a.ins_policy_type_grp_id in (7,8),a.ref1,null) as pp, coalesce(a.premi_total*a.ccy_rate,0) as premi,coalesce(a.nd_pcost*a.ccy_rate,0) as biapol, "
        + "coalesce(a.nd_sfee*a.ccy_rate,0) as biamat, coalesce(a.nd_disc1*a.ccy_rate,0) as diskon,coalesce(a.nd_ppn*a.ccy_rate,0) as ppn, "
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as komisi1,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as pajak_komisi1,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as agen_komisi1,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as komisi2,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as pajak_komisi2,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as agen_komisi2,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as komisi3,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as pajak_komisi3,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 3) as agen_komisi3,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as komisi4,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as pajak_komisi4,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (25,18,32,11,112,116,117) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 4) as agen_komisi4,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as bfee1,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as pajak_bfee1,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as agen_bfee1,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as bfee2,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as pajak_bfee2,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as agen_bfee2,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as hfee,"
        + "(select coalesce(b.tax_amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as pajak_hfee,"
        + "(select b.description from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (13,20,27,34) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as agen_hfee,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 1) as fbase1,"
        + "(select coalesce(b.amount*a.ccy_rate,0) from ("
        + "select ROW_NUMBER() OVER (partition by b.pol_id order by b.ins_pol_item_id) AS ROWNUMBER,b.amount,b.tax_amount,c.ent_name as description "
        + "from ins_pol_items b inner join ent_master c on c.ent_id = b.ent_id "
        + "where b.pol_id = a.pol_id and b.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) order by b.pol_id,b.ins_pol_item_id) b where ROWNUMBER = 2) as fbase2,"
        + "f.ent_name as marketername ");*/

        /*
        sqa.addSelect(
        "a.cc_code,b.description,a.pol_id,a.period_start,a.period_end,a.create_date,a.policy_date,c.user_name as create_who,a.prod_id,';'||a.pol_no as pol_no, "
        + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as cust_name,a.ccy_rate,a.payment_date, a.payment_note, "
        + "getname(a.ins_policy_type_grp_id in (7,8),';'||a.ref1,null) as ref1, "
        + "coalesce(a.premi_total*a.ccy_rate,0) as premi_total,"
        + "coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost, "
        + "coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee, "
        + "coalesce(a.nd_disc1*a.ccy_rate,0) as nd_disc1,"
        + "coalesce(a.nd_feebase1*a.ccy_rate,0) as nd_feebase1,"
        + "coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee,"
        + "coalesce(a.nd_brok1*a.ccy_rate,0) as nd_brok1,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as tax_comm21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as tax_comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (4)) as tax_bfee21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (5,6)) as tax_bfee23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as tax_hfee ");*/

        sqa.addQuery(" from ins_policies a "
                + " left join gl_cost_center b on b.cc_code = a.cc_code "
                + " left join s_users c on c.user_id = a.create_who "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + " inner join ent_master e on e.ent_id = a.entity_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  "
                + " left join gl_cost_center g on g.cc_code = a.cc_code_source "
                + " left join ent_master h on h.ent_id = a.payment_company_id::int ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        String sql = "select koda,cabang,koda_nonaks,cabang_nonaks,tglawal,tglakhir,tglentry,"
                + " polid,tglpolis,createuser,polno,nama,kurs,tglbayar,nobuk,"
                + " pp,premi,biapol,biamat,diskon,hfee,bfee,taxbfee21,taxbfee23,taxhfee,feebase,comm21,comm23,taxcomm21,taxcomm23,ppn,marketername,paymentname "
                + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno ";

        /*String sql = "select koda,cabang,polid,tglawal,tglakhir,jenis,bank,tglentry,tglpolis,createuser,"
        + "relasi,polno,nama,kurs,tglbayar,nobuk,pp,premi,biapol,biamat,diskon,ppn,komisi1,pajak_komisi1,agen_komisi1,"
        + "komisi2,pajak_komisi2,agen_komisi2,komisi3,pajak_komisi3,agen_komisi3,komisi4,pajak_komisi4,agen_komisi4,"
        + "bfee1,pajak_bfee1,agen_bfee1,bfee2,pajak_bfee2,agen_bfee2,hfee,pajak_hfee,agen_hfee,fbase1,fbase2,marketername "
        + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno ";*/

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rppcomm100_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXPORT_RPP_JENIS_TANPA_KOMISI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("jenis");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("premi");
            row0.createCell(4).setCellValue("bpol");
            row0.createCell(5).setCellValue("bmat");
            row0.createCell(6).setCellValue("feebase");
            row0.createCell(7).setCellValue("tag netto");

            BigDecimal totalPremi = null;
            totalPremi = BDUtil.sub(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("diskon"));

            BigDecimal tagihanNetto = null;
            tagihanNetto = BDUtil.sub(totalPremi, h.getFieldValueByFieldNameBD("feebase"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("biapol"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("biamat"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            row.createCell(3).setCellValue(totalPremi.doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(7).setCellValue(tagihanNetto.doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPPCOMM_TANPA_KOMISI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Tanggal Entry");
            row0.createCell(1).setCellValue("Tanggal Polis");
            row0.createCell(2).setCellValue("Pol ID");
            row0.createCell(3).setCellValue("Nomor PP");
            row0.createCell(4).setCellValue("Nomor Polis");
            row0.createCell(5).setCellValue("Kodeko");
            row0.createCell(6).setCellValue("Nama Tertanggung");
            row0.createCell(7).setCellValue("Premi Bruto");
            row0.createCell(8).setCellValue("Biaya Polis");
            row0.createCell(9).setCellValue("Biaya Materai");
            row0.createCell(10).setCellValue("Fee Base");
            row0.createCell(11).setCellValue("Tagihan Netto");
            row0.createCell(12).setCellValue("Kode Relasi");
            row0.createCell(13).setCellValue("KDE");

            BigDecimal totalFbase = null;
            totalFbase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            BigDecimal totalPremi = null;
            totalPremi = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total"), h.getFieldValueByFieldNameBD("nd_disc1"));

            BigDecimal tagihanNetto = null;
            tagihanNetto = BDUtil.sub(totalPremi, totalFbase);
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("nd_pcost"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("nd_sfee"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("create_date"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("pol_id"));
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
                    row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ref1"));
                }
            }
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
            row.createCell(6).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cust_name")));
            row.createCell(7).setCellValue(totalPremi.doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            if (totalFbase != null) {
                row.createCell(10).setCellValue(totalFbase.doubleValue());
            }
            row.createCell(11).setCellValue(tagihanNetto.doubleValue());
            row.createCell(12).setCellValue(String.valueOf(h.getFieldValueByFieldNameBD("prod_id")));
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("create_who"));
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPPCOMM100() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();
        //HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");
        //HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            //InsurancePolicyView policy = (InsurancePolicyView) list.get(i);
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            //HSSFRow row0 = sheet.createRow(0);
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Kode");
            row0.createCell(1).setCellValue("Cabang");
            row0.createCell(2).setCellValue("Period Start");
            row0.createCell(3).setCellValue("Period End");
            row0.createCell(4).setCellValue("Tanggal Entry");
            row0.createCell(5).setCellValue("Tanggal Polis");
            row0.createCell(6).setCellValue("Pol ID");
            row0.createCell(7).setCellValue("Nomor PP");
            row0.createCell(8).setCellValue("Nomor Polis");
            row0.createCell(9).setCellValue("Nama Tertanggung");
            row0.createCell(10).setCellValue("Premi Bruto");
            row0.createCell(11).setCellValue("Biaya Polis");
            row0.createCell(12).setCellValue("Biaya Materai");
            row0.createCell(13).setCellValue("Diskon Premi");
            row0.createCell(14).setCellValue("Komisi A");
            row0.createCell(15).setCellValue("Komisi B");
            row0.createCell(16).setCellValue("Fee Base 1");
            row0.createCell(17).setCellValue("Fee Base 2");
            row0.createCell(18).setCellValue("Handling Fee");
            row0.createCell(19).setCellValue("Brokerage Fee 1");
            row0.createCell(20).setCellValue("Brokerage Fee 2");
            row0.createCell(21).setCellValue("Pajak Komisi A");
            row0.createCell(22).setCellValue("Pajak Komisi B");
            row0.createCell(23).setCellValue("Pajak BFee A");
            row0.createCell(24).setCellValue("Pajak BFee B");
            row0.createCell(25).setCellValue("Pajak HFee");
            row0.createCell(26).setCellValue("Tagihan Netto");
            row0.createCell(27).setCellValue("Kode Relasi");
            row0.createCell(28).setCellValue("Tgl Bayar");
            row0.createCell(29).setCellValue("No Bukti");
            //row0.createCell(28).setCellValue("KDE");

            BigDecimal tagihanNetto = null;
            tagihanNetto = BDUtil.add(h.getFieldValueByFieldNameBD("premi_total"), h.getFieldValueByFieldNameBD("nd_pcost"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("nd_sfee"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("disc1"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("comm21"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("comm23"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("nd_hfee"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("nd_brok1"));
            tagihanNetto = BDUtil.sub(tagihanNetto, h.getFieldValueByFieldNameBD("nd_brok2"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("tax_comm21"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("tax_comm23"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("tax_bfee21"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("tax_bfee23"));
            tagihanNetto = BDUtil.add(tagihanNetto, h.getFieldValueByFieldNameBD("tax_hfee"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("create_date"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(9).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cust_name")));
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("nd_disc1").doubleValue());
            if (h.getFieldValueByFieldNameBD("comm23") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("comm23").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("comm21") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("comm21").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_feebase1") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_feebase2") != null) {
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_hfee") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_brok1") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("nd_brok1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_brok2") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("nd_brok2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tax_comm23") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("tax_comm23").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tax_comm21") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("tax_comm21").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tax_bfee23") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("tax_bfee23").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tax_bfee21") != null) {
                row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("tax_bfee21").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tax_hfee") != null) {
                row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("tax_hfee").doubleValue());
            }
            row.createCell(26).setCellValue(tagihanNetto.doubleValue());
            row.createCell(27).setCellValue(String.valueOf(h.getFieldValueByFieldNameBD("prod_id")));
            if (h.getFieldValueByFieldNameDT("payment_date") != null) {
                row.createCell(28).setCellValue(h.getFieldValueByFieldNameDT("payment_date"));
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameST("payment_note"));
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    private DTOList defaultQuery() throws Exception {
        final boolean joinObject = "Y".equalsIgnoreCase((String) refPropMap.get("JOIN_OBJECT"));
        final boolean joinObject2 = "Y".equalsIgnoreCase((String) refPropMap.get("JOIN_OBJECT2"));
        final boolean joinRI = "Y".equalsIgnoreCase((String) refPropMap.get("JOIN_RI"));
        final boolean TRANSPOSE_RI_PREMI = "Y".equalsIgnoreCase((String) refPropMap.get("TRANSPOSE_RI_PREMI"));
        final boolean TRANSPOSE_RI_CLAIM = "Y".equalsIgnoreCase((String) refPropMap.get("TRANSPOSE_RI_CLAIM"));
        final boolean TRANSPOSE_RI_TSI = "Y".equalsIgnoreCase((String) refPropMap.get("TRANSPOSE_RI_TSI"));
        final boolean USE_HASH = "Y".equalsIgnoreCase((String) refPropMap.get("USE_HASH"));
        final boolean USE_PREMI = "Y".equalsIgnoreCase((String) refPropMap.get("USE_PREMI"));
        final boolean FLT_OUTS_PREMI = "Y".equalsIgnoreCase((String) refPropMap.get("FLT_OUTS_PREMI"));
        final boolean FLT_PAID_PREMI = "Y".equalsIgnoreCase((String) refPropMap.get("FLT_PAID_PREMI"));
        final boolean USE_EXT = "Y".equalsIgnoreCase((String) refPropMap.get("USE_EXT")) || USE_PREMI;
        final String FLT_POL_TYPE = (String) refPropMap.get("FLT_POL_TYPE");
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));


        final boolean groupAll = "Y".equalsIgnoreCase((String) refPropMap.get("GROUP_ALL"));

        if (FLT_POL_TYPE != null) {
            stPolicyTypeID = FLT_POL_TYPE;
        }

        final String groupBy = (String) refPropMap.get("GROUP");

        final boolean groupOn = groupBy != null || groupAll;

        SQLAssembler sqa = new SQLAssembler();

        for (int i = 0; i < policyFields.length; i++) {
            String[] policyField = policyFields[i];

            if (groupOn) {
                sqa.addSelect("summ(" + policyField[0] + ") as " + policyField[1]);
            } else if (i == 0) {
                sqa.addSelect(" distinct " + policyField[0] + " as " + policyField[1]);
            } else {
                sqa.addSelect(policyField[0] + " as " + policyField[1]);
            }
        }

        if (joinObject) {
            for (int i = 0; i < objectFields.length; i++) {
                String[] f = objectFields[i];

                if (groupOn) {
                    sqa.addSelect("summ(" + f[0] + ") as " + f[1]);
                } else {
                    sqa.addSelect(f[0] + " as " + f[1]);
                }
            }
        }

        if (joinObject2) {
            for (int i = 0; i < objectFields2.length; i++) {
                String[] f = objectFields2[i];

                if (groupOn) {
                    sqa.addSelect("summ(" + f[0] + ") as " + f[1]);
                } else {
                    sqa.addSelect(f[0] + " as " + f[1]);
                }
            }

            sqa.addSelect(
                    "( select sum(claim_amount) from ins_policy where effective_flag='Y' and status='CLAIM' \n"
                    + "and\n"
                    + "pol_id in (select pol_id from ins_pol_obj where ins_pol_obj_ref_id = b.ins_pol_obj_id)) as obj_claim_amount");

        }

        //sqa.addSelect("a.*");

        sqa.addQuery(
                "   from  "
                + "      ins_policy a");

        if (joinObject || joinObject2) {
            sqa.addQuery(" inner join ins_pol_obj b on b.pol_id=a.pol_id");
        }


        /*
        sqa.addQuery(
        "         left join ent_master c on c.ent_id = a.entity_id, ins_pol_items d"
        );*/
        sqa.addQuery(
                "         left join ent_master c on c.ent_id = a.entity_id ");


        if (joinRI) {
            sqa.addQuery(" inner join ins_pol_treaty e on e.ins_pol_obj_id = b.ins_pol_obj_id");
            sqa.addQuery(" inner join ins_pol_treaty_detail f on e.ins_pol_treaty_id = f.ins_pol_treaty_id");
            sqa.addQuery(" inner join ins_pol_ri g on g.ins_pol_tre_det_id = f.ins_pol_tre_det_id");
            sqa.addQuery(" inner join ent_master h on h.ent_id = g.member_ent_id");
            sqa.addQuery(" inner join ins_treaty_detail i on i.ins_treaty_detail_id = f.ins_treaty_detail_id");

            addAutoSumm(sqa, groupOn, "h.ent_id", "ri_ent_id");
            addAutoSumm(sqa, groupOn, "h.ent_name", "ri_ent_name");
            addAutoSumm(sqa, groupOn, "g.claim_amount", "ri_claim_amount");
            addAutoSumm(sqa, groupOn, "g.premi_amount", "ri_premi_amount");
            addAutoSumm(sqa, groupOn, "g.sharepct", "ri_sharepct");
            addAutoSumm(sqa, groupOn, "g.tsi_amount", "ri_tsi_amount");
            addAutoSumm(sqa, groupOn, "i.treaty_type", "treaty_type");

            DTOList treTypes = getTreatyTypes();

            if (groupOn) {
                for (int i = 0; i < treTypes.size(); i++) {
                    InsuranceTreatyTypesView tt = (InsuranceTreatyTypesView) treTypes.get(i);

                    if (TRANSPOSE_RI_PREMI) {
                        sqa.addSelect("summ(case when i.treaty_type='" + tt.getStInsuranceTreatyTypeID() + "' then g.premi_amount else 0 end) as ri_premi_amt_" + tt.getStInsuranceTreatyTypeID());
                    }

                    if (TRANSPOSE_RI_CLAIM) {
                        sqa.addSelect("summ(case when i.treaty_type='" + tt.getStInsuranceTreatyTypeID() + "' then g.claim_amount else 0 end) as ri_claim_amt_" + tt.getStInsuranceTreatyTypeID());
                    }

                    if (TRANSPOSE_RI_TSI) {
                        sqa.addSelect("summ(case when i.treaty_type='" + tt.getStInsuranceTreatyTypeID() + "' then g.tsi_amount else 0 end) as ri_tsi_amt_" + tt.getStInsuranceTreatyTypeID());
                    }
                }
            }

            if (stInsCompanyID != null) {
                sqa.addClause("g.member_ent_id = ?");
                sqa.addPar(stInsCompanyID);
            }

            if (stFltTreatyType != null) {
                sqa.addClause("i.treaty_type = ?");
                sqa.addPar(stFltTreatyType);
            }

        }

        if (stFltClaimStatus != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(stFltClaimStatus);
        }

        if (status != null) {
            if (FinCodec.PolicyStatus.POLICY.equalsIgnoreCase(status)) {
                sqa.addClause("a.status in (?,?,?)");
                sqa.addPar(FinCodec.PolicyStatus.POLICY);
                sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
                sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
            } else {
                sqa.addClause("a.status = ?");
                sqa.addPar(status);
            }
        }

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start)>=?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start)<=?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date)>=?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date)<=?");
            sqa.addPar(policyDateTo);
        }

        if (entryDateFrom != null) {
            sqa.addClause("a.create_date>=?");
            sqa.addPar(entryDateFrom);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end)>=?");
            sqa.addPar(expirePeriodFrom);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id=?");
            sqa.addPar(stPolicyTypeID);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end)<=?");
            sqa.addPar(expirePeriodTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code=?");
            sqa.addPar(stBranch);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("c.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        final SQLAssembler sqaobj = new SQLAssembler();

        sqaobj.addSelect("distinct pol_id");
        sqaobj.addQuery("from ins_pol_obj a ");

        if (stRiskLocation != null) {
            sqaobj.addClause("upper(risk_location) like ?");
            sqaobj.addPar(stRiskLocation.toUpperCase());
        }

        if (stPostCode != null) {
            sqaobj.addClause("a.ref6d like ?");
            sqaobj.addPar('%' + stPostCode + '%');
        }

        if (stRiskCode != null) {
            sqaobj.addClause("a.ins_risk_cat_id like ?");
            sqaobj.addPar('%' + stRiskCode + '%');
        }

        if (stZoneCode != null) {
            sqaobj.addQuery(" inner join ins_pol_cover b on b.ins_pol_obj_id = a.ins_pol_obj_id");
            sqaobj.addClause("b.zone_id like ?");
            sqaobj.addPar('%' + stZoneCode + '%');
        }

        /*
        if (stPostCode!=null) {
        sqaobj.addQuery(" inner join s_region_map2 b on b.region_map_id = a.zipcode");
        sqaobj.addClause("upper(b.postal_code) like ?");
        sqaobj.addPar(stRiskLocation.toUpperCase());
        }

        if (stRiskCode!=null) {
        sqaobj.addClause("a.riskcode like ?");
        sqaobj.addPar(stRiskCode.toUpperCase());
        }*/

        if (stRiskCardNo != null) {
            sqaobj.addClause("a.riskcardno like ?");
            sqaobj.addPar(stRiskCardNo.toUpperCase());
        }

        if (sqaobj.hasClause()) {
            sqa.addClause("pol_id in (" + sqaobj.getSQL() + ")");
            sqa.getPar().addAll(sqaobj.getPar());
        }

        if (USE_PREMI) {
            sqa.addSelect("(coalesce ((select sum(amount_settled) from ar_invoice where ar_invoice.refid0='PREMI/'||a.pol_id and commit_flag='Y'),0)) as premi_paid");
        }

        if (USE_EXT) {
            sqa.addSelect("(coalesce((select sum(amount) from ar_pol2 where ins_item_cat='COMM' and pol_id=a.pol_id),0)) as ap_comis");
            sqa.addSelect("(coalesce((select sum(amount_settled) from ar_pol2 where ins_item_cat='COMM' and pol_id=a.pol_id),0)) as ap_comis_p");
            sqa.addSelect("(coalesce((select sum(amount) from ar_pol2 where ins_item_cat='BROKR' and pol_id=a.pol_id ),0)) as ap_brok");
            sqa.addSelect("(coalesce((select sum(amount_settled) from ar_pol2 where ins_item_cat='BROKR' and pol_id=a.pol_id),0)) as ap_brok_p");
        }

        //tes

        if (groupAll) {
            for (int i = 0; i < objectFields.length; i++) {
                String[] f = objectFields[i];

                if (groupAll) //sqa.addSelect("summ("+f[0]+") as "+f[1]);
                {
                    sqa.addGroup(f[0]);
                }

            }
        }

        for (int i = 0; i < policyFields.length; i++) {
            String[] policyField = policyFields[i];

            if (groupAll) //sqa.addSelect("summ("+policyField[0]+") as "+policyField[1]);
            {
                sqa.addGroup(policyField[0]);
            }

        }

//      if (groupAll)
//         for (int i = 0; i < objectFields.length; i++) {
//            String[] f = objectFields[i];
//
//            if (groupAll)
//               //sqa.addSelect("summ("+f[0]+") as "+f[1]);
//               sqa.addGroup(policyField[0]);
//           // else
//               //sqa.addSelect(f[0]+" as "+f[1]);
//         }
        //finish


        if (groupBy != null) {
            sqa.addGroup(groupBy);
        }
        //else
        //sqa.addOrder("date_trunc('day',a.policy_date)");

        boolean isClaim = FinCodec.PolicyStatus.CLAIM.equalsIgnoreCase(status);

        if (!isClaim) {
            sqa.addClause("a.effective_flag = 'Y'");
            //sqa.addClause(" d.pol_id=a.pol_id and d.tax_amount != 0");
        }

        if (EFFECTIVE) {
            sqa.addClause("a.effective_flag = 'Y'");
            //sqa.addClause(" d.pol_id=a.pol_id and d.tax_amount != 0");
        }


        boolean USE_BLANKET = FLT_OUTS_PREMI || FLT_PAID_PREMI;

        if (USE_BLANKET) {
            String gquery = sqa.getSQL();
            ArrayList vpat = sqa.getPar();

            sqa = new SQLAssembler();
            sqa.setPar(vpat);
            sqa.addQuery(" from (" + gquery + ") x");
            sqa.addSelect("x.*");
        }

        if (FLT_OUTS_PREMI) {
            sqa.addClause("premi_paid+ap_comis_p+ap_brok_p < premi_netto+ap_comis+ap_brok");
        }

        if (FLT_PAID_PREMI) {
            sqa.addClause("premi_paid+ap_comis_p+ap_brok_p = premi_netto+ap_comis+ap_brok");
        }


        /*
        SQLAssembler sql2 = new SQLAssembler();

        sql2.addSelect(" a.* ");
        sql2.addQuery(" from ins_pol_items a, ins_policy b "+
        " where b.pol_id=a.pol_id ");
        sql2.addOrder(" b.policy_date");*/


        DTOList l;
        //DTOList m;

        if (USE_HASH) {
            l = sqa.getList(HashDTO.class);
        } else {
            l = sqa.getList(InsurancePolicyView.class);
            //m = sql2.getList(InsurancePolicyItemsView.class);

        }

        return l;
    }

    public String getStInsCompanyID() {
        return stInsCompanyID;
    }

    public void setStInsCompanyID(String stInsCompanyID) {
        this.stInsCompanyID = stInsCompanyID;
    }

    public String getStInsCompanyName() {
        return stInsCompanyName;
    }

    public void setStInsCompanyName(String stInsCompanyName) {
        this.stInsCompanyName = stInsCompanyName;
    }

    private void addAutoSumm(SQLAssembler sqa, boolean groupOn, String field, String alias) {
        if (groupOn) {
            sqa.addSelect("summ(" + field + ") as " + alias);
        } else {
            sqa.addSelect(field + " as " + alias);
        }
    }

    private DTOList getTreatyTypes() throws Exception {
        return ListUtil.getDTOListFromQuery("select ins_treaty_type_id from ins_treaty_types", InsuranceTreatyTypesView.class);
    }

    public void marketing() {
    }

    public void uwrit() {
        enableRiskFilter = true;
    }

    public void chgform() {
    }

    public void go() {
        stPrintForm = (String) getAttribute("rpt");
        enableSelectForm = false;

        stReportTitle = LOVManager.getInstance().getDescription(stPrintForm, "VS_PROD_PRINTING");

//        setDefault();
    }

    public String getStReportTitle() {
        return stReportTitle;
    }

    public void setStReportTitle(String stReportTitle) {
        this.stReportTitle = stReportTitle;
    }

    public String getStZoneCode() {
        return stZoneCode;
    }

    public void setStZoneCode(String stZoneCode) {
        this.stZoneCode = stZoneCode;
    }

    public String getStZoneCodeName() {
        return stZoneCodeName;
    }

    public void setStZoneCodeName(String stZoneCodeName) {
        this.stZoneCodeName = stZoneCodeName;
    }

    public String getStPolicyTypeGroupDesc() {
        return stPolicyTypeGroupDesc;
    }

    public void setStPolicyTypeGroupDesc(String stPolicyTypeGroupDesc) {
        this.stPolicyTypeGroupDesc = stPolicyTypeGroupDesc;
    }

    public void updateABAProdukByDate(DTOList data) throws Exception {
        try {

            if (true) {
                throw new RuntimeException("test");
            }

            final SQLUtil S = new SQLUtil();

            final DTOList produk2 = new DTOList();

            produk2.markAllUpdate();

            for (int i = 0; i < data.size(); i++) {
                InsuranceProdukView produk = (InsuranceProdukView) data.get(i);

                if (true) {
                    throw new RuntimeException(produk.getStPolicyID());
                }

                produk2.add(produk);

                produk.markUpdate();

                produk.setStFlag("Y");
            }

            S.store(produk2);
            S.release();

        } catch (Exception e) {
            ctx.setRollbackOnly();
        }
    }

    public String getStNoUrut() {
        return stNoUrut;
    }

    public void setStNoUrut(String stNoUrut) {
        this.stNoUrut = stNoUrut;
    }

    public DTOList SOA() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        final SQLAssembler sqa1 = new SQLAssembler();

        sqa.addSelect(
                "	e.description as cover_type_code,j.treaty_type as co_treaty_id, a.ccy,"
                + "	sum(coalesce((((d.premi_new*a.ccy_rate)/(getvalid(a.premi_total=0,a.premi_total)*a.ccy_rate))*(h.premi_amount*a.ccy_rate)),0)) as premi_amt,"
                + "	j.comm_ri_pct as nd_brok1pct,"
                + "	sum(coalesce((((d.premi_new*a.ccy_rate)/(getvalid(a.premi_total=0,a.premi_total)*a.ccy_rate))*(h.comm_amt*a.ccy_rate)),0)) as nd_brok2pct,"
                + "	sum(coalesce((((d.premi_new*a.ccy_rate)/(getvalid(a.premi_total=0,a.premi_total)*a.ccy_rate))*(h.premi_amount*a.ccy_rate)),0))-sum(coalesce((((d.premi_new*a.ccy_rate)/(getvalid(a.premi_total=0,a.premi_total)*a.ccy_rate))*(h.comm_amt*a.ccy_rate)),0)) as premi_netto, "
                + "	i.sharepct as nd_hfeepct");


        sqa.addQuery(
                " from ins_policy a"
                + "	inner join ins_pol_obj c on c.pol_id=a.pol_id"
                + "	inner join ins_pol_cover d on a.pol_id = d.pol_id"
                + "	inner join ins_cover e on d.ins_cover_id = e.ins_cover_id"
                + "	inner join ins_pol_treaty g on g.ins_pol_obj_id = c.ins_pol_obj_id"
                + "	inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id"
                + "	inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id"
                + "	inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id"
                + "	inner join ent_master m on m.ent_id = i.member_ent_id ");


        sqa.addClause("a.status IN ('POLICY','ENDORSE','RENEWAL')");

        sqa.addClause("a.effective_flag = 'Y'");

        sqa.addClause("j.treaty_type not in ('XOL1','XOL2','XOL3','XOL4','XOL5')");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("m.ent_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stFltTreatyType != null) {
            sqa.addClause("j.treaty_type = ?");
            sqa.addPar(stFltTreatyType);
        }

        final String sql = "select * from ( " + sqa.getSQL() + " group by d.ins_cover_id,e.description,j.treaty_type,j.comm_ri_pct,a.ccy,h.claim_amount,i.sharepct "
                + " ) a where premi_amt <> 0 or nd_brok2pct <> 0 order by cover_type_code ";

        sqa1.addSelect(
                " e.description as cover_type_code, sum(i.claim_amount) as claim_amount ");

        sqa1.addQuery(
                " from ins_policy a"
                + "	inner join ins_pol_obj c on c.pol_id=a.pol_id"
                + "	inner join ins_pol_cover d on a.pol_id = d.pol_id"
                + "	inner join ins_cover e on d.ins_cover_id = e.ins_cover_id"
                + "	inner join ins_pol_treaty g on g.ins_pol_obj_id = c.ins_pol_obj_id"
                + "	inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id"
                + "	inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id"
                + "	inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id"
                + "	inner join ent_master m on m.ent_id = i.member_ent_id ");


        sqa1.addClause("a.status IN ('CLAIM')");
        sqa1.addClause("a.claim_status = 'DLA'");
        sqa1.addClause("a.claim_effective_flag = 'Y'");
        sqa1.addClause("j.treaty_type not in ('XOL1','XOL2','XOL3','XOL4','XOL5')");

        if (periodFrom != null) {
            sqa1.addClause("date_trunc('day',a.period_start) >= ?");
            sqa1.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa1.addClause("date_trunc('day',a.period_start) <= ?");
            sqa1.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa1.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa1.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa1.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa1.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa1.addClause("a.cc_code = ?");
            sqa1.addPar(stBranch);
        }

        if (stEntityID != null) {
            sqa1.addClause("m.ent_id = ?");
            sqa1.addPar(stEntityID);
        }

        if (stPolicyTypeID != null) {
            sqa1.addClause("a.pol_type_id = ?");
            sqa1.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa1.addClause("a.ins_policy_type_grp_id = ?");
            sqa1.addPar(stPolicyTypeGroupID);
        }

        if (stFltTreatyType != null) {
            sqa1.addClause("j.treaty_type = ?");
            sqa1.addPar(stFltTreatyType);
        }

        final String sql1 = "select * from ( " + sqa1.getSQL() + " group by e.description,a.pol_id,a.pol_no,a.dla_no "
                + " ) a where claim_amount <> 0 order by cover_type_code ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final DTOList m = ListUtil.getDTOListFromQuery(
                sql1,
                sqa1.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPS", m);

        return l;
    }

    public void EXPORT_OBJEK() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal komisi = new BigDecimal(0);
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("policy_date");
            row0.createCell(1).setCellValue("period_start");
            row0.createCell(2).setCellValue("period_end");
            row0.createCell(3).setCellValue("pol_no");
            row0.createCell(4).setCellValue("cust_name");
            row0.createCell(5).setCellValue("nama_debitur/principal");
            row0.createCell(6).setCellValue("refd1");
            row0.createCell(7).setCellValue("refd2");
            row0.createCell(8).setCellValue("refd3");
            row0.createCell(9).setCellValue("ref3");
            row0.createCell(10).setCellValue("ref4");
            row0.createCell(11).setCellValue("ref5");
            row0.createCell(12).setCellValue("ref6");
            row0.createCell(13).setCellValue("postal_code");
            row0.createCell(14).setCellValue("risk_class");
            row0.createCell(15).setCellValue("ins_risk_cat_code");
            row0.createCell(16).setCellValue("description");
            row0.createCell(17).setCellValue("ccy");
            row0.createCell(18).setCellValue("ccy_rate");
            row0.createCell(19).setCellValue("insured_amount");
            row0.createCell(20).setCellValue("premi_total");
            row0.createCell(21).setCellValue("disc");
            row0.createCell(22).setCellValue("comm");
            row0.createCell(23).setCellValue("deduct");
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("11")) {
                    row0.createCell(24).setCellValue("jenis");
                    row0.createCell(25).setCellValue("digunakan");
                    row0.createCell(26).setCellValue("coverage");
                }
            }

            komisi = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            if (h.getFieldValueByFieldNameDT("policy_date") != null);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            if (h.getFieldValueByFieldNameDT("period_start") != null);
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            if (h.getFieldValueByFieldNameDT("period_end") != null);
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            if (h.getFieldValueByFieldNameST("pol_no") != null);
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            if (h.getFieldValueByFieldNameST("cust_name") != null);
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            if (h.getFieldValueByFieldNameST("ref1") != null);
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            if (h.getFieldValueByFieldNameST("refd1") != null);
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("refd1"));
            if (h.getFieldValueByFieldNameST("refd2") != null);
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("refd2"));
            if (h.getFieldValueByFieldNameST("refd3") != null);
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("refd3"));
            if (h.getFieldValueByFieldNameST("ref3") != null);
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("ref3"));
            if (h.getFieldValueByFieldNameST("ref4") != null);
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("ref4"));
            if (h.getFieldValueByFieldNameST("ref5") != null);
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("ref5"));
            if (h.getFieldValueByFieldNameST("ref6") != null);
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            if (h.getFieldValueByFieldNameST("postal_code") != null);
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("postal_code"));
            if (h.getFieldValueByFieldNameST("risk_class") != null);
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("risk_class"));
            if (h.getFieldValueByFieldNameST("ins_risk_cat_code") != null);
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            if (h.getFieldValueByFieldNameST("description") != null);
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameST("ccy"));
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("ccy_rate").doubleValue());
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_disc1") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("nd_disc1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(22).setCellValue(komisi.doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("deduct") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("deduct").doubleValue());
            }
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("11")) {
                    if (h.getFieldValueByFieldNameST("ref2d") != null) {
                        row.createCell(24).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
                    }
                    if (h.getFieldValueByFieldNameST("ref7d") != null) {
                        row.createCell(25).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
                    }
                    if (h.getFieldValueByFieldNameST("jaminan1") != null
                            || h.getFieldValueByFieldNameST("jaminan2") != null
                            || h.getFieldValueByFieldNameST("jaminan3") != null
                            || h.getFieldValueByFieldNameST("jaminan4") != null
                            || h.getFieldValueByFieldNameST("jaminan5") != null
                            || h.getFieldValueByFieldNameST("jaminan6") != null) {
                        row.createCell(26).setCellValue(
                                LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan1")) + ", "
                                + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan2")) + ", "
                                + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan3")) + ", "
                                + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan4")) + ", "
                                + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan5")) + ", "
                                + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan6")));
                    }
                }
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXCEL_OBJEK() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.policy_date,a.period_start,a.period_end,a.pol_id,';'||a.pol_no as pol_no,a.cust_name,a.pol_type_id,b.refd1,b.refd2,b.refd3,b.refd4,b.refd5,b.refd6,"
                + " b.ref1,b.ref2,b.ref2d,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref7d,b.ref8,b.ref9,b.ref9d as postal_code,b.ref10,b.ref11,b.ref13,"
                + " b.ref14,b.ref15,b.ref16,b.ref17,b.ref19,b.ref20,b.ref23,b.ref24,b.ref25,b.ref26,b.ref28,b.ref29,b.ref30,b.refn1,b.refn2,"
                + " b.risk_class,c.ins_risk_cat_code,c.description, a.ccy,a.ccy_rate,b.insured_amount,b.premi_total,(a.nd_disc1+a.nd_disc2) as nd_disc1,"
                + " (a.nd_comm1+a.nd_comm2) as nd_comm1,(a.nd_comm3+a.nd_comm4) as nd_comm2,"
                + " (select sum(amount) from ins_pol_deduct x "
                + " where x.ins_pol_obj_id = b.ins_pol_obj_id ) as deduct,"
                + " (select cekstatus(x.ins_cover_id = '2',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '2' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan1,"
                + " (select cekstatus(x.ins_cover_id = '107',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '107' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan2,"
                + " (select cekstatus(x.ins_cover_id = '108',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '108' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan3,"
                + " (select cekstatus(x.ins_cover_id = '101',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '101' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan4,"
                + " (select cekstatus(x.ins_cover_id = '22',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '22' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan5,"
                + " (select cekstatus(x.ins_cover_id = '123',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id= '123' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan6 ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join ins_risk_cat c on b.ins_risk_cat_id = c.ins_risk_cat_id"
                + " inner join ent_master e on e.ent_id = a.entity_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  ");

        //sqa.addClause(" a.status in ('POLICY','ENDORSE','RENEWAL')");
        //sqa.addClause(" a.effective_flag='Y'");
        sqa.addClause("(b.insured_amount <> 0 or b.premi_total <> 0)");
        sqa.addClause("a.active_flag = 'Y'");

        if (stStatus != null) {
            sqa.addClause("a.status = '" + stStatus + "'");
            //sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.effective_flag = 'Y'");
        }

        if (Tools.isNo(stIndex)) {
            sqa.addClause("coalesce(a.effective_flag,'') <> 'Y'");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = '" + stBranch + "'");
//            //sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = '" + stRegion + "'");
//            //sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");
//                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
//                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
//                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
//                sqa.addPar(stBranch);
//                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stBranch + "'");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = sqa.getSQL() + " order by a.pol_no,b.ins_pol_obj_id";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "objek_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public String getStNama() {
        return stNama;
    }

    public void setStNama(String stNama) {
        this.stNama = stNama;
    }

    public void EXCEL_KREASI2() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.cc_code,a.pol_no,a.pol_type_id,e.ref_ent_id,substr(a.policy_date::text,6,2) as bulan,substr(a.policy_date::text,3,2) as tahun,"
                + "c.ref1 as nama,c.refd1 as tgl_lhr,c.refd2 as tgl_cair,c.refd3 as tgl_akhir,c.ref2 as umur,c.ref6 as lama,"
                + "getpremi(a.status='ENDORSE' and a.create_who='administrator',c.refn4,c.insured_amount) as insured,"
                + "c.insured_amount as insured_amount,"
                + "c.refn2 as premi,c.refn9 as comm1,a.kreasi_type_desc,e.short_name,b.description, "
                + "(select d.share_pct from ins_pol_coins d where d.policy_id = a.pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct  ");

        sqa.addQuery("   from ins_policy a "
                + "	inner join ins_pol_obj c on c.pol_id = a.pol_id "
                + "	left join ent_master e on e.ent_id = c.ref8::bigint "
                + "	left join gl_cost_center b on b.cc_code = a.cc_code");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        //sqa.addClause("c.refn2 <> 0");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stCoinsurerID != null) {
//            sqa.addClause("a.coinsurer_id = '" + stCoinsurerID + "'");
            sqa.addClause("c.ref8 = '" + stCoinsurerID + "'");
            //sqa.addPar(stCoinsurerID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = " + stPolicyTypeGroupID);
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = " + stPolicyTypeID);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stWilayahID != null) {
            if (stWilayahID.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code in ('10','13','17','20','21','22','40','43','70')");
            } else {
                sqa.addClause("a.cc_code not in ('10','13','17','20','21','22','40','43','70')");
            }
        }

        if (stRekapNo != null) {
//            if (stCoinsurerID.equalsIgnoreCase("96")) {
//                sqa.addClause("a.ref3 = '" + stRekapNo + "'");
//            } else {
//                sqa.addClause("a.ref4 = '" + stRekapNo + "'");
//            }
            sqa.addClause("c.rekap_kreasi = '" + stRekapNo + "'");
            //sqa.addPar(stRekapNo);
        }

        String sql = "select ';'||pol_no as nopol,nama,tgl_lhr,tgl_cair,tgl_akhir,umur,lama as bulan,"
                + " round(((insured_amount*share_pct)/100),0) as insured,"
                + " round(((premi*share_pct)/100),0) as premi,"
                + " round(((comm1*share_pct)/100),0) as komisi,kreasi_type_desc as jenis_kredit,description as daerah "
                + " from ( " + sqa.getSQL() + " ) x ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );
        
        SessionManager.getInstance().getRequest().setAttribute("RPT", l);
        
        return l;
         */

        sql = sql + " order by cc_code,pol_no";

        SQLUtil S = new SQLUtil();

        String nama_file = "rekap_kreasi_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList EXCEL_KREASI4() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.cc_code,a.attr_pol_no as pol_no,substr(a.mutation_date::text,6,2) as bulan,substr(a.mutation_date::text,3,2) as tahun,g.ent_name,"
                + "c.ref1 as nama,c.refd1 as tgl_lhr,c.refd2 as tgl_cair,c.refd3 as tgl_akhir,c.refd5 as tgl_rest,c.ref2 as umur,c.ref22 as umurtdkt,c.ref6 as lama,b.description,"
                + "c.insured_amount as insured, c.ref79, c.refn2 as premi_ko,c.refn9 as comm1,d.ref_ent_id,d.short_name,e.kreasi_type_desc,e.endorse_mode,"
                + "(select d.share_pct from ins_pol_coins d where d.policy_id = a.attr_pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct,f.division,order_no,c.refn5,c.refd5,C.REFN4,   "
                + "( select coalesce(s.ref3,'XXX') "
                + " from ins_policy s "
                + " where s.pol_id =    "
                + "  (select pol_id from ins_policy where pol_no =substr(e.pol_no,0,17)||'00'  "
                + "  and status in ('POLICY','RENEWAL') and effective_flag = 'Y') "
                + " ) as rekap_induk1, "
                + " ( select coalesce(s.ref4,'XXX')  "
                + " from ins_policy s "
                + " where s.pol_id =    "
                + "  (select pol_id from ins_policy where pol_no = substr(e.pol_no,0,17)||'00'  "
                + "  and status in ('POLICY','RENEWAL') and effective_flag = 'Y') "
                + " ) as rekap_induk2,c.ref8,a.receipt_no,a.receipt_date");

        sqa.addQuery(" from ar_invoice a "
                + " inner join gl_cost_center b on b.cc_code = a.cc_code "
                + " inner join ins_pol_obj c on c.pol_id = a.attr_pol_id "
                + " inner join ent_master d on d.ent_id = c.ref8::bigint  "
                + " inner join ins_policy e on e.pol_id = a.attr_pol_id "
                + " inner join ent_master g on g.ent_id = e.entity_id  "
                + " left join s_valueset f on f.vs_code = e.kreasi_type_id and f.vs_group = 'INSOBJ_KREASI_KREDIT' ");

        sqa.addClause("a.ar_trx_type_id = 10");
        sqa.addClause("a.attr_pol_type_id = '21'");
        sqa.addClause("c.refn2 <> 0");
        sqa.addClause("e.active_flag = 'Y' and e.effective_flag = 'Y'");
        sqa.addClause("(coalesce(a.cancel_flag,'') <> 'Y' and coalesce(a.posted_flag,'Y') = 'Y')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.mutation_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.mutation_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stKreasiID != null) {
            sqa.addClause("c.ref8 = ?");
            sqa.addPar(stKreasiID);
        }

        if (stKreasiID != null) {
            sqa.addClause("a.ar_cust_id = ?");
            sqa.addPar(stKreasiID);
        }

        if (stKreasiName != null) {
            sqa.addClause("a.no_surat_hutang = ?");
            sqa.addPar(stKreasiName);
        }

        if (stStatus != null) {
            sqa.addClause("e.status = ?");
            sqa.addPar(stStatus);
        }

        if (stWilayahID != null) {
            if (stWilayahID.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code in ('10','13','17','20','21','22','40','43','70')");
            } else {
                sqa.addClause("a.cc_code not in ('10','13','17','20','21','22','40','43','70')");
            }
        }

        if (Tools.isYes(stFFac)) {
            sqa.addClause("c.ref20 = 'Y'");
        }

        final String sql = "select *,round(((insured*share_pct)/100),0) as insured_amount,"
                + " round(((premi_ko*share_pct)/100),0) as premi_koas,"
                + " round(((comm1*share_pct)/100),0) as nd_comm1,"
                + " coalesce(ref79,cek_endorse_cause(pol_no, order_no::character varying, nama, tgl_lhr, umur,tgl_cair,tgl_akhir,REFN4,refn5,refd5,REF8,premi_ko)) as alasan,receipt_no,receipt_date"
                + " from ( " + sqa.getSQL() + " ) x order by cc_code,pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_KREASI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();
        //HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");
        //HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        int counter = 1;
        int norut = 0;
        //BigDecimal insured = null;
        //BigDecimal premiBruto = null;
        //BigDecimal premiNetto = null;
        //BigDecimal rate = null;
        //String polTypeDesc = getStPolicyTypeDesc();
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header0
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("REKAPITULASI DAFTAR PESERTA ASURANSI KREASI");

            //bikin header1
            XSSFRow row1 = sheet.createRow(1);
            row1.createCell(0).setCellValue("PT. ASURANSI BANGUN ASKRIDA");

            //bikin header2
            XSSFRow row2 = sheet.createRow(2);
            row2.createCell(0).setCellValue("BULAN : " + DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            /*
            //bikin header3
            XSSFRow row3 = sheet.createRow(3);
            row3.createCell(0).setCellValue("NO. REK : "+getStRekapNo()+"/"+h.getFieldValueByFieldNameST("short_name")+"."+h.getFieldValueByFieldNameST("ref_ent_id")+"/AK."+String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue())+"/"+h.getFieldValueByFieldNameST("bulan")+"/"+h.getFieldValueByFieldNameST("tahun"));
             */

            //bikin header3
            String keterangan = null;
            if (Tools.isYes(getStFFac())) {
                keterangan = "NO. REK : " + getStKreasiName() + " - Debitur Facultatif ";
            } else {
                keterangan = "NO. REK : " + getStKreasiName();
            }
            XSSFRow row3 = sheet.createRow(3);
            row3.createCell(0).setCellValue(keterangan);

            //bikin header4
            XSSFRow row5 = sheet.createRow(4);
            row5.createCell(0).setCellValue("Nomor Polis");
            row5.createCell(1).setCellValue("Nomor Registrasi");
            row5.createCell(2).setCellValue("Nama");
            row5.createCell(3).setCellValue("No. Urut");
            row5.createCell(4).setCellValue("Tanggal Lahir");
            row5.createCell(5).setCellValue("Tanggal Cair");
            row5.createCell(6).setCellValue("Tanggal Akhir");
            row5.createCell(7).setCellValue("Tanggal Restitusi");
            row5.createCell(8).setCellValue("Umur");
            row5.createCell(9).setCellValue("Umur Terdekat");
            row5.createCell(10).setCellValue("Bulan");
            row5.createCell(11).setCellValue("Insured Amount");
            row5.createCell(12).setCellValue("Premi");
            row5.createCell(13).setCellValue("Komisi");
            row5.createCell(14).setCellValue("Jenis Kredit");
            row5.createCell(15).setCellValue("Tipe Kredit");
            row5.createCell(16).setCellValue("Daerah");
            row5.createCell(17).setCellValue("Keterangan");
            row5.createCell(18).setCellValue("No. Rekap Induk");
            row5.createCell(19).setCellValue("Keterangan Endorsemen");
            row5.createCell(20).setCellValue("No. Bukti Bayar");
            row5.createCell(21).setCellValue("Tanggal Bayar");
            row5.createCell(22).setCellValue("Sumbis");

            //rate = BDUtil.getRateFromPct(h.getFieldValueByFieldNameBD("share_pct"));
            //insured = BDUtil.mul(h.getFieldValueByFieldNameBD("insured"), rate);
            //premiBruto = BDUtil.mul(h.getFieldValueByFieldNameBD("premi"), rate);
            //premiNetto = BDUtil.sub(premiBruto, h.getFieldValueByFieldNameBD("comm1"));

            norut++;

            if (i > 0) {
                HashDTO s = (HashDTO) list.get(i - 1);
                String nopol = s.getFieldValueByFieldNameST("pol_no");
                String nopol2 = h.getFieldValueByFieldNameST("pol_no");
                if (!nopol.equalsIgnoreCase(nopol2)) {
                    counter++;

                    norut = 1;
                }
            }

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 5);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(1).setCellValue(String.valueOf(counter) + "/AK.21/" + h.getFieldValueByFieldNameST("ref_ent_id") + "/" + h.getFieldValueByFieldNameST("bulan") + "/" + h.getFieldValueByFieldNameST("tahun"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("nama"));
            row.createCell(3).setCellValue(String.valueOf(norut));
            if (h.getFieldValueByFieldNameDT("tgl_lhr") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("tgl_lhr"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_cair") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tgl_cair"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_akhir") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("tgl_akhir"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_rest") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("tgl_rest"));
            }
            if (h.getFieldValueByFieldNameST("umur") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("umur"));
            }
            if (h.getFieldValueByFieldNameST("umurtdkt") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("umurtdkt"));
            }
            if (h.getFieldValueByFieldNameST("lama") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("lama"));
            }
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_koas") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("premi_koas").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("kreasi_type_desc") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("kreasi_type_desc"));
            }
            if (h.getFieldValueByFieldNameST("division") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("division"));
            }
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameST("endorse_mode"));

            String rekap1 = h.getFieldValueByFieldNameST("rekap_induk1");
            String rekap2 = h.getFieldValueByFieldNameST("rekap_induk2");
            String param = h.getFieldValueByFieldNameST("short_name") + "." + h.getFieldValueByFieldNameST("ref_ent_id");
            String rekap = "";

            if (rekap1 != null && rekap2 != null) {
                if (rekap1.contains(param)) {
                    rekap = rekap1;
                } else if (rekap2.contains(param)) {
                    rekap = rekap2;
                }
            }

            row.createCell(18).setCellValue(rekap);
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameST("alasan"));

            if (h.getFieldValueByFieldNameST("receipt_no") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameST("receipt_no"));
            }

            if (h.getFieldValueByFieldNameDT("receipt_date") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameDT("receipt_date"));
            }
            if (h.getFieldValueByFieldNameST("ent_name") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList REKAPCAB100() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" b.category1 as bus_source,a.cc_code,a.region_id, "
                + "sum(a.premi_total*a.ccy_rate) as premi_total_adisc,"
                + "sum(a.nd_disc1*a.ccy_rate) as nd_disc1 ");

        sqa.addQuery("   from ins_policies a "
                + "      left join ent_master b on b.ent_id = a.entity_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = sqa.getSQL() + "   group by b.category1,a.cc_code,a.region_id order by a.cc_code,a.region_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStRegionID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList REKAPTYPE100() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" b.category1 as bus_source,a.pol_type_id, "
                + "sum(a.premi_total*a.ccy_rate) as premi_total_adisc, "
                + "sum(a.nd_disc1*a.ccy_rate) as nd_disc1 ");

        sqa.addQuery("   from ins_policies a"
                + "      left join ent_master b on b.ent_id = a.entity_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = sqa.getSQL() + "   group by "
                + " b.category1,b.ins_inward_flag,a.pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_RPP_COMPANY_ALL() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("code");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("ID");
            row0.createCell(3).setCellValue("nama");
            row0.createCell(4).setCellValue("premi_adisc");
            row0.createCell(5).setCellValue("premi");
            row0.createCell(6).setCellValue("bpol");
            row0.createCell(7).setCellValue("bmat");
            row0.createCell(8).setCellValue("diskon");
            row0.createCell(9).setCellValue("hfee");
            row0.createCell(10).setCellValue("komisi");
            row0.createCell(11).setCellValue("feebase");
            row0.createCell(12).setCellValue("bfee");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("premi_adisc").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPP_COMPANY_ALLTYPE() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);


            //bikin header
            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue("description");
            row1.createCell(1).setCellValue("ent_id");
            row1.createCell(2).setCellValue("ent_name");
            row1.createCell(3).setCellValue("sumbis");
            row1.createCell(4).setCellValue("gl_code");
            row1.createCell(5).setCellValue("fr_premi");
            row1.createCell(6).setCellValue("fr_disc");
            row1.createCell(7).setCellValue("cons_premi");
            row1.createCell(8).setCellValue("cons_disc");
            row1.createCell(9).setCellValue("mv_premi");
            row1.createCell(10).setCellValue("mv_disc");
            row1.createCell(11).setCellValue("pa_premi");
            row1.createCell(12).setCellValue("pa_disc");
            row1.createCell(13).setCellValue("cis_premi");
            row1.createCell(14).setCellValue("cis_disc");
            row1.createCell(15).setCellValue("car_premi");
            row1.createCell(16).setCellValue("car_disc");
            row1.createCell(17).setCellValue("ear_premi");
            row1.createCell(18).setCellValue("ear_disc");
            row1.createCell(19).setCellValue("mb_premi");
            row1.createCell(20).setCellValue("mb_disc");
            row1.createCell(21).setCellValue("cpm_premi");
            row1.createCell(22).setCellValue("cpm_disc");
            row1.createCell(23).setCellValue("eei_premi");
            row1.createCell(24).setCellValue("eei_disc");
            row1.createCell(25).setCellValue("pliab_premi");
            row1.createCell(26).setCellValue("pliab_disc");
            row1.createCell(27).setCellValue("burg_premi");
            row1.createCell(28).setCellValue("burg_disc");
            row1.createCell(29).setCellValue("mc_premi");
            row1.createCell(30).setCellValue("mc_disc");
            row1.createCell(31).setCellValue("cit_premi");
            row1.createCell(32).setCellValue("cit_disc");
            row1.createCell(33).setCellValue("hull_premi");
            row1.createCell(34).setCellValue("hull_disc");
            row1.createCell(35).setCellValue("golf_premi");
            row1.createCell(36).setCellValue("golf_disc");
            row1.createCell(37).setCellValue("ga_premi");
            row1.createCell(38).setCellValue("ga_disc");
            row1.createCell(39).setCellValue("av_premi");
            row1.createCell(40).setCellValue("av_disc");
            row1.createCell(41).setCellValue("eq_premi");
            row1.createCell(42).setCellValue("eq_disc");
            row1.createCell(43).setCellValue("pjtki_premi");
            row1.createCell(44).setCellValue("pjtki_disc");
            row1.createCell(45).setCellValue("kreasi_premi");
            row1.createCell(46).setCellValue("kreasi_disc");
            row1.createCell(47).setCellValue("oil_premi");
            row1.createCell(48).setCellValue("oil_disc");
            row1.createCell(49).setCellValue("ts_premi");
            row1.createCell(50).setCellValue("ts_disc");
            row1.createCell(51).setCellValue("he_premi");
            row1.createCell(52).setCellValue("he_disc");
            row1.createCell(53).setCellValue("simpeda_premi");
            row1.createCell(54).setCellValue("simpeda_disc");
            row1.createCell(55).setCellValue("nsimpeda_premi");
            row1.createCell(56).setCellValue("nsimpeda_disc");
            row1.createCell(57).setCellValue("haji_premi");
            row1.createCell(58).setCellValue("haji_disc");
            row1.createCell(59).setCellValue("citcm_premi");
            row1.createCell(60).setCellValue("citcm_disc");
            row1.createCell(61).setCellValue("ciscm_premi");
            row1.createCell(62).setCellValue("ciscm_disc");
            row1.createCell(63).setCellValue("sbbb_premi");
            row1.createCell(64).setCellValue("sbbb_disc");
            row1.createCell(65).setCellValue("sbpb_premi");
            row1.createCell(66).setCellValue("sbpb_disc");
            row1.createCell(67).setCellValue("sbapb_premi");
            row1.createCell(68).setCellValue("sbapb_disc");
            row1.createCell(69).setCellValue("sbmb_premi");
            row1.createCell(70).setCellValue("sbmb_disc");
            row1.createCell(71).setCellValue("kbgapb_premi");
            row1.createCell(72).setCellValue("kbgapb_disc");
            row1.createCell(73).setCellValue("kbgpb_premi");
            row1.createCell(74).setCellValue("kbgpb_disc");
            row1.createCell(75).setCellValue("kbgbb_premi");
            row1.createCell(76).setCellValue("kbgbb_disc");
            row1.createCell(77).setCellValue("kbgmb_premi");
            row1.createCell(78).setCellValue("kbgmb_disc");
            row1.createCell(79).setCellValue("auto_premi");
            row1.createCell(80).setCellValue("auto_disc");
            row1.createCell(81).setCellValue("cgl_premi");
            row1.createCell(82).setCellValue("cgl_disc");
            row1.createCell(83).setCellValue("el_premi");
            row1.createCell(84).setCellValue("el_disc");
            row1.createCell(85).setCellValue("mar_premi");
            row1.createCell(86).setCellValue("mar_disc");
            row1.createCell(87).setCellValue("glass_premi");
            row1.createCell(88).setCellValue("glass_disc");
            row1.createCell(89).setCellValue("pi_premi");
            row1.createCell(90).setCellValue("pi_disc");
            row1.createCell(91).setCellValue("boiler_premi");
            row1.createCell(92).setCellValue("boiler_disc");
            row1.createCell(93).setCellValue("wca_premi");
            row1.createCell(94).setCellValue("wca_disc");
            row1.createCell(95).setCellValue("ppju_premi");
            row1.createCell(96).setCellValue("ppju_disc");
            row1.createCell(97).setCellValue("health_premi");
            row1.createCell(98).setCellValue("health_disc");
            row1.createCell(99).setCellValue("par_premi");
            row1.createCell(100).setCellValue("par_disc");
            row1.createCell(101).setCellValue("cecr_premi");
            row1.createCell(102).setCellValue("cecr_disc");
            row1.createCell(103).setCellValue("fg_premi");
            row1.createCell(104).setCellValue("fg_disc");
            row1.createCell(105).setCellValue("hole_premi");
            row1.createCell(106).setCellValue("hole_disc");
            row1.createCell(107).setCellValue("credit_premi");
            row1.createCell(108).setCellValue("credit_disc");
            row1.createCell(109).setCellValue("total_premi");
            row1.createCell(110).setCellValue("total_diskon");



            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("category1"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("gl_code"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("fr_premi").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("fr_disc").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("cons_premi").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("cons_disc").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("mv_premi").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("mv_disc").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("pa_premi").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("pa_disc").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("cis_premi").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("cis_disc").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("car_premi").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("car_disc").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("ear_premi").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("ear_disc").doubleValue());
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("mb_premi").doubleValue());
            row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("mb_disc").doubleValue());
            row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("cpm_premi").doubleValue());
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("cpm_disc").doubleValue());
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("eei_premi").doubleValue());
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("eei_disc").doubleValue());
            row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("pliab_premi").doubleValue());
            row.createCell(26).setCellValue(h.getFieldValueByFieldNameBD("pliab_disc").doubleValue());
            row.createCell(27).setCellValue(h.getFieldValueByFieldNameBD("burg_premi").doubleValue());
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameBD("burg_disc").doubleValue());
            row.createCell(29).setCellValue(h.getFieldValueByFieldNameBD("mc_premi").doubleValue());
            row.createCell(30).setCellValue(h.getFieldValueByFieldNameBD("mc_disc").doubleValue());
            row.createCell(31).setCellValue(h.getFieldValueByFieldNameBD("cit_premi").doubleValue());
            row.createCell(32).setCellValue(h.getFieldValueByFieldNameBD("cit_disc").doubleValue());
            row.createCell(33).setCellValue(h.getFieldValueByFieldNameBD("hull_premi").doubleValue());
            row.createCell(34).setCellValue(h.getFieldValueByFieldNameBD("hull_disc").doubleValue());
            row.createCell(35).setCellValue(h.getFieldValueByFieldNameBD("golf_premi").doubleValue());
            row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("golf_disc").doubleValue());
            row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("ga_premi").doubleValue());
            row.createCell(38).setCellValue(h.getFieldValueByFieldNameBD("ga_disc").doubleValue());
            row.createCell(39).setCellValue(h.getFieldValueByFieldNameBD("av_premi").doubleValue());
            row.createCell(40).setCellValue(h.getFieldValueByFieldNameBD("av_disc").doubleValue());
            row.createCell(41).setCellValue(h.getFieldValueByFieldNameBD("eq_premi").doubleValue());
            row.createCell(42).setCellValue(h.getFieldValueByFieldNameBD("eq_disc").doubleValue());
            row.createCell(43).setCellValue(h.getFieldValueByFieldNameBD("pjtki_premi").doubleValue());
            row.createCell(44).setCellValue(h.getFieldValueByFieldNameBD("pjtki_disc").doubleValue());
            row.createCell(45).setCellValue(h.getFieldValueByFieldNameBD("kreasi_premi").doubleValue());
            row.createCell(46).setCellValue(h.getFieldValueByFieldNameBD("kreasi_disc").doubleValue());
            row.createCell(47).setCellValue(h.getFieldValueByFieldNameBD("oil_premi").doubleValue());
            row.createCell(48).setCellValue(h.getFieldValueByFieldNameBD("oil_disc").doubleValue());
            row.createCell(49).setCellValue(h.getFieldValueByFieldNameBD("ts_premi").doubleValue());
            row.createCell(50).setCellValue(h.getFieldValueByFieldNameBD("ts_disc").doubleValue());
            row.createCell(51).setCellValue(h.getFieldValueByFieldNameBD("he_premi").doubleValue());
            row.createCell(52).setCellValue(h.getFieldValueByFieldNameBD("he_disc").doubleValue());
            row.createCell(53).setCellValue(h.getFieldValueByFieldNameBD("simpeda_premi").doubleValue());
            row.createCell(54).setCellValue(h.getFieldValueByFieldNameBD("simpeda_disc").doubleValue());
            row.createCell(55).setCellValue(h.getFieldValueByFieldNameBD("nsimpeda_premi").doubleValue());
            row.createCell(56).setCellValue(h.getFieldValueByFieldNameBD("nsimpeda_disc").doubleValue());
            row.createCell(57).setCellValue(h.getFieldValueByFieldNameBD("haji_premi").doubleValue());
            row.createCell(58).setCellValue(h.getFieldValueByFieldNameBD("haji_disc").doubleValue());
            row.createCell(59).setCellValue(h.getFieldValueByFieldNameBD("citcm_premi").doubleValue());
            row.createCell(60).setCellValue(h.getFieldValueByFieldNameBD("citcm_disc").doubleValue());
            row.createCell(61).setCellValue(h.getFieldValueByFieldNameBD("ciscm_premi").doubleValue());
            row.createCell(62).setCellValue(h.getFieldValueByFieldNameBD("ciscm_disc").doubleValue());
            row.createCell(63).setCellValue(h.getFieldValueByFieldNameBD("sbbb_premi").doubleValue());
            row.createCell(64).setCellValue(h.getFieldValueByFieldNameBD("sbbb_disc").doubleValue());
            row.createCell(65).setCellValue(h.getFieldValueByFieldNameBD("sbpb_premi").doubleValue());
            row.createCell(66).setCellValue(h.getFieldValueByFieldNameBD("sbpb_disc").doubleValue());
            row.createCell(67).setCellValue(h.getFieldValueByFieldNameBD("sbapb_premi").doubleValue());
            row.createCell(68).setCellValue(h.getFieldValueByFieldNameBD("sbapb_disc").doubleValue());
            row.createCell(69).setCellValue(h.getFieldValueByFieldNameBD("sbmb_premi").doubleValue());
            row.createCell(70).setCellValue(h.getFieldValueByFieldNameBD("sbmb_disc").doubleValue());
            row.createCell(71).setCellValue(h.getFieldValueByFieldNameBD("kbgapb_premi").doubleValue());
            row.createCell(72).setCellValue(h.getFieldValueByFieldNameBD("kbgapb_disc").doubleValue());
            row.createCell(73).setCellValue(h.getFieldValueByFieldNameBD("kbgpb_premi").doubleValue());
            row.createCell(74).setCellValue(h.getFieldValueByFieldNameBD("kbgpb_disc").doubleValue());
            row.createCell(75).setCellValue(h.getFieldValueByFieldNameBD("kbgbb_premi").doubleValue());
            row.createCell(76).setCellValue(h.getFieldValueByFieldNameBD("kbgbb_disc").doubleValue());
            row.createCell(77).setCellValue(h.getFieldValueByFieldNameBD("kbgmb_premi").doubleValue());
            row.createCell(78).setCellValue(h.getFieldValueByFieldNameBD("kbgmb_disc").doubleValue());
            row.createCell(79).setCellValue(h.getFieldValueByFieldNameBD("auto_premi").doubleValue());
            row.createCell(80).setCellValue(h.getFieldValueByFieldNameBD("auto_disc").doubleValue());
            row.createCell(81).setCellValue(h.getFieldValueByFieldNameBD("cgl_premi").doubleValue());
            row.createCell(82).setCellValue(h.getFieldValueByFieldNameBD("cgl_disc").doubleValue());
            row.createCell(83).setCellValue(h.getFieldValueByFieldNameBD("el_premi").doubleValue());
            row.createCell(84).setCellValue(h.getFieldValueByFieldNameBD("el_disc").doubleValue());
            row.createCell(85).setCellValue(h.getFieldValueByFieldNameBD("mar_premi").doubleValue());
            row.createCell(86).setCellValue(h.getFieldValueByFieldNameBD("mar_disc").doubleValue());
            row.createCell(87).setCellValue(h.getFieldValueByFieldNameBD("glass_premi").doubleValue());
            row.createCell(88).setCellValue(h.getFieldValueByFieldNameBD("glass_disc").doubleValue());
            row.createCell(89).setCellValue(h.getFieldValueByFieldNameBD("pi_premi").doubleValue());
            row.createCell(90).setCellValue(h.getFieldValueByFieldNameBD("pi_disc").doubleValue());
            row.createCell(91).setCellValue(h.getFieldValueByFieldNameBD("boiler_premi").doubleValue());
            row.createCell(92).setCellValue(h.getFieldValueByFieldNameBD("boiler_disc").doubleValue());
            row.createCell(93).setCellValue(h.getFieldValueByFieldNameBD("wca_premi").doubleValue());
            row.createCell(94).setCellValue(h.getFieldValueByFieldNameBD("wca_disc").doubleValue());
            row.createCell(95).setCellValue(h.getFieldValueByFieldNameBD("ppju_premi").doubleValue());
            row.createCell(96).setCellValue(h.getFieldValueByFieldNameBD("ppju_disc").doubleValue());
            row.createCell(97).setCellValue(h.getFieldValueByFieldNameBD("health_premi").doubleValue());
            row.createCell(98).setCellValue(h.getFieldValueByFieldNameBD("health_disc").doubleValue());
            row.createCell(99).setCellValue(h.getFieldValueByFieldNameBD("par_premi").doubleValue());
            row.createCell(100).setCellValue(h.getFieldValueByFieldNameBD("par_disc").doubleValue());
            row.createCell(101).setCellValue(h.getFieldValueByFieldNameBD("cecr_premi").doubleValue());
            row.createCell(102).setCellValue(h.getFieldValueByFieldNameBD("cecr_disc").doubleValue());
            row.createCell(103).setCellValue(h.getFieldValueByFieldNameBD("fg_premi").doubleValue());
            row.createCell(104).setCellValue(h.getFieldValueByFieldNameBD("fg_disc").doubleValue());
            row.createCell(105).setCellValue(h.getFieldValueByFieldNameBD("hole_premi").doubleValue());
            row.createCell(106).setCellValue(h.getFieldValueByFieldNameBD("hole_disc").doubleValue());
            row.createCell(107).setCellValue(h.getFieldValueByFieldNameBD("credit_premi").doubleValue());
            row.createCell(108).setCellValue(h.getFieldValueByFieldNameBD("credit_disc").doubleValue());
            row.createCell(109).setCellValue(h.getFieldValueByFieldNameBD("total_premi").doubleValue());
            row.createCell(110).setCellValue(h.getFieldValueByFieldNameBD("total_diskon").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPP_COMPANY() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("rekap 1");
        HSSFSheet sheet2 = wb.createSheet("rekap 2");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("ID");
            row0.createCell(3).setCellValue("bank");
            row0.createCell(4).setCellValue("alamat");
            row0.createCell(5).setCellValue("glcode");
            row0.createCell(6).setCellValue("insured");
            row0.createCell(7).setCellValue("premi");
            row0.createCell(8).setCellValue("biapol");
            row0.createCell(9).setCellValue("biamat");
            row0.createCell(10).setCellValue("ppn");
            row0.createCell(11).setCellValue("diskon");
            row0.createCell(12).setCellValue("hfee");
            row0.createCell(13).setCellValue("taxhfee");
            row0.createCell(14).setCellValue("bfee");
            row0.createCell(15).setCellValue("taxbfee");
            row0.createCell(16).setCellValue("komisi");
            row0.createCell(17).setCellValue("taxcomm");
            row0.createCell(18).setCellValue("feebase");

//            BigDecimal nd_comm = null;
//            BigDecimal nd_taxcomm = null;
//            nd_comm = BDUtil.add(h.getFieldValueByFieldNameBD("komisi"), h.getFieldValueByFieldNameBD("nd_comm3"));
//            nd_taxcomm = BDUtil.add(h.getFieldValueByFieldNameBD("nd_taxcomm1"), h.getFieldValueByFieldNameBD("nd_taxcomm3"));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("koda"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("bank"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("alamat"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("glcode"));
            if (h.getFieldValueByFieldNameBD("insured") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            }
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("ppn").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("hfee").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("taxhfee").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("bfee").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("taxbfee").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("taxcomm").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());

        }

        for (int i = 0; i < list2.size(); i++) {
            HashDTO h = (HashDTO) list2.get(i);

            //bikin header
            HSSFRow row0 = sheet2.createRow(0);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("ID");
            row0.createCell(3).setCellValue("bank");
            row0.createCell(4).setCellValue("alamat");
            row0.createCell(5).setCellValue("glcode");
            row0.createCell(6).setCellValue("insured");
            row0.createCell(7).setCellValue("premi");
            row0.createCell(8).setCellValue("biapol");
            row0.createCell(9).setCellValue("biamat");
            row0.createCell(10).setCellValue("ppn");
            row0.createCell(11).setCellValue("diskon");
            row0.createCell(12).setCellValue("hfee");
            row0.createCell(13).setCellValue("taxhfee");
            row0.createCell(14).setCellValue("bfee");
            row0.createCell(15).setCellValue("taxbfee");
            row0.createCell(16).setCellValue("komisi");
            row0.createCell(17).setCellValue("taxcomm");
            row0.createCell(18).setCellValue("feebase");

//            BigDecimal nd_comm = null;
//            BigDecimal nd_taxcomm = null;
//            nd_comm = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm3"));
//            nd_taxcomm = BDUtil.add(h.getFieldValueByFieldNameBD("nd_taxcomm1"), h.getFieldValueByFieldNameBD("nd_taxcomm3"));

            //bikin isi cell
            HSSFRow row = sheet2.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("koda"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("bank"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("alamat"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("glcode"));
            if (h.getFieldValueByFieldNameBD("insured") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            }
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("ppn").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("hfee").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("taxhfee").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("bfee").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("taxbfee").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("taxcomm").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPP_COMPANY100() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("code");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("ID");
            row0.createCell(3).setCellValue("nama");
            row0.createCell(4).setCellValue("insured");
            row0.createCell(5).setCellValue("premi");
            row0.createCell(6).setCellValue("bpol");
            row0.createCell(7).setCellValue("bmat");
            row0.createCell(8).setCellValue("diskon");
            row0.createCell(9).setCellValue("hfee");
            row0.createCell(10).setCellValue("komisi");
            row0.createCell(11).setCellValue("nd_feebase");
            row0.createCell(12).setCellValue("bfee");
            row0.createCell(13).setCellValue("pajak");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPP_JENIS() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("premi");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("jenis");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("jml_debitur");
            row0.createCell(4).setCellValue("insured");
            row0.createCell(5).setCellValue("premi");
            row0.createCell(6).setCellValue("bpol");
            row0.createCell(7).setCellValue("bmat");
            row0.createCell(8).setCellValue("diskon");
            row0.createCell(9).setCellValue("komisi");
            row0.createCell(10).setCellValue("pajak komisi");
            row0.createCell(11).setCellValue("bfee");
            row0.createCell(12).setCellValue("pajak bfee");
            row0.createCell(13).setCellValue("hfee");
            row0.createCell(14).setCellValue("pajak hfee");
            row0.createCell(15).setCellValue("feebase");
            row0.createCell(16).setCellValue("ppn");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            if (h.getFieldValueByFieldNameBD("jml_debitur") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("jml_debitur").doubleValue());
            }
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("tax_comm").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("bfee").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("tax_bfee").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("hfee").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("tax_hfee").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("ppn").doubleValue());

        }

        if (getStBranch() == null) {
            HSSFSheet sheet2 = wb.createSheet("premi seluruh");
            HSSFSheet sheet3 = wb.createSheet("klaim");

            final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");
            final DTOList list3 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT3");

            for (int i = 0; i < list3.size(); i++) {
                HashDTO h = (HashDTO) list3.get(i);

                //bikin header
                HSSFRow row0 = sheet2.createRow(0);
                row0.createCell(0).setCellValue("cabang");
                row0.createCell(1).setCellValue("cabang non aks");
                row0.createCell(2).setCellValue("jenis");
                row0.createCell(3).setCellValue("polis");
                row0.createCell(4).setCellValue("endorse");
                row0.createCell(5).setCellValue("jml_debitur");
                row0.createCell(6).setCellValue("insured");
                row0.createCell(7).setCellValue("premi");
                row0.createCell(8).setCellValue("bpol");
                row0.createCell(9).setCellValue("bmat");
                row0.createCell(10).setCellValue("diskon");
                row0.createCell(11).setCellValue("komisi");
                row0.createCell(12).setCellValue("pajak komisi");
                row0.createCell(13).setCellValue("bfee");
                row0.createCell(14).setCellValue("pajak bfee");
                row0.createCell(15).setCellValue("hfee");
                row0.createCell(16).setCellValue("pajak hfee");
                row0.createCell(17).setCellValue("feebase");
                row0.createCell(18).setCellValue("ppn");

                //bikin isi cell
                HSSFRow row = sheet2.createRow(i + 1);
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang_source"));
                row.createCell(2).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
                if (h.getFieldValueByFieldNameBD("jml_debitur") != null) {
                    row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("jml_debitur").doubleValue());
                }
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("tax_comm").doubleValue());
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("bfee").doubleValue());
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("tax_bfee").doubleValue());
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("hfee").doubleValue());
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("tax_hfee").doubleValue());
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("ppn").doubleValue());

            }

            for (int i = 0; i < list2.size(); i++) {
                HashDTO h = (HashDTO) list2.get(i);

                HSSFRow row0 = sheet3.createRow(0);
                row0.createCell(0).setCellValue("cabang");
                row0.createCell(1).setCellValue("cabang non aks");
                row0.createCell(2).setCellValue("jenis");
                row0.createCell(3).setCellValue("klaim");

                //bikin isi cell
                HSSFRow row = sheet3.createRow(i + 1);
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang_source"));
                row.createCell(2).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("claim_amount").doubleValue());

            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_RPP_JENIS100() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("jenis");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("premi");
            row0.createCell(4).setCellValue("bpol");
            row0.createCell(5).setCellValue("bmat");
            row0.createCell(6).setCellValue("diskon");
            row0.createCell(7).setCellValue("hfee");
            row0.createCell(8).setCellValue("komisi");
            row0.createCell(9).setCellValue("feebase");
            row0.createCell(10).setCellValue("bfee");
            row0.createCell(11).setCellValue("pajak");


            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());


        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAP7() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("pol_type_id");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("premi (setelah diskon)");



            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("umum").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("pemda").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("perusda").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("bpd").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAP1() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cc_code");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("premi (setelah diskon)");



            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("umum").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("pemda").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("perusda").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("bpd").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public String getStBranchName() {
        return stBranchName;
    }

    public void setStBranchName(String stBranchName) {
        this.stBranchName = stBranchName;
    }

    public DTOList REKAP_RESTITUSI() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.cust_name,b.ref1,getname(a.pol_type_id = 21,b.ref6,b.ref11) as ref6,b.refd1,b.refd2,b.refd3,b.refd5, "
                + " b.insured_amount,getname(a.pol_type_id = 21,b.ref15,b.ref9) as ref2,getpremi(a.pol_type_id = 21,b.refn5,b.refn1) as refn5,"
                + "getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as refn4,"
                + "getpremi(a.pol_type_id = 21,b.refn12,b.refn1) as refn3,a.receipt_no,a.payment_date ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ent_master e on e.ent_id = a.entity_id");

        sqa.addClause("a.status = 'ENDORSE'");
        sqa.addClause("b.refd5 is not null");
        sqa.addClause("a.pol_type_id in ('21','59')");
        sqa.addClause("a.active_flag='Y'");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (restFrom != null) {
            sqa.addClause("date_trunc('day',b.refd5) >= ?");
            sqa.addPar(restFrom);
        }

        if (restTo != null) {
            sqa.addClause("date_trunc('day',b.refd5) <= ?");
            sqa.addPar(restTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

//        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = ?");
//            sqa.addPar(stPolicyTypeID);
//        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList REKAP_REST_BROKER() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.cust_name,b.ref1,b.ref12,getname(a.pol_type_id = 21,b.ref6,b.ref11) as ref6,"
                + "b.refd1,b.refd2,b.refd5,b.insured_amount,getname(a.pol_type_id = 21,b.ref15,b.ref9) as ref2,"
                + "getpremi(a.pol_type_id = 21,b.refn5,0) as refn5,getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as refn4,"
                + "getpremi(a.pol_type_id = 21,b.refn12,0) as refn3, a.pol_id,a.receipt_no,a.payment_date ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ent_master e on e.ent_id = a.entity_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause(" a.status = 'ENDORSE'");
        sqa.addClause(" a.active_flag='Y' ");
        sqa.addClause(" a.pol_type_id in (21,59) ");
        sqa.addClause(" b.refd5 is not null ");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (restFrom != null) {
            sqa.addClause("date_trunc('day',b.refd5) >= ?");
            sqa.addPar(restFrom);
        }

        if (restTo != null) {
            sqa.addClause("date_trunc('day',b.refd5) <= ?");
            sqa.addPar(restTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

//        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = ?");
//            sqa.addPar(stPolicyTypeID);
//        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stNoUrut != null) {
            sqa.addClause("b.ref12 = ?");
            sqa.addPar(stNoUrut);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_REKAP_COINS() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,e.ent_name,g.vs_description,a.cust_name, "
                + " (select count(y.ref1) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " where x.pol_id = a.pol_id) as debitur, "
                + " b.share_pct,(a.premi_total*a.ccy_rate) as premi,(b.premi_amt*a.ccy_rate) as premi_amt, "
                + " getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)) as komisi, "
                + " getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)) as nd_hfee, "
                + " getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)) as brok");

        sqa.addQuery("from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " left join ent_master e on e.ent_id = b.entity_id "
                + " left join s_company_group g on g.vs_code = f.ref2::bigint");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("b.coins_type = 'COINS'");
        sqa.addClause("a.cover_type_code = 'COINSOUTSELF'");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("b.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no,b.entity_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_REKAP_RESTITUSI() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.cust_name,b.ref1,getname(a.pol_type_id = 21,b.ref6,b.ref11) as ref6,b.refd1,b.refd2,b.refd3,b.refd5, "
                + " (b.insured_amount*-1) as insured_amount,getname(a.pol_type_id = 21,b.ref15,b.ref9) as ref15,"
                + " getpremi(a.pol_type_id = 21,b.refn5,0) as refn5,getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as refn6, "
                + " getpremi(a.pol_type_id = 21,b.refn12,b.refn1) as refn12,a.receipt_no,a.payment_date ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ent_master e on e.ent_id = a.entity_id");

        sqa.addClause(" a.status = 'ENDORSE'");
        sqa.addClause(" a.active_flag='Y' ");
        sqa.addClause(" a.pol_type_id in (21,59) ");
        sqa.addClause(" b.refd5 is not null ");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (restFrom != null) {
            sqa.addClause("date_trunc('day',b.refd5) >= ?");
            sqa.addPar(restFrom);
        }

        if (restTo != null) {
            sqa.addClause("date_trunc('day',b.refd5) <= ?");
            sqa.addPar(restTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

//        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = ?");
//            sqa.addPar(stPolicyTypeID);
//        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        final String sql = " select pol_no,cust_name,ref1,ref6,refd1,refd2,refd3,refd5,insured_amount,ref15,"
                + "(round(insured_amount*(refn5/1000),0)*-1) as premi,(refn6*-1) as refn6,refn12 from ( "
                + sqa.getSQL()
                + " ) a order by a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_REKAP_REST_BROKER() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.cust_name,b.ref1,b.ref12,getname(a.pol_type_id = 21,b.ref6,b.ref11) as ref6,"
                + "b.refd1,b.refd2,b.refd5,(b.insured_amount*-1) as insured_amount,getname(a.pol_type_id = 21,b.ref15,b.ref9) as ref2,"
                + "getpremi(a.pol_type_id = 21,b.refn5,0) as refn5,getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as refn4,"
                + "getpremi(a.pol_type_id = 21,b.refn12,0) as refn3, a.pol_id,a.receipt_no,a.payment_date ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ent_master e on e.ent_id = a.entity_id "
                + "left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause(" a.status = 'ENDORSE'");
        sqa.addClause(" a.active_flag='Y' ");
        sqa.addClause(" a.pol_type_id in (21,59) ");
        sqa.addClause(" b.refd5 is not null ");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (EFFECTIVE) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (!EFFECTIVE) {
            sqa.addClause("coalesce(a.effective_flag,'N') <> 'Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (restFrom != null) {
            sqa.addClause("date_trunc('day',b.refd5) >= ?");
            sqa.addPar(restFrom);
        }

        if (restTo != null) {
            sqa.addClause("date_trunc('day',b.refd5) <= ?");
            sqa.addPar(restTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

//        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = ?");
//            sqa.addPar(stPolicyTypeID);
//        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stNoUrut != null) {
            sqa.addClause("b.ref12 = ?");
            sqa.addPar(stNoUrut);
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_REKAP_COINS() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header0
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("REKAP PENERIMAAN PREMI");

            //bikin header1
            XSSFRow row1 = sheet.createRow(1);
            row1.createCell(0).setCellValue("DARI " + h.getFieldValueByFieldNameST("vs_description") + " MELALUI BROKER PT.PAN");

            //bikin header2
            XSSFRow row2 = sheet.createRow(2);
            row2.createCell(0).setCellValue("PERIODE : " + DateUtil.getDateStr(getPolicyDateFrom()) + " s/d " + DateUtil.getDateStr(getPolicyDateTo()));

            //bikin header1
            XSSFRow row3 = sheet.createRow(4);
            row3.createCell(0).setCellValue(h.getFieldValueByFieldNameST("ent_name"));

            //bikin header
            XSSFRow row4 = sheet.createRow(5);
            row4.createCell(0).setCellValue("POLIS");
            row4.createCell(1).setCellValue("NAMA CABANG/KCP BJB");
            row4.createCell(2).setCellValue("JUMLAH");
            row4.createCell(3).setCellValue("PREMI BRUTO");
            row4.createCell(4).setCellValue("SHARE " + String.valueOf(h.getFieldValueByFieldNameBD("share_pct").doubleValue()) + " %");
            row4.createCell(5).setCellValue("KOMISI");
            row4.createCell(6).setCellValue("BFEE");
            row4.createCell(7).setCellValue("HFEE");


            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 6);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("debitur").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAP_RESTITUSI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("No Polis");
            row0.createCell(1).setCellValue("Kantor Cabang");
            row0.createCell(2).setCellValue("Nama Peserta");
            row0.createCell(3).setCellValue("Jangka Waktu");
            row0.createCell(4).setCellValue("Tanggal Lahir");
            row0.createCell(5).setCellValue("Tanggal Awal");
            row0.createCell(6).setCellValue("Tanggal Akhir");
            row0.createCell(7).setCellValue("Tanggal Restitusi");
            row0.createCell(8).setCellValue("Harga Pertanggungan");
            row0.createCell(9).setCellValue("Sisa Kontrak");
            row0.createCell(10).setCellValue("Premi");
            row0.createCell(11).setCellValue("Pengembalian Premi");

            /*
            BigDecimal premi = null;
            premi = h.getFieldValueByFieldNameBD("premi");
            BigDecimal premi2 = null;
            premi2 = h.getFieldValueByFieldNameBD("refn12");
             */

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ref1").replace("/", " "));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("refd5"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("ref15"));
            if (h.getFieldValueByFieldNameBD("refn12") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("refn12").doubleValue());
            } else {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            }
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("refn6").doubleValue());
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAP_REST_BROKER() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Nama Cabang/KCP BJB");
            row0.createCell(1).setCellValue("No Polis");
            row0.createCell(2).setCellValue("Nama Peserta");
            row0.createCell(3).setCellValue("Jangka Waktu");
            row0.createCell(4).setCellValue("Tanggal Lahir");
            row0.createCell(5).setCellValue("Tanggal Realisasi");
            row0.createCell(6).setCellValue("Tanggal Restitusi");
            row0.createCell(7).setCellValue("Harga Pertanggungan");
            row0.createCell(8).setCellValue("Sisa Kontrak");
            row0.createCell(9).setCellValue("Premi");
            row0.createCell(10).setCellValue("Pengembalian Premi");
            row0.createCell(11).setCellValue("ASKRIDA");
            row0.createCell(12).setCellValue("SLU");
            row0.createCell(13).setCellValue("ASKRINDO");
            row0.createCell(14).setCellValue("JRP");
            row0.createCell(15).setCellValue("No. Bukti");
            row0.createCell(16).setCellValue("Tanggal Bayar");

            /*
            BigDecimal premi = null;
            premi = h.getFieldValueByFieldNameBD("premi");
            BigDecimal premi2 = null;
            premi2 = h.getFieldValueByFieldNameBD("refn12");
             */

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ref1").replace("/", " "));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("refd5"));
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            if (h.getFieldValueByFieldNameBD("refn3") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("refn3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("refn4") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("refn4").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("pol_no").startsWith("3421")) {
                row.createCell(11).setCellValue(BDUtil.mul(h.getFieldValueByFieldNameBD("refn4"), new BigDecimal(0.4667), 0).doubleValue());
                row.createCell(12).setCellValue(BDUtil.mul(h.getFieldValueByFieldNameBD("refn4"), new BigDecimal(0.2667), 0).doubleValue());
                row.createCell(13).setCellValue(BDUtil.mul(h.getFieldValueByFieldNameBD("refn4"), new BigDecimal(0.1333), 0).doubleValue());
                row.createCell(14).setCellValue(BDUtil.mul(h.getFieldValueByFieldNameBD("refn4"), new BigDecimal(0.1333), 0).doubleValue());
            }
            if (h.getFieldValueByFieldNameST("receipt_no") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("receipt_no"));
            }
            if (h.getFieldValueByFieldNameDT("payment_date") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameDT("payment_date"));
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=rekaprestitusi_" + getStNoUrut() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public String getStCreateID() {
        return stCreateID;
    }

    public void setStCreateID(String stCreateID) {
        this.stCreateID = stCreateID;
    }

    public String getStCreateName() {
        return stCreateName;
    }

    public void setStCreateName(String stCreateName) {
        this.stCreateName = stCreateName;
    }

    public String getStRekapNo() {
        return stRekapNo;
    }

    public void setStRekapNo(String stRekapNo) {
        this.stRekapNo = stRekapNo;
    }

    public String getStAuthorized() {
        return stAuthorized;
    }

    public void setStAuthorized(String stAuthorized) {
        this.stAuthorized = stAuthorized;
    }

    public DTOList REKAPCABNONKOMISI() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.category1 as bus_source ,"
                + "a.cc_code,b.ins_inward_flag as inward_flag,"
                + "sum(a.claim_amount_approved*a.ccy_rate) as claim_amount_approved_kurs, "
                + "sum(a.claim_amount*a.ccy_rate) as claim_amount_kurs,"
                + "sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi_amt,"
                + "sum(getpremiend(d.entity_id,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon_premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(d.hfee_amount*a.ccy_rate)*-1)) as nd_hfee, "
                + "sum(getpremiend(d.entity_id,(coalesce(a.nd_comm1,0)*a.ccy_rate) + (coalesce(a.nd_comm2,0)*a.ccy_rate) + (coalesce(a.nd_comm3,0)*a.ccy_rate) + (coalesce(a.nd_comm4,0)*a.ccy_rate),((coalesce(d.comm_amount,0))*a.ccy_rate)*-1)) as komisi,"
                + "sum(getpremiend(d.entity_id,((coalesce(a.nd_brok1,0)*a.ccy_rate) + (coalesce(a.nd_brok2,0)*a.ccy_rate)),(d.broker_amount*a.ccy_rate)*-1)) as brok");

        sqa.addQuery("   from "
                + "   ins_policy a"
                + "   inner join ent_master b on b.ent_id = a.entity_id "
                + "	inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        //sqa.addClause("d.entity_id = 1");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = "select bus_source,cc_code,inward_flag,claim_amount_approved_kurs,claim_amount_kurs,(premi_amt-diskon_premi-nd_hfee-komisi-brok) as premi_total_adisc from ("
                + sqa.getSQL() + " group by b.category1,b.ins_inward_flag,a.cc_code ) x"
                + " order by bus_source,cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList REKAPJENISNONKOMISI() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.category1 as bus_source ,"
                + "a.pol_type_id,b.ins_inward_flag as inward_flag,"
                + "sum(a.claim_amount_approved*a.ccy_rate) as claim_amount_approved_kurs, "
                + "sum(a.claim_amount*a.ccy_rate) as claim_amount_kurs,"
                + "sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi_amt,"
                + "sum(getpremiend(d.entity_id,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon_premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(d.hfee_amount*a.ccy_rate)*-1)) as nd_hfee, "
                + "sum(getpremiend(d.entity_id,(coalesce(a.nd_comm1,0)*a.ccy_rate) + (coalesce(a.nd_comm2,0)*a.ccy_rate) + (coalesce(a.nd_comm3,0)*a.ccy_rate) + (coalesce(a.nd_comm4,0)*a.ccy_rate),((coalesce(d.comm_amount,0))*a.ccy_rate)*-1)) as komisi,"
                + "sum(getpremiend(d.entity_id,((coalesce(a.nd_brok1,0)*a.ccy_rate) + (coalesce(a.nd_brok2,0)*a.ccy_rate)),(d.broker_amount*a.ccy_rate)*-1)) as brok");

        sqa.addQuery("   from "
                + "   ins_policy a"
                + "   inner join ent_master b on b.ent_id = a.entity_id "
                + "	inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        //sqa.addClause("d.entity_id = 1");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (status == null) {
            sqa.addClause("a.status in (?,?,?)");
            sqa.addPar(FinCodec.PolicyStatus.ENDORSE);
            sqa.addPar(FinCodec.PolicyStatus.POLICY);
            sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);

        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = "select bus_source,pol_type_id,inward_flag,claim_amount_approved_kurs,claim_amount_kurs,(premi_amt-diskon_premi-nd_hfee-komisi-brok) as premi_total_adisc from ("
                + sqa.getSQL() + " group by b.category1,b.ins_inward_flag,a.pol_type_id ) x "
                + " order by bus_source,pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public String getStPostCodeDesc() {
        return stPostCodeDesc;
    }

    public void setStPostCodeDesc(String stPostCodeDesc) {
        this.stPostCodeDesc = stPostCodeDesc;
    }
    private String stPostCode2;
    private String stPostCodeDesc2;

    public String getStPostCode2() {
        return stPostCode2;
    }

    public void setStPostCode2(String stPostCode2) {
        this.stPostCode2 = stPostCode2;
    }

    public String getStPostCodeDesc2() {
        return stPostCodeDesc2;
    }

    public void setStPostCodeDesc2(String stPostCodeDesc2) {
        this.stPostCodeDesc2 = stPostCodeDesc2;
    }

    public PostalCodeView getPostCode(String stPostCode) {
        final PostalCodeView postcode = (PostalCodeView) DTOPool.getInstance().getDTO(PostalCodeView.class, stPostCode);

        return postcode;
    }

    public String getStStatus() {
        return stStatus;
    }

    public void setStStatus(String stStatus) {
        this.stStatus = stStatus;
    }

    public String getStYearTreaty() {
        return stYearTreaty;
    }

    public void setStYearTreaty(String stYearTreaty) {
        this.stYearTreaty = stYearTreaty;
    }

    public DTOList LAPDAN() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.pol_no,a.cc_code,a.ccy,a.ccy_rate,coalesce(a.premi_total,0) as premi_base,"
                + "sum(coalesce(i.premi_amount,0)) as premi_total,sum(coalesce(i.ricomm_amt,0)) as nd_comm1");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj c on c.pol_id = a.pol_id "
                + "inner join ins_policy_types f on a.pol_type_id = f.pol_type_id "
                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = c.ins_pol_obj_id "
                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id "
                + "left join ent_master k on k.ent_id = a.entity_id ");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");

        sqa.addClause("	j.treaty_type not in ('OR','XOL1','XOL2','XOL3','XOL4','XOL5')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("f.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stFltTreatyType != null) {
            sqa.addClause("j.treaty_type = ?");
            sqa.addPar(stFltTreatyType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("k.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        }

        if (stYearTreaty != null) {
            sqa.addClause("substr(i.valid_ri_date::text,1,4) = ?");
            sqa.addPar(stYearTreaty);
        }

        final String sql = " select cc_code,ccy,sum(premi_base) as premi_base,sum(premi_total) as premi_total,sum(nd_comm1) as nd_comm1,sum(premi_total-nd_comm1) as premi_total_adisc "
                + " from ( " + sqa.getSQL() + " group by a.cc_code,a.ccy,a.ccy_rate,a.premi_total,a.pol_no ) x group by cc_code,ccy "
                + " order by cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList LAPDANPERBULAN() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.pol_no,a.cc_code,a.ccy,a.ccy_rate,coalesce(a.premi_total*a.ccy_rate,0) as premi_base,"
                + "sum(coalesce(i.premi_amount*a.ccy_rate,0)) as premi_total,sum(coalesce(i.ricomm_amt*a.ccy_rate,0)) as nd_comm1");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj c on c.pol_id = a.pol_id "
                + "inner join ins_policy_types f on a.pol_type_id = f.pol_type_id "
                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = c.ins_pol_obj_id "
                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id "
                + "left join ent_master k on k.ent_id = a.entity_id ");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");

        sqa.addClause("	j.treaty_type not in ('OR','XOL1','XOL2','XOL3','XOL4','XOL5')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("f.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stFltTreatyType != null) {
            sqa.addClause("j.treaty_type = ?");
            sqa.addPar(stFltTreatyType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("k.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        }

        if (stYearTreaty != null) {
            sqa.addClause("substr(i.valid_ri_date::text,1,4) = ?");
            sqa.addPar(stYearTreaty);
        }

        final String sql = " select sum(premi_base) as premi_base,sum(premi_total) as premi_total,sum(nd_comm1) as nd_comm1,sum(premi_total-nd_comm1) as premi_total_adisc "
                + " from ( " + sqa.getSQL() + " group by a.cc_code,a.ccy,a.ccy_rate,a.premi_total,a.pol_no ) x ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_RISK_CONTROL1() throws Exception {
        final boolean NON_EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("NON_EFFECTIVE"));
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " coalesce(b.refd1,a.period_start) period_start,coalesce(b.refd2,a.period_end) as period_end, "
                + " a.policy_date,(substr(a.period_end::text,1,4)::numeric-substr(a.period_start::text,1,4)::numeric)::text as years, "
                + " a.status,a.pol_no,a.ref1 as nomor_pp,b.order_no,a.cust_name,a.ccy_rate,b.ins_pol_obj_id,b.ref1,b.ref2,b.ref3,b.ref4,"
                + " b.ref5,b.ref6,b.ref7,b.ref8,b.ref10,b.ref11,  b.ref1d,b.ref2d,b.ref3d,b.ref4d,b.ref5d,b.ref6d,b.ref7d,b.ref8d,"
                + " b.risk_class,b.refd1,b.refd2,b.refd3,b.refd5,b.ref9d as kode_pos,getpostcode(a.pol_type_id,b.ref7,coalesce(null,'')) as kode_acc,"
                + " e.ins_risk_cat_code, a.ccy,getpremi(a.status='ENDORSE',a.insured_amount_e,a.insured_amount) as insured_amount,a.premi_total,"
                + " b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,b.void_flag ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id= a.pol_id "
                + "left join ins_zone_limit d on d.zone_id = getzone3(a.pol_type_id in (1,81), b.ref7)::bigint "
                + "left join ins_risk_cat e on e.ins_risk_cat_id = b.ins_risk_cat_id "
                + "left join ent_master c on c.ent_id = a.entity_id "
                + "left join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause(" b.insured_amount <> 0 ");
        sqa.addClause(" a.active_flag = 'Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(periodEndTo);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = ?");
//            sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = ?");
//            sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stPostCode != null) {
            sqa.addClause("b.ref9 = ?");
            sqa.addPar(stPostCode);
        }

        if (stPostCodeDesc2 != null) {
            sqa.addClause("b.ref9d = ?");
            sqa.addPar(stPostCodeDesc2);
        }

        if (stZoneCode != null) {
            sqa.addClause("b.ref7 = ?");
            sqa.addPar(stZoneCode);
        }

        if (stZoneEquakeName != null) {
            sqa.addClause("b.ref2d = ?");
            sqa.addPar(stZoneEquakeName);
        }

        if (stRiskCode != null) {
            sqa.addClause("f.ins_risk_cat_code = ?");
            sqa.addPar(stRiskCode);
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.effective_flag = 'Y'");
        }

        if (Tools.isNo(stIndex)) {
            sqa.addClause("a.effective_flag = 'N'");
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("c.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        String sql = sqa.getSQL() + " order by a.pol_no,b.ins_pol_obj_id ";


        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;


//        SQLUtil S = new SQLUtil();
//
//        String nama_file = getStFileName() + "_" + System.currentTimeMillis() + ".csv";
//
//        sql = "Copy ("
//                + sql
//                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";
//
//        final PreparedStatement ps = S.setQuery(sql);
//
//        boolean tes = ps.execute();
//
//        S.release();
//
//        File file = new File("//localhost//exportdb/csv/" + nama_file);
//        int length = 0;
//        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();
//
//        SessionManager.getInstance().getResponse().setContentType("text/csv");
//        SessionManager.getInstance().getResponse().setContentLength((int) file.length());
//
//        // sets HTTP header
//        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");
//
//        int BUFSIZE = 4096;
//        byte[] byteBuffer = new byte[BUFSIZE];
//        DataInputStream in = new DataInputStream(new FileInputStream(file));
//
//        // reads the file's bytes and writes them to the response stream
//        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
//            outStream.write(byteBuffer, 0, length);
//        }
//
//        in.close();
//        outStream.close();
//
//        file.delete();

    }

    public void EXCEL_RISK_CONTROL() throws Exception {
        final boolean NON_EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("NON_EFFECTIVE"));
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " ';'||a.create_who as create_who,a.endorse_notes,d.vs_description as jenis_kredit,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end, "
                + " a.policy_date,a.status,a.pol_id,quote_ident(pol_no) as pol_no,a.ref1 as nomor_pp,a.entity_id::text,k.ent_name,a.cust_name,a.ccy_rate,b.ins_pol_obj_id,"
                + " b.ref1,b.ref2,quote_ident(b.ref3) as ref3,b.ref4,b.ref5,b.ref6,b.ref7d,b.ref8d,b.ref9d as kode_pos,b.ref10,"
                + " b.ref11,b.ref12,b.ref13,b.ref14,b.ref15,b.ref16,b.ref17,b.ref18,b.ref19,b.ref20, "
                + " b.ref21,b.ref22,b.ref23,b.ref24,b.ref25,b.ref26,b.ref27,b.ref28,b.ref29,b.ref30,"
                + " b.ref31,b.ref32,b.ref33,b.ref34,b.ref35,b.ref36,b.ref37,b.ref38,b.ref39,b.ref40,c.vs_description as coverage,"
                + " b.ref1d,b.ref2d,b.ref3d,b.ref4d,b.ref5d,b.ref6d,b.ref7d,b.ref8d,b.risk_class,b.refd1,b.refd2,b.refd3,b.refd5, "
                + " f.ins_risk_cat_code, a.ccy,getpremi(a.status = 'ENDORSE',a.insured_amount_e*a.ccy_rate,a.insured_amount*a.ccy_rate) as insured_amount,"
                + "a.premi_total,NULLIF(a.premi_total_adisc*ccy_rate,0) as premi_total2,"
                + "b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,b.premi_total_bcoins as premi_total_e, "
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0) as nd_disc1,"
                + "( select coalesce(sum(premi_amt),0) from ins_pol_coins z  "
                + "where z.policy_id=a.pol_id and a.cover_type_code in ('COINSOUTSELF','COINSOUT') and z.entity_id <> 1 ) as premiko, "
                + " round(((sum(i.premi_amount)/(case sum(i.tsi_amount) when 0 then 1 else sum(i.tsi_amount) end))*100),4) as rate_method_desc, " + //i.valid_ri_date,
                " round(sum(i.premi_rate),5) as premi_rate,b.order_no, "
                + " round(a.share_pct,2) as rate_method, "
                + " (	select round(sum(z.rate),5) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " inner join ins_pol_cover z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + " where y.ins_pol_obj_id=b.ins_pol_obj_id) as rate_cover, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (6,105),z.insured_amount)) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + " where y.ins_pol_obj_id=b.ins_pol_obj_id) as building, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (39,40,106),z.insured_amount)) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + " where y.ins_pol_obj_id=b.ins_pol_obj_id) as machine, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (56,57,58,90,91,92,107),z.insured_amount)) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + " where y.ins_pol_obj_id=b.ins_pol_obj_id) as stock, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (2,12,21,23,25,27,29,30,33,34,35,44,79,95,97,98,103,108,109),z.insured_amount)) "
                + " from ins_policy x "
                + " inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + " inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + " where y.ins_pol_obj_id=b.ins_pol_obj_id) as other, "
                + " round(sum(checkreas(j.treaty_type='OR',i.tsi_amount)),2) as tsi_or, "
                + " round(sum(checkreas(j.treaty_type='OR',i.premi_amount)),2) as premi_or, "
                + " round(sum(checkreas(j.treaty_type='OR',i.ricomm_amt)),2) as komisi_or, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.tsi_amount)),2) as tsi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.premi_amount)),2) as premi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.ricomm_amt)),2) as komisi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.tsi_amount)),2) as tsi_spl, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.premi_amount)),2) as premi_spl, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.ricomm_amt)),2) as komisi_spl, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.tsi_amount)),2) as tsi_fac, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.premi_amount)),2) as premi_fac, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.ricomm_amt)),2) as komisi_fac, "
                + " round(sum(checkreas(j.treaty_type='QS',i.tsi_amount)),2) as tsi_qs, "
                + " round(sum(checkreas(j.treaty_type='QS',i.premi_amount)),2) as premi_qs, "
                + " round(sum(checkreas(j.treaty_type='QS',i.ricomm_amt)),2) as komisi_qs, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.tsi_amount)),2) as tsi_park, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.premi_amount)),2) as premi_park, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.ricomm_amt)),2) as komisi_park, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.tsi_amount)),2) as tsi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.premi_amount)),2) as premi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.ricomm_amt)),2) as komisi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.tsi_amount)),2) as tsi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.premi_amount)),2) as premi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.ricomm_amt)),2) as komisi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.tsi_amount)),2) as tsi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.premi_amount)),2) as premi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.ricomm_amt)),2) as komisi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.tsi_amount)),2) as tsi_faco3, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.premi_amount)),2) as premi_faco3, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.ricomm_amt)),2) as komisi_faco3, "
                + " round(sum(checkreas(j.treaty_type='JP',i.tsi_amount)),2) as tsi_jp, "
                + " round(sum(checkreas(j.treaty_type='JP',i.premi_amount)),2) as premi_jp, "
                + " round(sum(checkreas(j.treaty_type='JP',i.ricomm_amt)),2) as komisi_jp, "
                + " a.cover_type_code, "
                + " checkpremi(a.cover_type_code = 'COINSIN',(select y.share_pct "
                + " from ins_policy x "
                + " inner join ins_pol_coins y on y.policy_id = x.pol_id and y.entity_id = 1 and x.pol_type_id not in (21,59) "
                + " where x.pol_id = a.pol_id),coalesce(a.share_pct,100)) as member, "
                + " coalesce((SELECT SUM(rate) "
                + " FROM INS_POL_ITEMS y "
                + " WHERE y.pol_id = a.pol_id and y.ins_item_id in(select ins_item_id from ins_items where (item_type = 'COMIS' or ins_item_cat = 'PPN'))),0) as total_komisi_pct, "
                + " coalesce((SELECT SUM(amount) "
                + " FROM INS_POL_ITEMS y "
                + " WHERE y.pol_id = a.pol_id and y.ins_item_id in(select ins_item_id from ins_items where (item_type = 'COMIS' or ins_item_cat = 'PPN'))),0) as total_komisi,l.user_name, "
                + "(select string_agg(l.description,'|') "
                + "from ins_cover l "
                + "inner join ins_pol_cover z on z.ins_cover_id = l.ins_cover_id "
                + "where z.ins_pol_obj_id = b.ins_pol_obj_id) as desc1,b.void_flag,b.refn11 as premi100,b.refn24 as rate,b.refd7 as awal_pk,b.refd8 as akhir_pk ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ins_risk_cat f on f.ins_risk_cat_id = b.ins_risk_cat_id "
                + "left join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
                + "left join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "left join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "left join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id "
                + "inner join ent_master k on k.ent_id = a.entity_id "
                + "left join s_users l on l.user_id = a.ri_approved_who "
                + "left join ent_master e on e.ent_id = a.prod_id "
                + "left join s_valueset c on c.vs_code = b.ref13 and c.vs_group = 'INSOBJ_CREDIT_COVER_PACKAGE' "
                + "left join s_valueset d on d.vs_code = a.kreasi_type_id and d.vs_group = 'INSOBJ_KREASI_KREDIT' ");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause(" a.active_flag = 'Y'");
        sqa.addClause(" b.premi_total <> 0");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + periodEndFrom + "'");
            //sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + periodEndTo + "'");
            //sqa.addPar(periodEndTo);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = '" + stBranch + "'");
//            //sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = '" + stRegion + "'");
//            //sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

//        if (stPolicyNo != null) {
//            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
//            //sqa.addPar('%'+stPolicyNo+'%');
//        }

        if (stPolicyNo != null) {
            String morePolis[] = stPolicyNo.split("[\\,]");
            if (morePolis.length == 1) {
                sqa.addClause("a.pol_no = '" + stPolicyNo + "'");
//                sqa.addClause("a.pol_no = ?");
//                sqa.addPar(stPolicyNo);
            } else if (morePolis.length > 1) {
                String polno = "a.pol_no in ('" + morePolis[0] + "'";
                for (int k = 1; k < morePolis.length; k++) {
                    polno = polno + ",'" + morePolis[k] + "'";
                }
                polno = polno + ")";
                sqa.addClause(polno);
            }
        }

        if (stPostCode != null) {
            sqa.addClause("b.ref9 = '" + stPostCode + "'");
            //sqa.addPar(stPostCode);
        }

        if (stPostCodeDesc2 != null) {
            sqa.addClause("b.ref9d = '" + stPostCodeDesc2 + "'");
            //sqa.addPar(stPostCodeDesc2);
        }

        if (stZoneCode != null) {
            sqa.addClause("d.zone_id = '" + stZoneCode + "'");
            //sqa.addPar(stZoneCode);
        }

        if (stZoneEquakeName != null) {
            sqa.addClause("b.ref2d = '" + stZoneEquakeName + "'");
            //sqa.addPar(stZoneEquakeName);
        }

        if (stFltTreatyType != null) {
            sqa.addClause("j.treaty_type = '" + stFltTreatyType + "'");
            //sqa.addPar(stFltTreatyType);
        }

        if (stYearTreaty != null) {
            sqa.addClause("substr(i.valid_ri_date::text,1,4) = '" + stYearTreaty + "'");
            //sqa.addPar(stYearTreaty);
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.effective_flag = 'Y'");
        }

        if (Tools.isNo(stIndex)) {
            sqa.addClause("coalesce(a.effective_flag,'') <> 'Y'");
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("k.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        String sql = "select date_part('year', age(period_end, period_start)) AS years,"
                + "a.*,round((premi_total_obj/premi_total2)*nd_disc1,2) as diskon_obj,"
                + "round((premi_total_obj/premi_total2)*premiko,2) as koas_obj "
                + "from ( " + sqa.getSQL() + " group by a.endorse_notes,a.ref1,a.pol_id,a.status,a.pol_no,a.entity_id,k.ent_name,l.user_name,a.cust_name,a.period_start,a.period_end,a.policy_date,b.ref1,b.ref2,d.vs_description,"
                + " b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9d,b.ref10,b.ref11,f.ins_risk_cat_code,b.refd1,b.refd2,b.refd3,b.refd5,c.vs_description, a.create_who,a.ccy,a.ccy_rate,a.insured_amount,a.premi_total,b.refn11,b.refn24,b.refd7,b.refd8,"
                + " a.premi_total_adisc,b.insured_amount,b.premi_total_bcoins,b.premi_total,a.cover_type_code,a.share_pct,b.ins_pol_obj_id,b.ref1d,b.ref2d,b.ref3d,b.ref4d,b.ref5d,b.ref6d,b.ref7d,b.ref8d,b.risk_class,b.order_no,b.void_flag "
                + //" ,i.valid_ri_date having count(a.pol_no)>1 " +
                " ) a ";

        if (getStTime() != null) {
            sql = sql + " where years > '1' ";
        }

        sql = sql + "order by a.pol_no,a.ins_pol_obj_id";


        SQLUtil S = new SQLUtil();

        String nama_file = "risk_acc_control_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

    }

    public void EXPORT_RISK_CONTROL() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        int norut = 0;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("period_start");
            row0.createCell(1).setCellValue("period_end");
            row0.createCell(2).setCellValue("policy_date");
            row0.createCell(3).setCellValue("years");
            row0.createCell(4).setCellValue("status");
            row0.createCell(5).setCellValue("pol_no");
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
                    row0.createCell(6).setCellValue("pol_no");
                }
            }
            row0.createCell(7).setCellValue("order_no");
            row0.createCell(8).setCellValue("cust_name");
            row0.createCell(9).setCellValue("No.Urut Polis");
            row0.createCell(10).setCellValue("ref1");
            row0.createCell(11).setCellValue("ref2");
            row0.createCell(12).setCellValue("ref3");
            row0.createCell(13).setCellValue("ref4");
            row0.createCell(14).setCellValue("ref5");
            row0.createCell(15).setCellValue("ref6");
            row0.createCell(16).setCellValue("ref7");
            row0.createCell(17).setCellValue("ref8");
            row0.createCell(18).setCellValue("ref10");
            row0.createCell(19).setCellValue("ref11");
            row0.createCell(20).setCellValue("ref1d");
            row0.createCell(21).setCellValue("ref2d");
            row0.createCell(22).setCellValue("ref3d");
            row0.createCell(23).setCellValue("ref4d");
            row0.createCell(24).setCellValue("ref5d");
            row0.createCell(25).setCellValue("ref6d");
            row0.createCell(26).setCellValue("ref7d");
            row0.createCell(27).setCellValue("ref8d");
            row0.createCell(28).setCellValue("risk_class");
            row0.createCell(29).setCellValue("refd1");
            row0.createCell(30).setCellValue("refd2");
            row0.createCell(31).setCellValue("refd3");
            row0.createCell(32).setCellValue("kode_pos");
            row0.createCell(33).setCellValue("kode_acc");
            row0.createCell(34).setCellValue("ins_risk_cat_code");
            row0.createCell(35).setCellValue("ccy");
            row0.createCell(36).setCellValue("ccy_rate");
            row0.createCell(37).setCellValue("insured_amount");
            row0.createCell(38).setCellValue("premi_total");
            row0.createCell(39).setCellValue("insured_amount_e");
            row0.createCell(40).setCellValue("premi_total_e");
            row0.createCell(41).setCellValue("premi_total_d");
            row0.createCell(42).setCellValue("total_due");
            row0.createCell(43).setCellValue("total_fee");
            row0.createCell(44).setCellValue("premi_rate");
            row0.createCell(45).setCellValue("premi_netto");
            row0.createCell(46).setCellValue("rate_cover");
            row0.createCell(47).setCellValue("building");
            row0.createCell(48).setCellValue("machine");
            row0.createCell(49).setCellValue("stock");
            row0.createCell(50).setCellValue("other");
            row0.createCell(51).setCellValue("tsi_or");
            row0.createCell(52).setCellValue("premi_or");
            row0.createCell(53).setCellValue("komisi_or");
            row0.createCell(54).setCellValue("tsi_bppdan");
            row0.createCell(55).setCellValue("premi_bppdan");
            row0.createCell(56).setCellValue("komisi_bppdan");
            row0.createCell(57).setCellValue("tsi_spl");
            row0.createCell(58).setCellValue("premi_spl");
            row0.createCell(59).setCellValue("komisi_spl");
            row0.createCell(60).setCellValue("tsi_fac");
            row0.createCell(61).setCellValue("premi_fac");
            row0.createCell(62).setCellValue("komisi_fac");
            row0.createCell(63).setCellValue("tsi_qs");
            row0.createCell(64).setCellValue("premi_qs");
            row0.createCell(65).setCellValue("komisi_qs");
            row0.createCell(66).setCellValue("tsi_park");
            row0.createCell(67).setCellValue("premi_park");
            row0.createCell(68).setCellValue("komisi_park");
            row0.createCell(69).setCellValue("tsi_faco");
            row0.createCell(70).setCellValue("premi_faco");
            row0.createCell(71).setCellValue("komisi_faco");
            row0.createCell(72).setCellValue("tsi_faco1");
            row0.createCell(73).setCellValue("premi_faco1");
            row0.createCell(74).setCellValue("komisi_faco1");
            row0.createCell(75).setCellValue("tsi_faco2");
            row0.createCell(76).setCellValue("premi_faco2");
            row0.createCell(77).setCellValue("komisi_faco2");
            row0.createCell(78).setCellValue("tsi_faco3");
            row0.createCell(79).setCellValue("premi_faco3");
            row0.createCell(80).setCellValue("komisi_faco3");
            row0.createCell(81).setCellValue("refd5");

            norut++;

            if (i > 0) {
                HashDTO s = (HashDTO) list.get(i - 1);
                String nopol = s.getFieldValueByFieldNameST("pol_no");
                String nopol2 = h.getFieldValueByFieldNameST("pol_no");
                if (!nopol.equalsIgnoreCase(nopol2)) {

                    norut = 1;
                }
            }

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            if (h.getFieldValueByFieldNameST("years") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("years"));
            }
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
                    row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("nomor_pp"));
                }
            }
            if (h.getFieldValueByFieldNameBD("order_no") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("order_no").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("cust_name") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            }
            row.createCell(9).setCellValue(norut);
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(10).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1")));
            }
            if (h.getFieldValueByFieldNameST("ref2") != null) {
                row.createCell(11).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2")));
            }
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(12).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3")));
            }
            if (h.getFieldValueByFieldNameST("ref4") != null) {
                row.createCell(13).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4")));
            }
            if (h.getFieldValueByFieldNameST("ref5") != null) {
                row.createCell(14).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5")));
            }
            if (h.getFieldValueByFieldNameST("ref6") != null) {
                row.createCell(15).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6")));
            }
            if (h.getFieldValueByFieldNameST("ref7") != null) {
                row.createCell(16).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7")));
            }
            if (h.getFieldValueByFieldNameST("ref8") != null) {
                row.createCell(17).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8")));
            }
            if (h.getFieldValueByFieldNameST("ref10") != null) {
                row.createCell(18).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref10")));
            }
            if (h.getFieldValueByFieldNameST("ref11") != null) {
                row.createCell(19).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref11")));
            }
            if (h.getFieldValueByFieldNameST("ref1d") != null) {
                row.createCell(20).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1d")));
            }
            if (h.getFieldValueByFieldNameST("ref2d") != null) {
                row.createCell(21).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
            }
            if (h.getFieldValueByFieldNameST("ref3d") != null) {
                row.createCell(22).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3d")));
            }
            if (h.getFieldValueByFieldNameST("ref4d") != null) {
                row.createCell(23).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4d")));
            }
            if (h.getFieldValueByFieldNameST("ref5d") != null) {
                row.createCell(24).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5d")));
            }
            if (h.getFieldValueByFieldNameST("ref6d") != null) {
                row.createCell(25).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6d")));
            }
            if (h.getFieldValueByFieldNameST("ref7d") != null) {
                row.createCell(26).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
            }
            if (h.getFieldValueByFieldNameST("ref8d") != null) {
                row.createCell(27).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8d")));
            }
            if (h.getFieldValueByFieldNameST("risk_class") != null) {
                row.createCell(28).setCellValue(h.getFieldValueByFieldNameST("risk_class"));
            }
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            if (h.getFieldValueByFieldNameDT("refd2") != null) {
                row.createCell(30).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            }
            if (h.getFieldValueByFieldNameDT("refd3") != null) {
                row.createCell(31).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            }
            if (h.getFieldValueByFieldNameST("kode_pos") != null) {
                row.createCell(32).setCellValue(h.getFieldValueByFieldNameST("kode_pos"));
            }
            if (h.getFieldValueByFieldNameST("kode_acc") != null) {
                row.createCell(33).setCellValue(h.getFieldValueByFieldNameST("kode_acc"));
            }
            if (h.getFieldValueByFieldNameST("ins_risk_cat_code") != null) {
                row.createCell(34).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            }
            row.createCell(35).setCellValue(h.getFieldValueByFieldNameST("ccy"));
            row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("ccy_rate").doubleValue());
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(38).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount_e") != null) {
                row.createCell(39).setCellValue(h.getFieldValueByFieldNameBD("insured_amount_e").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_e") != null) {
                row.createCell(40).setCellValue(h.getFieldValueByFieldNameBD("premi_total_e").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_d") != null) {
                row.createCell(41).setCellValue(h.getFieldValueByFieldNameBD("premi_total_d").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("total_due") != null) {
                row.createCell(42).setCellValue(h.getFieldValueByFieldNameBD("total_due").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("total_fee") != null) {
                row.createCell(43).setCellValue(h.getFieldValueByFieldNameBD("total_fee").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_rate") != null) {
                row.createCell(44).setCellValue(h.getFieldValueByFieldNameBD("premi_rate").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_netto") != null) {
                row.createCell(45).setCellValue(h.getFieldValueByFieldNameBD("premi_netto").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("rate_cover") != null) {
                row.createCell(46).setCellValue(h.getFieldValueByFieldNameBD("rate_cover").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("building") != null) {
                row.createCell(47).setCellValue(h.getFieldValueByFieldNameBD("building").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("machine") != null) {
                row.createCell(48).setCellValue(h.getFieldValueByFieldNameBD("machine").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("stock") != null) {
                row.createCell(49).setCellValue(h.getFieldValueByFieldNameBD("stock").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("other") != null) {
                row.createCell(50).setCellValue(h.getFieldValueByFieldNameBD("other").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_or") != null) {
                row.createCell(51).setCellValue(h.getFieldValueByFieldNameBD("tsi_or").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_or") != null) {
                row.createCell(52).setCellValue(h.getFieldValueByFieldNameBD("premi_or").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_or") != null) {
                row.createCell(53).setCellValue(h.getFieldValueByFieldNameBD("komisi_or").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_bppdan") != null) {
                row.createCell(54).setCellValue(h.getFieldValueByFieldNameBD("tsi_bppdan").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_bppdan") != null) {
                row.createCell(55).setCellValue(h.getFieldValueByFieldNameBD("premi_bppdan").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_bppdan") != null) {
                row.createCell(56).setCellValue(h.getFieldValueByFieldNameBD("komisi_bppdan").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_spl") != null) {
                row.createCell(57).setCellValue(h.getFieldValueByFieldNameBD("tsi_spl").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_spl") != null) {
                row.createCell(58).setCellValue(h.getFieldValueByFieldNameBD("premi_spl").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_spl") != null) {
                row.createCell(59).setCellValue(h.getFieldValueByFieldNameBD("komisi_spl").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_fac") != null) {
                row.createCell(60).setCellValue(h.getFieldValueByFieldNameBD("tsi_fac").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_fac") != null) {
                row.createCell(61).setCellValue(h.getFieldValueByFieldNameBD("premi_fac").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_fac") != null) {
                row.createCell(62).setCellValue(h.getFieldValueByFieldNameBD("komisi_fac").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_qs") != null) {
                row.createCell(63).setCellValue(h.getFieldValueByFieldNameBD("tsi_qs").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_qs") != null) {
                row.createCell(64).setCellValue(h.getFieldValueByFieldNameBD("premi_qs").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_qs") != null) {
                row.createCell(65).setCellValue(h.getFieldValueByFieldNameBD("komisi_qs").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_park") != null) {
                row.createCell(66).setCellValue(h.getFieldValueByFieldNameBD("tsi_park").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_park") != null) {
                row.createCell(67).setCellValue(h.getFieldValueByFieldNameBD("premi_park").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_park") != null) {
                row.createCell(68).setCellValue(h.getFieldValueByFieldNameBD("komisi_park").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_faco") != null) {
                row.createCell(69).setCellValue(h.getFieldValueByFieldNameBD("tsi_faco").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_faco") != null) {
                row.createCell(70).setCellValue(h.getFieldValueByFieldNameBD("premi_faco").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_faco") != null) {
                row.createCell(71).setCellValue(h.getFieldValueByFieldNameBD("komisi_faco").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_faco1") != null) {
                row.createCell(72).setCellValue(h.getFieldValueByFieldNameBD("tsi_faco1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_faco1") != null) {
                row.createCell(73).setCellValue(h.getFieldValueByFieldNameBD("premi_faco1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_faco1") != null) {
                row.createCell(74).setCellValue(h.getFieldValueByFieldNameBD("komisi_faco1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_faco2") != null) {
                row.createCell(75).setCellValue(h.getFieldValueByFieldNameBD("tsi_faco2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_faco2") != null) {
                row.createCell(76).setCellValue(h.getFieldValueByFieldNameBD("premi_faco2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_faco2") != null) {
                row.createCell(77).setCellValue(h.getFieldValueByFieldNameBD("komisi_faco2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("tsi_faco3") != null) {
                row.createCell(78).setCellValue(h.getFieldValueByFieldNameBD("tsi_faco3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_faco3") != null) {
                row.createCell(79).setCellValue(h.getFieldValueByFieldNameBD("premi_faco3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_faco3") != null) {
                row.createCell(80).setCellValue(h.getFieldValueByFieldNameBD("komisi_faco3").doubleValue());
            }
            if (h.getFieldValueByFieldNameDT("refd5") != null) {
                row.createCell(81).setCellValue(h.getFieldValueByFieldNameDT("refd5"));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXCEL_RPP_JENIS100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("d.short_desc as jenis,a.pol_type_id, "
                + " count(a.pol_no) as pol_no,a.status, "
                + " coalesce(a.insured_amount*a.ccy_rate,0) as insured_amount, "
                + " coalesce(a.premi_total*a.ccy_rate,0) as premi_amt, "
                + " coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost, "
                + " coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee, "
                + " coalesce(a.nd_disc1*a.ccy_rate,0) as diskon_premi, "
                + " coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee, "
                + " coalesce(a.nd_comm1*a.ccy_rate,0) as nd_comm1, "
                + " coalesce(a.nd_brok1*a.ccy_rate,0) as brok, "
                + " coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase, "
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1,"
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3 ");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + "	inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        String sql = "select jenis, "
                + " sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                + " sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
                + " sum(insured_amount) as insured_amount, "
                + " sum(premi_amt) as premi, "
                + " sum(nd_pcost) as biapol, "
                + " sum(nd_sfee) as biamat, "
                + " sum(diskon_premi) as diskon, "
                + " sum(brok) as bfee,sum(nd_hfee) as hfee, "
                + " sum(nd_comm1) as komisi,sum(nd_taxcomm1+nd_taxcomm3) as tax,sum(feebase) as feebase "
                + " from ( " + sqa.getSQL()
                + " group by a.pol_type_id,d.short_desc,a.pol_no,a.status,a.ccy_rate,a.pol_id,a.insured_amount,"
                + " a.premi_total,a.nd_pcost,a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,a.nd_feebase1,a.nd_brok1 "
                + " order by a.pol_type_id,a.pol_no "
                + " ) x group by jenis,pol_type_id "
                + " order by pol_type_id";

        /*
        final String sql = "select jenis, "
        + " sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
        + " sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
        + " sum(premi_amt) as premi_amt, "
        + " sum(nd_pcost) as nd_pcost, "
        + " sum(nd_sfee) as nd_sfee, "
        + " sum(diskon_premi) as diskon_premi, "
        + " sum(nd_hfee) as nd_hfee, "
        + " sum(nd_comm1) as komisi,sum(feebase) as feebase, "
        + " sum(brok) as brok,sum(nd_taxcomm1) as tax "
        + " from (" + sqa.getSQL()
        + " group by a.pol_type_id,d.short_desc,a.pol_no,a.status,a.ccy_rate,a.premi_total,a.nd_pcost,"
        + " a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,a.nd_feebase1,a.nd_brok1,a.nd_taxcomm1,a.pol_id "
        + " order by a.pol_type_id,a.pol_no "
        + " ) x group by jenis,pol_type_id "
        + " order by pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rekap_jenis100_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList RPP_JENIS100() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" pol_type_id, "
                + "	sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                + "	sum(checkreas(status='ENDORSE',pol_no)) as jumlah, "
                + "	sum(insured_amount) as insured_amount, "
                + "	sum(premi_amt) as premi_amt, "
                + "	sum(nd_pcost) as nd_pcost, "
                + "	sum(nd_sfee) as nd_sfee, "
                + "	sum(diskon_premi) as diskon_premi, "
                + "	sum(nd_hfee) as nd_hfee, "
                + "	sum(nd_feebase1) as nd_feebase1, "
                + "	sum(komisi) as komisi, "
                + "	sum(brok) as brok,sum(nd_taxcomm1) as tax "
                + "	from (  "
                + "	select a.pol_type_id,count(a.pol_no) as pol_no,a.status, "
                + "	sum(coalesce(a.insured_amount*a.ccy_rate,0)) as insured_amount, "
                + "	sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi_amt, "
                + "	sum(coalesce(a.nd_pcost*a.ccy_rate,0)) as nd_pcost,  "
                + "	sum(coalesce(a.nd_sfee*a.ccy_rate,0)) as nd_sfee,  "
                + "	sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon_premi, "
                + "	sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as nd_feebase1, "
                + "	sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee, "
                + "	sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as komisi, "
                + "	sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as brok, "
                + " (select sum(coalesce(x.tax_amount*a.ccy_rate,0)) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1,"
                + " (select sum(coalesce(x.tax_amount*a.ccy_rate,0)) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3 ");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = sqa.getSQL() + " group by a.pol_type_id,a.pol_no,a.status,a.ccy_rate,a.insured_amount,a.premi_total,a.nd_pcost,"
                + " a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,"
                + " a.nd_feebase1,a.nd_brok1,a.nd_taxcomm1,a.pol_id "
                + " order by a.pol_type_id,a.pol_no "
                + " ) x group by pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public EntityView getCoinsurer() {
        final EntityView entity = (EntityView) DTOPool.getInstance().getDTO(EntityView.class, stCoinsurerID);

        return entity;
    }

    public EntityView getEntity() {
        final EntityView entity = (EntityView) DTOPool.getInstance().getDTO(EntityView.class, stEntityID);

        return entity;
    }

    public String getEntityShortName() {

        final EntityView shortname = getEntity();

        if (shortname == null) {
            return null;
        }

        return shortname.getStShortName();
    }

    public String getEntityRefEntity() {

        final EntityView refent = getEntity();

        if (refent == null) {
            return null;
        }

        return refent.getStRefEntityID();
    }

    public String getEntityAddress() {

        final EntityView address = getEntity();

        if (address == null) {
            return null;
        }

        return address.getStAddress();
    }

    public String getStNumber() {
        return stNumber;
    }

    public void setStNumber(String stNumber) {
        this.stNumber = stNumber;
    }

    public String getStCoinsurerID() {
        return stCoinsurerID;
    }

    public void setStCoinsurerID(String stCoinsurerID) {
        this.stCoinsurerID = stCoinsurerID;
    }

    public String getStCoinsurerName() {
        return stCoinsurerName;
    }

    public void setStCoinsurerName(String stCoinsurerName) {
        this.stCoinsurerName = stCoinsurerName;
    }

    public String getStRiskCodeName() {
        return stRiskCodeName;
    }

    public void setStRiskCodeName(String stRiskCodeName) {
        this.stRiskCodeName = stRiskCodeName;
    }

    public Date getAppDateFrom() {
        return appDateFrom;
    }

    public void setAppDateFrom(Date appDateFrom) {
        this.appDateFrom = appDateFrom;
    }

    public Date getAppDateTo() {
        return appDateTo;
    }

    public void setAppDateTo(Date appDateTo) {
        this.appDateTo = appDateTo;
    }

    public String getStIndex() {
        return stIndex;
    }

    public void setStIndex(String stIndex) {
        this.stIndex = stIndex;
    }

    public String getStObject() {
        return stObject;
    }

    public void setStObject(String stObject) {
        this.stObject = stObject;
    }

    public String getStReceiptNo() {
        return stReceiptNo;
    }

    public void setStReceiptNo(String stReceiptNo) {
        this.stReceiptNo = stReceiptNo;
    }

    public DTOList EXCEL_RPP_JENIS100AAUIOLD() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("group_name,count(pol_no) as pol_no,status,ins_policy_type_grp_id, "
                + "sum(insured_amount) as insured_amount,sum(premi) as premi,sum(nd_pcost) as nd_pcost,  "
                + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                + "sum(nd_hfee) as nd_hfee,sum(komisi) as komisi,sum(feebase) as feebase,  "
                + "sum(brok) as brok,sum(tax) as tax,  "
                + "sum(premi_ko) as premi_ko,sum(brok_ko) as brok_ko,sum(hfee_ko) as hfee_ko "
                + "from ( select f.ins_policy_type_grp_id,f.group_name,a.status,a.pol_no,"
                + "sum(checkkoas(b.entity_id=1,coalesce(a.insured_amount*a.ccy_rate,0))) as insured_amount, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.premi_total*a.ccy_rate,0))) as premi, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_pcost*a.ccy_rate,0))) as nd_pcost, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_sfee*a.ccy_rate,0))) as nd_sfee, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_disc1*a.ccy_rate,0))) as diskon_premi, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_feebase1*a.ccy_rate,0))) as feebase, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_hfee*a.ccy_rate,0))) as nd_hfee, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_comm1*a.ccy_rate,0))) as komisi,"
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_brok1*a.ccy_rate,0))) as brok, "
                + "sum(checkkoas(b.entity_id=1,coalesce(a.nd_taxcomm1*a.ccy_rate,0))) as tax,"
                + "sum(checkkoas(b.entity_id<>1,b.premi_amt*a.ccy_rate)) as premi_ko, "
                + "sum(checkkoas(b.entity_id<>1,b.hfee_amount)) as hfee_ko, "
                + "sum(checkkoas(b.entity_id<>1,b.broker_amount)) as brok_ko");

        sqa.addQuery("   from       ins_policies a  "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id  "
                + "inner join ins_policy_types d on d.pol_type_id = a.pol_type_id   "
                + "inner join ins_policy_type_grp f on f.ins_policy_type_grp_id = d.ins_policy_type_grp_id2  ");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        final String sql = "select group_name,"
                + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as polis, "
                + "coalesce(sum(checkreas(status='ENDORSE',pol_no)),0) as endorse, "
                + "sum(insured_amount) as insured_amount,sum(premi) as premi,sum(nd_pcost) as nd_pcost,  "
                + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,  "
                + "sum(nd_hfee) as nd_hfee,sum(komisi) as komisi,sum(feebase) as feebase,  "
                + "sum(brok) as brok,sum(tax) as tax, "
                + "sum(premi_ko) as premi_ko,sum(brok_ko) as brok_ko,sum(hfee_ko) as hfee_ko "
                + "from (" + sqa.getSQL()
                + " group by f.ins_policy_type_grp_id,f.group_name,a.status,a.pol_no "
                + ") x group by group_name,ins_policy_type_grp_id,status "
                + ") x group by group_name,ins_policy_type_grp_id order by ins_policy_type_grp_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_RPP_JENIS100AAUI() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String querySql = "a.pol_type_id,a.pol_no,"
                + "sum(case when a.status in ('POLICY','RENEWAL') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0) else 0 end) as tsi, "
                + "sum(case when a.status in ('ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),0) else 0 end) as tsi_e, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as komisi, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as bfee, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as hfee, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as feebase, "
                + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') "
                + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id, coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (59,58,71,57,76,78,85,86,87,91) and a.pol_id = x.pol_id),0)"
                + ",coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as ppn, "
                + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' "
                + "and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "' "
                + "and date_trunc('day',a.approved_date) <= '" + policyDateTo + "' "
                + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

        sqa.addSelect(querySql);

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id ");

        sqa.addClause("(a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))");
        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        final String sql = "select c.group_name,sum(tsi+tsi_e) as tsi,sum(premi) as premibru,"
                + "sum(premi-diskon-komisi-bfee-hfee-feebase-ppn) as preminet,sum(claim) as claim,"
                + "COUNT(CASE WHEN a.premi <> 0 then 1 ELSE NULL END) as totpol,"
                + "COUNT(CASE WHEN a.claim <> 0 then 1 ELSE NULL END) as totclaim from ("
                + sqa.getSQL()
                + " group by 1,2 order by 1,2 "
                + ") a "
                + "inner join ins_policy_types b on b.pol_type_id = a.pol_type_id "
                + "inner join ins_policy_type_grp c on c.ins_policy_type_grp_id = b.ins_policy_type_grp_id2 "
                + "where a.premi <> 0 or a.diskon <> 0 or a.komisi <> 0 or a.bfee <> 0 or a.hfee <> 0 or a.feebase <> 0 or a.ppn <> 0 or a.claim <> 0 "
                + "group by 1 order by 1 ";

        //sheet premi reas
        final SQLAssembler sqa2 = new SQLAssembler();
//
//        sqa2.addSelect("d.ins_policy_type_grp_id,d.group_name,"
//                + "sum(round(i.premi_amount,2)) as premire,sum(round(i.ricomm_amt,2)) as commre ");
//
//        String clauseObj = "";
//
//        if (policyDateFrom != null) {
//            clauseObj = " and b.ins_pol_obj_id > 9999 and a.policy_date >= '" + policyDateFrom + "' ";
//        }
//
//        sqa2.addQuery(" from ins_policy a "
//                + "inner join ins_pol_obj b on b.pol_id = a.pol_id " + clauseObj
//                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
//                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
//                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id  and i.premi_amount <> 0 "
//                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id and j.treaty_type not in ('OR','XOL1','XOL2','XOL3','XOL4','XOL5') "
//                + "inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
//                + "inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 ");
//
//        sqa2.addClause(" a.status in ('POLICY','ENDORSE','RENEWAL') ");
//        sqa2.addClause(" a.active_flag='Y' and a.effective_flag='Y' ");
//
//        if (policyDateFrom != null) {
//            sqa2.addClause("date_trunc('day',a.policy_date) >= ?");
//            sqa2.addPar(policyDateFrom);
//        }
//
//        if (policyDateTo != null) {
//            sqa2.addClause("date_trunc('day',a.policy_date) <= ?");
//            sqa2.addPar(policyDateTo);
//        }
//
//        final String sql2 = sqa2.getSQL() + " group by 1,2 order by 1 ";

        long lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
        long lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
        String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "bal", "+");

        sqa2.addSelect("d.ins_policy_type_grp_id,d.group_name,"
                + "round(coalesce(sum(" + plist + "),0),0) as premire ");

        sqa2.addQuery(" from gl_accounts b "
                + "inner join gl_acct_bal2 a on b.account_id = a.account_id "
                + "inner join ins_pol_types c on c.vx = substr(b.accountno,11,2) "
                + "inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 ");

        sqa2.addClause(" b.accountno like '63%' and b.acctype is null and a.idr_flag = 'Y'");

        if (policyDateFrom != null) {
            sqa2.addClause("a.period_year = ?");
            sqa2.addPar(DateUtil.getYear(policyDateFrom));
        }

        if (stBranch != null) {
            sqa2.addClause("b.accountno like ?");
            sqa2.addPar("%" + stBranch);
        }

        final String sql2 = sqa2.getSQL() + " group by 1,2 order by 1 ";

        //sheet klaim reas
        final SQLAssembler sqa3 = new SQLAssembler();

//        sqa3.addSelect("d.ins_policy_type_grp_id,d.group_name,"
//                + "sum(round(i.claim_amount,2)*a.ccy_rate_claim) as claimre ");
//
//        sqa3.addQuery(" from ins_policy a "
//                + "inner join ins_pol_obj b on b.ins_pol_obj_id = a.claim_object_id "
//                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
//                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
//                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id and i.claim_amount <> 0 "
//                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id and j.treaty_type not in ('OR','XOL1','XOL2','XOL3','XOL4','XOL5') "
//                + "inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
//                + "inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 ");
//
//        sqa3.addClause(" a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA' ");
//        sqa3.addClause(" a.active_flag='Y' and a.effective_flag='Y' ");
//
//        if (policyDateFrom != null) {
//            sqa3.addClause("date_trunc('day',a.approved_date) >= ?");
//            sqa3.addPar(policyDateFrom);
//        }
//
//        if (policyDateTo != null) {
//            sqa3.addClause("date_trunc('day',a.approved_date) <= ?");
//            sqa3.addPar(policyDateTo);
//        }
//
//        if (stBranch != null) {
//            sqa3.addClause("a.cc_code = ?");
//            sqa3.addPar(stBranch);
//        }
//
//        final String sql3 = sqa3.getSQL() + " group by 1,2 order by 1 ";

        sqa3.addSelect("d.ins_policy_type_grp_id,d.group_name,"
                + "round(coalesce(sum(" + plist + "),0),0) as claimre ");

        sqa3.addQuery(" from gl_accounts b "
                + "inner join gl_acct_bal2 a on b.account_id = a.account_id "
                + "inner join ins_pol_types c on c.vx = substr(b.accountno,11,2) "
                + "inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 ");

        sqa3.addClause(" b.accountno like '72%' and b.acctype is null and a.idr_flag = 'Y'");

        if (policyDateFrom != null) {
            sqa3.addClause("a.period_year = ?");
            sqa3.addPar(DateUtil.getYear(policyDateFrom));
        }

        if (stBranch != null) {
            sqa3.addClause("b.accountno like ?");
            sqa3.addPar("%" + stBranch);
        }

        final String sql3 = sqa3.getSQL() + " group by 1,2 order by 1 ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa2.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        final DTOList l3 = ListUtil.getDTOListFromQuery(
                sql3,
                sqa3.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT3", l3);

        return l;
    }

    public void EXPORT_RPP_JENIS100AAUI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("produksi aaui");
        XSSFSheet sheet2 = wb.createSheet("premi reas");
        XSSFSheet sheet3 = wb.createSheet("klaim reas");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");
        final DTOList list3 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT3");

        BigDecimal netto = new BigDecimal(0);

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cob");
            row0.createCell(1).setCellValue("premi bruto");
            row0.createCell(2).setCellValue("total polis");
            row0.createCell(3).setCellValue("klaim");
            row0.createCell(4).setCellValue("total klaim");
            row0.createCell(5).setCellValue("premi netto");
            row0.createCell(6).setCellValue("harga pertanggungan");

            XSSFRow row1 = sheet.createRow(1);
            row1.createCell(1).setCellValue("(premi 100-premi koas)");
            row1.createCell(5).setCellValue("(premi bruto-diskon-komisi-bfee-hfee-feebase-ppn)");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 2);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("group_name"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("premibru").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("totpol").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("claim").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("totclaim").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("preminet").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("tsi").doubleValue());

//            //bikin header
//            XSSFRow row0 = sheet.createRow(0);
//            row0.createCell(0).setCellValue("group_name");
//            row0.createCell(1).setCellValue("polis");
//            row0.createCell(2).setCellValue("endorse");
//            row0.createCell(3).setCellValue("insured_amount");
//            row0.createCell(4).setCellValue("premi");
//            row0.createCell(5).setCellValue("bpol");
//            row0.createCell(6).setCellValue("bmat");
//            row0.createCell(7).setCellValue("diskon");
//            row0.createCell(8).setCellValue("hfee");
//            row0.createCell(9).setCellValue("komisi");
//            row0.createCell(10).setCellValue("bfee");
//            row0.createCell(11).setCellValue("feebase");
//            row0.createCell(12).setCellValue("tax");
//            row0.createCell(13).setCellValue("premi_ko");
//            row0.createCell(14).setCellValue("brok_ko");
//            row0.createCell(15).setCellValue("hfee_ko");
//            row0.createCell(16).setCellValue("netto");
//
//            netto = BDUtil.sub(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("diskon_premi"));
//            netto = BDUtil.sub(netto, h.getFieldValueByFieldNameBD("nd_hfee"));
//            netto = BDUtil.sub(netto, h.getFieldValueByFieldNameBD("brok"));
//            netto = BDUtil.sub(netto, h.getFieldValueByFieldNameBD("komisi"));
//            netto = BDUtil.sub(netto, h.getFieldValueByFieldNameBD("feebase"));
//
//            //bikin isi cell
//            XSSFRow row = sheet.createRow(i + 1);
//            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("group_name"));
//            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
//            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
//            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
//            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
//            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
//            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
//            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
//            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
//            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
//            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
//            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
//            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());
//            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("premi_ko").doubleValue());
//            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("brok_ko").doubleValue());
//            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("hfee_ko").doubleValue());
//            row.createCell(16).setCellValue(netto.doubleValue());

        }

        for (int i = 0; i < list2.size(); i++) {
            HashDTO h = (HashDTO) list2.get(i);

            XSSFRow row0 = sheet2.createRow(0);
            row0.createCell(0).setCellValue("group_name");
            row0.createCell(1).setCellValue("premire");
//            row0.createCell(2).setCellValue("komisire");

            //bikin isi cell
            XSSFRow row = sheet2.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("group_name"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("premire").doubleValue());
//            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("commre").doubleValue());

        }

        for (int i = 0; i < list3.size(); i++) {
            HashDTO h = (HashDTO) list3.get(i);

            XSSFRow row0 = sheet3.createRow(0);
            row0.createCell(0).setCellValue("group_name");
            row0.createCell(1).setCellValue("klaimre");

            //bikin isi cell
            XSSFRow row = sheet3.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("group_name"));
            row.createCell(1).setCellValue(BDUtil.negate(h.getFieldValueByFieldNameBD("claimre")).doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_PREMI_PERWEEK() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.lvl,count(b.pol_no) as jumlah,coalesce(round(sum(b.insured_amount),2),0) as insured,"
                + "coalesce(round(sum(b.premi_total),2),0) as premi ");

        sqa.addQuery(" from band_level_char a"
                + " left join ins_policy b on substr(b.policy_date::text,9,2) between a.ref1 and a.ref2 ");

        sqa.addClause("a.ref3 = 'date'");
        sqa.addClause("b.status in ('POLICY','ENDORSE','RENEWAL') and b.effective_flag = 'Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',b.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',b.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("b.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("b.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("b.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        final String sql = sqa.getSQL() + " group by a.lvl order by a.lvl";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_PREMI_PERWEEK() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        int norut = 0;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            norut++;

            XSSFRow row1 = sheet.createRow(1);
            row1.createCell(0).setCellValue("LAPORAN PRODUKSI KONTRA BANK GARANSI");

            XSSFRow row2 = sheet.createRow(2);
            row2.createCell(0).setCellValue("KANTOR OPERASIONAL " + getCostCenter().getStDescription().toUpperCase());

            XSSFRow row3 = sheet.createRow(3);
            row3.createCell(0).setCellValue("BULAN " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase());

            //bikin header
            XSSFRow row0 = sheet.createRow(5);
            row0.createCell(0).setCellValue("No");
            row0.createCell(1).setCellValue("Mingguan");
            row0.createCell(2).setCellValue("Jumlah Sertifikat");
            row0.createCell(3).setCellValue("Nilai Jaminan");
            row0.createCell(4).setCellValue("Premi");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 6);
            row.createCell(0).setCellValue(norut);
            row.createCell(1).setCellValue("Minggu " + String.valueOf(h.getFieldValueByFieldNameBD("lvl").doubleValue()));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("jumlah").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public GLCostCenterView getCostCenter() {
        final GLCostCenterView costcenter = (GLCostCenterView) DTOPool.getInstance().getDTO(GLCostCenterView.class, stBranch);

        return costcenter;
    }

    public InsurancePolicyView getPolicy(String stParentID) {
        return (InsurancePolicyView) DTOPool.getInstance().getDTO(InsurancePolicyView.class, stParentID);
    }

    public DTOList EXCEL_PERIOD_UW_PAKREASI() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.lvl,a.ref4,a.ref5,"
                + "coalesce(count(b.pol_no),0) as jumlah,"
                + "sum(b.insured_amount) as insured_amount,"
                + "sum(b.premi_or) as premi_or,"
                + "sum(b.premi_koas) as premi_koas,"
                + "sum(b.comm_koas) as comm_koas,"
                + "sum(getpremi2(coins_id is null,b.premi_koas)) as premi_koas1,"
                + "sum(getpremi2(coins_id='94',b.premi_koas)) as premi_koas94,"
                + "sum(getpremi2(coins_id='96',b.premi_koas)) as premi_koas96,"
                + "sum(getpremi2(coins_id='115',b.premi_koas)) as premi_koas115,"
                + "sum(getpremi2(coins_id='2000',b.premi_koas)) as premi_koas2000,"
                + "sum(getpremi2(coins_id='2001',b.premi_koas)) as premi_koas2001,"
                + "sum(getpremi2(coins_id='2002',b.premi_koas)) as premi_koas2002,"
                + "sum(getpremi2(coins_id is null,b.comm_koas)) as comm_koas1,"
                + "sum(getpremi2(coins_id='94',b.comm_koas)) as comm_koas94,"
                + "sum(getpremi2(coins_id='96',b.comm_koas)) as comm_koas96,"
                + "sum(getpremi2(coins_id='115',b.comm_koas)) as comm_koas115,"
                + "sum(getpremi2(coins_id='2000',b.comm_koas)) as comm_koas2000,"
                + "sum(getpremi2(coins_id='2001',b.comm_koas)) as comm_koas2001,"
                + "sum(getpremi2(coins_id='2002',b.comm_koas)) as comm_koas2002");

        String sql = " left join ( "
                + " select pol_no, insured_amount,coins_id,"
                + " round(((premi_or*share_pct)/100),0) as premi_or,"
                + " round(((premi_koas*share_pct)/100),0) as premi_koas, "
                + " round(((comm_koas*share_pct)/100),0) as comm_koas "
                + " from ( select a.pol_id,a.cc_code,a.pol_no,"
                + " getpositive(c.insured_amount < 0,c.insured_amount*-1,c.insured_amount) as insured_amount,"
                + " (c.refn6) as premi_or,(c.refn2) as premi_koas,(c.refn9) as comm_koas,coalesce(c.ref8,a.coinsurer_id) as coins_id, "
                + " (select d.share_pct from ins_pol_coins d where d.policy_id = a.pol_id and d.entity_id = 1 and d.coins_type= 'COINS') as share_pct  "
                + " from ins_policy a "
                + " inner join ins_pol_obj c on c.pol_id = a.pol_id and c.refn6 <> 0  "
                + " where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' "
                + " and a.ins_policy_type_grp_id = 9 and a.pol_type_id = 21 ";

        if (getPolicyDateFrom() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) >= ?";
            sqa.addPar(policyDateFrom);
        }

        if (getPolicyDateTo() != null) {
            sql = sql + " and date_trunc('day',a.policy_date) <= ?";
            sqa.addPar(policyDateTo);
        }

        if (getPeriodFrom() != null) {
            sql = sql + " and date_trunc('day',c.refd2) >= ?";
            sqa.addPar(periodFrom);
        }

        if (getPeriodTo() != null) {
            sql = sql + " and date_trunc('day',c.refd2) <= ?";
            sqa.addPar(periodTo);
        }

        if (getStBranch() != null) {
            sql = sql + " and a.cc_code = ?";
            sqa.addPar(stBranch);
        }

        sqa.addQuery(" from band_level a " + sql + " ) x ) as b on b.insured_amount between a.ref1 and a.ref2 ");

        sqa.addClause(" a.pol_type_grp_id = 9 ");
        sqa.addClause(" a.pol_type_id = 21 ");
        sqa.addClause(" a.group_desc = 'PERIOD_UW' ");

        sql = sqa.getSQL() + " group by a.lvl,a.ref4,a.ref5 order by a.lvl ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_PERIOD_UW_PAKREASI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal premiKOAS = new BigDecimal(0);
        BigDecimal premi94 = new BigDecimal(0);
        BigDecimal premi96 = new BigDecimal(0);
        BigDecimal premi2000 = new BigDecimal(0);
        BigDecimal premi2001 = new BigDecimal(0);
        BigDecimal premi2002 = new BigDecimal(0);
        BigDecimal commKOAS = new BigDecimal(0);
        BigDecimal comm94 = new BigDecimal(0);
        BigDecimal comm96 = new BigDecimal(0);
        BigDecimal comm2000 = new BigDecimal(0);
        BigDecimal comm2001 = new BigDecimal(0);
        BigDecimal comm2002 = new BigDecimal(0);
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue("PA KREASI");

            //bikin header
            XSSFRow row2 = sheet.createRow(1);
            row2.createCell(0).setCellValue("POLICY DATE : " + DateUtil.getDateStr(getPolicyDateFrom()) + " TO " + DateUtil.getDateStr(getPolicyDateTo()));

            //bikin header
            XSSFRow row3 = sheet.createRow(2);
            if (getPeriodFrom() != null) {
                row3.createCell(0).setCellValue("UNDERWRITING YEAR : " + DateUtil.getYear(getPeriodFrom()));
            }

            //bikin header
            XSSFRow row4 = sheet.createRow(3);
            if (getStBranch() != null) {
                row4.createCell(0).setCellValue("BRANCH : " + getStBranch());
            }

            //bikin header
            XSSFRow row5 = sheet.createRow(5);
            row5.createCell(0).setCellValue("RISK BASIS");
            row5.createCell(1).setCellValue("PREMI 100%");
            row5.createCell(2).setCellValue("PREMI OR");
            row5.createCell(3).setCellValue("JUMLAH");
            row5.createCell(4).setCellValue("HARGA PERTANGGUNGAN");


            premi94 = BDUtil.add(premi94, h.getFieldValueByFieldNameBD("premi_koas1"));
            premi94 = BDUtil.add(premi94, h.getFieldValueByFieldNameBD("premi_koas115"));
            premi94 = BDUtil.add(premi94, h.getFieldValueByFieldNameBD("premi_koas94"));
            premi96 = BDUtil.add(premi96, h.getFieldValueByFieldNameBD("premi_koas96"));
            premi2000 = BDUtil.add(premi2000, h.getFieldValueByFieldNameBD("premi_koas2000"));
            premi2001 = BDUtil.add(premi2001, h.getFieldValueByFieldNameBD("premi_koas2001"));
            premi2002 = BDUtil.add(premi2002, h.getFieldValueByFieldNameBD("premi_koas2002"));

            premiKOAS = BDUtil.add(premi94, premi96);
            premiKOAS = BDUtil.add(premiKOAS, premi2000);
            premiKOAS = BDUtil.add(premiKOAS, premi2001);
            premiKOAS = BDUtil.add(premiKOAS, premi2002);

            comm94 = BDUtil.add(comm94, h.getFieldValueByFieldNameBD("comm_koas1"));
            comm94 = BDUtil.add(comm94, h.getFieldValueByFieldNameBD("comm_koas115"));
            comm94 = BDUtil.add(comm94, h.getFieldValueByFieldNameBD("comm_koas94"));
            comm96 = BDUtil.add(comm96, h.getFieldValueByFieldNameBD("comm_koas96"));
            comm2000 = BDUtil.add(comm2000, h.getFieldValueByFieldNameBD("comm_koas2000"));
            comm2001 = BDUtil.add(comm2001, h.getFieldValueByFieldNameBD("comm_koas2001"));
            comm2002 = BDUtil.add(comm2002, h.getFieldValueByFieldNameBD("comm_koas2002"));

            commKOAS = BDUtil.add(comm94, comm96);
            commKOAS = BDUtil.add(commKOAS, comm2000);
            commKOAS = BDUtil.add(commKOAS, comm2001);
            commKOAS = BDUtil.add(commKOAS, comm2002);

            BigDecimal premiOR = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_or"), h.getFieldValueByFieldNameBD("premi_koas"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 6);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("ref4") + " - " + h.getFieldValueByFieldNameST("ref5"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("premi_or").doubleValue());
            row.createCell(2).setCellValue(premiOR.doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("jumlah").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());

            XSSFRow row6 = sheet.createRow(16);
            row6.createCell(0).setCellValue("Total Premi Koas");
            row6.createCell(1).setCellValue("Premi Koas BAJ");
            row6.createCell(2).setCellValue("Premi Koas JS");
            row6.createCell(3).setCellValue("Premi Koas AJS_TEMP_AA");
            row6.createCell(4).setCellValue("Premi Koas AJS_TEMP_AB");
            row6.createCell(5).setCellValue("Premi Koas MEGA");
            XSSFRow row7 = sheet.createRow(17);
            row7.createCell(0).setCellValue(premiKOAS.doubleValue());
            row7.createCell(1).setCellValue(premi94.doubleValue());
            row7.createCell(2).setCellValue(premi96.doubleValue());
            row7.createCell(3).setCellValue(premi2000.doubleValue());
            row7.createCell(4).setCellValue(premi2001.doubleValue());
            row7.createCell(5).setCellValue(premi2002.doubleValue());


            XSSFRow row8 = sheet.createRow(19);
            row8.createCell(0).setCellValue("Jumlah Komisi Koas : ");
            row8.createCell(1).setCellValue("Komisi Koas BAJ");
            row8.createCell(2).setCellValue("Komisi Koas JS");
            row8.createCell(3).setCellValue("Komisi Koas AJS_TEMP_AA");
            row8.createCell(4).setCellValue("Komisi Koas AJS_TEMP_AB");
            row8.createCell(5).setCellValue("Komisi Koas MEGA");
            XSSFRow row9 = sheet.createRow(20);
            row9.createCell(0).setCellValue(commKOAS.doubleValue());
            row9.createCell(1).setCellValue(comm94.doubleValue());
            row9.createCell(2).setCellValue(comm96.doubleValue());
            row9.createCell(3).setCellValue(comm2000.doubleValue());
            row9.createCell(4).setCellValue(comm2001.doubleValue());
            row9.createCell(5).setCellValue(comm2002.doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public String getStCustStatus() {
        return stCustStatus;
    }

    public void setStCustStatus(String stCustStatus) {
        this.stCustStatus = stCustStatus;
    }

    public Date getPeriodEndFrom() {
        return periodEndFrom;
    }

    public void setPeriodEndFrom(Date periodEndFrom) {
        this.periodEndFrom = periodEndFrom;
    }

    public Date getPeriodEndTo() {
        return periodEndTo;
    }

    public void setPeriodEndTo(Date periodEndTo) {
        this.periodEndTo = periodEndTo;
    }

    public DTOList REKAP_CABOUTLET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" e.category1 as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

            sqa.addQuery(" from ins_policies a "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + " left join ent_master e on e.ent_id = a.entity_id   "
                    + " left join ent_master f on f.ent_id = a.prod_id  ");

            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1, "
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2, "
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3, "
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4, "
                        + "sum(premi-diskon) as premi_total_adisc  "
                        + "from s_region e "
                        + "left join ( "
                        + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                        + ") z on z.region_id = e.region_id "
                        + " where e.active_flag = 'Y' "
                        + " group by e.cc_code,e.desc2,e.region_code2 "
                        + " order by e.cc_code,e.region_code2 ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                            + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1, "
                            + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2, "
                            + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3, "
                            + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4, "
                            + "sum(premi-diskon) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( "
                            + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                            + ") z on z.region_id_source = e.region_id "
                            + " where e.active_flag = 'Y' " //and e.cc_code not in ('80') "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                            + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1, "
                            + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2, "
                            + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3, "
                            + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4, "
                            + "sum(premi-diskon) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( "
                            + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                            + ") z on z.region_id = e.region_id "
                            + " where e.active_flag = 'Y' "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                }
            }
            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select a.sumbis as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(a.premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";

                currentMonth = "select bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";
            }


            sqa.addSelect(" bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                        + ") a group by a.bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                        + "sum(getkoas(bus_source='1',premi)) as nd_comm1, "
                        + "sum(getkoas(bus_source='2',premi)) as nd_comm2, "
                        + "sum(getkoas(bus_source='3',premi)) as nd_comm3, "
                        + "sum(getkoas(bus_source='4',premi)) as nd_comm4, "
                        + "sum(premi) as premi_total_adisc  "
                        + "from s_region e "
                        + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                        + ") z on z.region_id = e.region_id "
                        + " where e.active_flag = 'Y' "
                        + " group by e.cc_code,e.desc2,e.region_code2 "
                        + " order by e.cc_code,e.region_code2 ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                            + "sum(getkoas(bus_source='1',premi)) as nd_comm1, "
                            + "sum(getkoas(bus_source='2',premi)) as nd_comm2, "
                            + "sum(getkoas(bus_source='3',premi)) as nd_comm3, "
                            + "sum(getkoas(bus_source='4',premi)) as nd_comm4, "
                            + "sum(premi) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                            + ") z on z.region_id_source = e.region_id "
                            + " where e.active_flag = 'Y' " //and e.cc_code not in ('80') "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,e.region_code2 as region_id,e.desc2 as description, "
                            + "sum(getkoas(bus_source='1',premi)) as nd_comm1, "
                            + "sum(getkoas(bus_source='2',premi)) as nd_comm2, "
                            + "sum(getkoas(bus_source='3',premi)) as nd_comm3, "
                            + "sum(getkoas(bus_source='4',premi)) as nd_comm4, "
                            + "sum(premi) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                            + ") z on z.region_id = e.region_id "
                            + " where e.active_flag = 'Y' "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                }
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList REKAP_CAB() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;
        String sql2 = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect("b.category1 as bus_source,a.cc_code," //a.cc_code_source,
                    + "(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon, ");

            sql = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                    + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                    + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

            if (getPolicyDateFrom() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa.addPar(policyDateFrom);
            }

            if (getPolicyDateTo() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa.addPar(policyDateTo);
            }

            if (getAppDateFrom() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa.addPar(appDateFrom);
            }

            if (getAppDateTo() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa.addPar(appDateTo);
            }

            if (getStPolicyTypeID() != null) {
                sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) = ?";
                sqa.addPar(stPolicyTypeID);
            }

            if (getStBussinessPolType() != null) {
                if (getStBussinessPolType().equalsIgnoreCase("1")) {
                    sql = sql + " and c.cc_code = '80'";
                } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                    sql = sql + " and c.cc_code <> '80'";
                }
            }

            if (getStBussinessPolTypeCob() != null) {
                if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            sqa.addQuery(sql + " ) as premi_base from ins_policies a  "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + " left join ent_master f on f.ent_id = a.prod_id  ");

            sqa.addClause("a.effective_flag='Y'");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (stStatus != null) {
                sqa.addClause("a.status = ?");
                sqa.addPar(stStatus);
            } else {
                sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("b.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stMarketerOffID != null) {
                sqa.addClause("a.marketing_officer_who = ?");
                sqa.addPar(stMarketerOffID);
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.create_who <> 'administrator'");
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            /*2 PAGE*/
            /*sql = sqa.getSQL() + " group by 1,2,3 ";*/

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,"
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                        + "sum(premi-diskon) as premi_total_adisc,premi_base "
                        + "from gl_cost_center e "
                        + "left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + ") z on z.cc_code = e.cc_code "
                        + "group by e.cc_code,z.premi_base order by e.cc_code";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code as cc_code,"
                            + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                            + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                            + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                            + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                            + "sum(premi-diskon) as premi_total_adisc,premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                            + "group by e.cc_code,z.premi_base order by e.cc_code";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,"
                            + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                            + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                            + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                            + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                            + "sum(premi-diskon) as premi_total_adisc,premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                            + "group by e.cc_code,z.premi_base order by e.cc_code";
                }
            }

            sql2 = "select e.cc_code as cc_code,"
                    + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + "sum((premi-diskon)) as premi_total_adisc,z.premi_base "
                    + "from gl_cost_center e "
                    + "left join ( "
                    + sqa.getSQL() + " group by 1,2,3 "
                    + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                    + "group by e.cc_code,z.premi_base order by e.cc_code";

            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,cc_code," //a.cc_code_source,
                        + "(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by 1,2,3 ";

                currentMonth = "select bus_source,a.cc_code,a.cc_code_source,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.cc_code,"//a.cc_code_source,"
                        + "(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,a.cc_code," //a.cc_code_source,
                        + "(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by 1,2,3 ";
            }

            String inward = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                    + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                    + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

            if (getPolicyDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            if (getAppDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getAppDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            /*if (getStBranch() != null) {
            inward = inward + " and c.cc_code = '" + stBranch + "'";
            }*/

            if (getStPolicyTypeID() != null) {
                inward = inward + " and c.attr_pol_type_id = '" + stPolicyTypeID + "'";
            }

            if (getStBussinessPolType() != null) {
                if (getStBussinessPolType().equalsIgnoreCase("1")) {
                    inward = inward + " and c.cc_code = '80'";
                } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                    inward = inward + " and c.cc_code <> '80'";
                }
            }

            if (getStBussinessPolTypeCob() != null) {
                if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            sqa.addSelect(" bus_source,a.cc_code,a.cc_code_source,sum(premi) as premi, " + inward + ") as premi_base ");//union


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by 1,2,3 ) a group by a.bus_source,a.cc_code,a.cc_code_source ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            /*2 PAGE*/
            /*
            sql = sqa.getSQL() + " group by 1,2,3 ";
            }

            SessionManager.getInstance().getRequest().setAttribute("RPT", sql);
            return sql;*/

            /*1 PAGE*/
            if (stBussinessPolType == null) {
                sql = "select e.cc_code,"
                        + "sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                        + "sum(premi) as premi_total_adisc, premi_base "
                        + "from gl_cost_center e "
                        + "left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + ") z on z.cc_code = e.cc_code "
                        + "group by e.cc_code,z.premi_base order by e.cc_code";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code as cc_code,"
                            + "sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                            + "sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                            + "sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                            + "sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                            + "sum(premi) as premi_total_adisc, premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                            + "group by e.cc_code,z.premi_base order by e.cc_code";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,"
                            + "sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                            + "sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                            + "sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                            + "sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                            + "sum(premi) as premi_total_adisc, premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                            + "group by e.cc_code,z.premi_base order by e.cc_code";
                }
            }

            sql2 = "select e.cc_code as cc_code,"
                    + "sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                    + "sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                    + "sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                    + "sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                    + "sum(premi) as premi_total_adisc,z.premi_base "
                    + "from gl_cost_center e "
                    + "left join ( "
                    + sqa.getSQL() + " group by 1,2,3 "
                    + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                    + "group by e.cc_code,z.premi_base order by e.cc_code";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map2 = l2.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l2.setAttribute("AMOUNT_MAP", map2);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        return l;
    }

    public DTOList REKAP_JENIS() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect("	b.category1 as bus_source,a.pol_type_id,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon, ");

            sql = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                    + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                    + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

            if (getPolicyDateFrom() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa.addPar(policyDateFrom);
            }

            if (getPolicyDateTo() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa.addPar(policyDateTo);
            }

            if (getAppDateFrom() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa.addPar(appDateFrom);
            }

            if (getAppDateTo() != null) {
                sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa.addPar(appDateTo);
            }

            if (getStBranch() != null) {
                sql = sql + " and c.cc_code = ?";
                sqa.addPar(stBranch);
            }

            if (getStBussinessPolType() != null) {
                if (getStBussinessPolType().equalsIgnoreCase("1")) {
                    sql = sql + " and c.cc_code = '80'";
                } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                    sql = sql + " and c.cc_code <> '80'";
                }
            }

            if (getStBussinessPolTypeCob() != null) {
                if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    sql = sql + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            sqa.addQuery(sql + " ) as premi_base from ins_policies a  "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                    + "       left join ent_master f on f.ent_id = a.prod_id  ");

            sqa.addClause("a.effective_flag='Y'");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (stStatus != null) {
                sqa.addClause("a.status = ?");
                sqa.addPar(stStatus);
            } else {
                sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("b.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stMarketerOffID != null) {
                sqa.addClause("a.marketing_officer_who = ?");
                sqa.addPar(stMarketerOffID);
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.create_who <> 'administrator'");
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            sql = "select e.pol_type_id,e.description,"
                    + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + "coalesce(sum(premi-diskon),0) as premi_total_adisc,coalesce(premi_base,0) as premi_base "
                    + "from ins_policy_types e "
                    + "left join ( "
                    + sqa.getSQL() + " group by b.category1,a.pol_type_id "
                    + ") z on z.pol_type_id = e.pol_type_id "
                    + "group by e.pol_type_id,e.description,premi_base order by e.pol_type_id";
            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as catsumbis,pol_type_id,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,pol_type_id ";

                currentMonth = "select bus_source,a.pol_type_id,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.pol_type_id,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as catsumbis,pol_type_id,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,pol_type_id ";
            }


            sqa.addSelect(" catsumbis,pol_type_id,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.pol_type_id ) a group by a.bus_source,a.pol_type_id ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            String inward = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                    + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                    + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

            if (getPolicyDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            if (getAppDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getAppDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            if (getStBranch() != null) {
                inward = inward + " and c.cc_code = '" + stBranch + "'";
            }

            if (getStPolicyTypeID() != null) {
                inward = inward + " and c.attr_pol_type_id = '" + stPolicyTypeID + "'";
            }

            if (getStBussinessPolType() != null) {
                if (getStBussinessPolType().equalsIgnoreCase("1")) {
                    inward = inward + " and c.cc_code = '80'";
                } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                    inward = inward + " and c.cc_code <> '80'";
                }
            }

            if (getStBussinessPolTypeCob() != null) {
                if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            sql = "select e.pol_type_id,e.description,"
                    + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                    + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                    + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                    + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                    + "coalesce(sum(premi),0) as premi_total_adisc, " + inward + " ) as premi_base "
                    + "from ins_policy_types e "
                    + "left join ( "
                    + sqa.getSQL() + " group by 1,2 "
                    + ") z on z.pol_type_id = e.pol_type_id "
                    + "group by e.pol_type_id,e.description order by e.pol_type_id";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public String getStTime() {
        return stTime;
    }

    public void setStTime(String stTime) {
        this.stTime = stTime;
    }

    public DTOList EXCEL_CUSTOMER() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" e.ent_id,e.ent_name,e.short_name,e.address,e.gl_code,';'||e.rc_no as norekening,"
                + "a.vs_description as category,b.vs_description as ref1,c.vs_description as ref2,e.tax_code,e.tax_file, "
                + "(case when e.business_source_code is null then 'Direct' else d.vs_description end ) as klasifikasi ");

        sqa.addQuery(" from ent_master e "
                + "left join s_valueset a on a.vs_code = e.category1 and a.vs_group = 'ASK_BUS_SOURCE' "
                + "left join s_valueset b on b.vs_code = e.ref1 and b.vs_group = 'COMP_TYPE' "
                + "left join s_company_group c on c.vs_code::text = e.ref2 "
                + "left join s_valueset d on d.vs_code = e.business_source_code and d.vs_group = 'BUSINESS_SOURCE_CODE' ");

        sqa.addClause(" coalesce(e.active_flag,'Y') <> 'N' ");

        if (entryDateFrom != null) {
            sqa.addClause("date_trunc('day',e.create_date) >= ?");
            sqa.addPar(entryDateFrom);
        }

        if (entryDateTo != null) {
            sqa.addClause("date_trunc('day',e.create_date) <= ?");
            sqa.addPar(entryDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("e.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stCustStatus != null) {
            sqa.addClause("e.customer_status = ?");
            sqa.addPar(stCustStatus);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stNama != null) {
            sqa.addClause("upper(e.ent_name) like ?");
            sqa.addPar("%" + stNama.toUpperCase() + "%");
        }

        final String sql = sqa.getSQL() + " order by e.ent_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_CUSTOMER() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("entid");
            row0.createCell(1).setCellValue("klasifikasi");
            row0.createCell(2).setCellValue("nama");
            row0.createCell(3).setCellValue("singkatan");
            row0.createCell(4).setCellValue("alamat");
            row0.createCell(5).setCellValue("kategory");
            row0.createCell(6).setCellValue("jenis");
            row0.createCell(7).setCellValue("group");
            row0.createCell(8).setCellValue("glcode");
            row0.createCell(9).setCellValue("no rekening");
            row0.createCell(10).setCellValue("pajak");
            row0.createCell(11).setCellValue("npwp");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("klasifikasi"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("short_name"));
            if (h.getFieldValueByFieldNameST("address") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("address"));
            }
            row.createCell(5).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("category")));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("gl_code"));
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("norekening"));
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("tax_code"));
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("tax_file"));
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_JENIS() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;
        String sql2 = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" b.category1 as bus_source,TO_CHAR(approved_date, 'MM') as bulan,a.cc_code,a.cc_code_source,a.pol_type_id,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

            sqa.addQuery(" from ins_policies a  "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + " left join ent_master f on f.ent_id = a.prod_id  "
                    + " inner join ins_policy_types k on k.pol_type_id = a.pol_type_id ");

            sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (stStatus != null) {
                sqa.addClause("a.status = ?");
                sqa.addPar(stStatus);
            } else {
                sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("b.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (Tools.isYes(stABAFlag)) {
                sqa.addClause("a.ref12 = 'Y'");
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.create_who <> 'administrator'");
            }

            if (stMarketerOffID != null) {
                sqa.addClause("a.marketing_officer_who = ?");
                sqa.addPar(stMarketerOffID);
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            sql = "select z.pol_type_id,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,"
                    + " coalesce(premi_total_adisc,0) as premi_total_adisc,sum(amount) as amount from ( "
                    + " select e.pol_type_id,e.description,"
                    + " sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + " sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + " sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + " sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + " sum(premi-diskon) as premi_total_adisc "
                    + " from ins_policy_types e "
                    + " left join ( "
                    + sqa.getSQL() + " group by 1,2,3,4,5 "
                    + " ) z on z.pol_type_id = e.pol_type_id "
                    + " group by e.pol_type_id,e.description"
                    + " ) z left join ins_statistic_product a on a.pol_type_id = z.pol_type_id "
                    + " where z.premi_total_adisc <> 0 ";

//        if (getStBranch() != null) {
//            sql = sql + " and a.cc_code = ? ";
//            sqa.addPar(stBranch);
//        }

            sql = sql + " group by z.pol_type_id,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,premi_total_adisc"
                    + " order by z.pol_type_id";

            sql2 = " select z.bulan,z.cc_code,c.description as cabang,"
                    + " (case when z.cc_code = '80' then z.cc_code_source end) as cc_code_source,"
                    + " (case when z.cc_code = '80' then d.description end) as cabang_source,"
                    + " e.pol_type_id,e.description as cob,"
                    + " sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + " sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + " sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + " sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + " sum(premi-diskon) as premi_total_adisc "
                    + " from ins_policy_types e "
                    + " left join ( "
                    + sqa.getSQL() + " group by 1,2,3,4,5 "
                    + " ) z on z.pol_type_id = e.pol_type_id "
                    + " inner join gl_cost_center c on c.cc_code = z.cc_code "
                    + " left join gl_cost_center d on d.cc_code = z.cc_code_source "
                    + " group by 1,2,3,4,5,6,7 order by 1,2,4,6 ";

            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,bulan,cc_code,cc_code_source,pol_type_id,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                /*if (stPolicyTypeGroupID != null) {
                beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }*/

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,bulan,cc_code,cc_code_source,pol_type_id ";

                currentMonth = "select bus_source,TO_CHAR(approved_date, 'MM') as bulan,a.cc_code,a.cc_code_source,a.pol_type_id,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.approved_date,a.cc_code,a.cc_code_source,a.pol_type_id,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.active_flag='Y' and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }

                /*if (stPolicyTypeGroupID != null) {
                currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }*/

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,bulan,cc_code,cc_code_source,pol_type_id,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                /*if (stPolicyTypeGroupID != null) {
                beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }*/

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,bulan,cc_code,cc_code_source,pol_type_id ";
            }


            sqa.addSelect(" bus_source,bulan,cc_code,cc_code_source,pol_type_id,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.approved_date,a.cc_code,a.cc_code_source,a.pol_type_id ) a group by 1,2,3,4,5 ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            sql = "select z.pol_type_id,z.cob,nd_comm1,nd_comm2,nd_comm3,nd_comm4,"
                    + " coalesce(premi_total_adisc,0) as premi_total_adisc,sum(amount) as amount from ( "
                    + " select e.pol_type_id,e.description as cob,"
                    + " sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                    + " sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                    + " sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                    + " sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                    + " sum(premi) as premi_total_adisc "
                    + " from ins_policy_types e "
                    + " left join ( "
                    + sqa.getSQL() + " group by a.bus_source,a.bulan,a.cc_code,a.cc_code_source,a.pol_type_id "
                    + " ) z on z.pol_type_id = e.pol_type_id "
                    + " group by e.pol_type_id,e.description"
                    + " ) z left join ins_statistic_product a on a.pol_type_id = z.pol_type_id "
                    + " where z.premi_total_adisc <> 0 ";

//        if (getStBranch() != null) {
//            sql = sql + " and a.cc_code = ? ";
//            sqa.addPar(stBranch);
//        }

            sql = sql + " group by z.pol_type_id,z.cob,nd_comm1,nd_comm2,nd_comm3,nd_comm4,premi_total_adisc "
                    + " order by z.pol_type_id";

            sql2 = " select z.bulan,z.cc_code,c.description as cabang,"
                    + " (case when z.cc_code = '80' then z.cc_code_source end) as cc_code_source,"
                    + " (case when z.cc_code = '80' then d.description end) as cabang_source,"
                    + " e.pol_type_id,e.description as cob,"
                    + " sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                    + " sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                    + " sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                    + " sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                    + " sum(premi) as premi_total_adisc "
                    + " from ins_policy_types e "
                    + " left join ( "
                    + sqa.getSQL() + " group by a.bus_source,a.bulan,a.cc_code,a.cc_code_source,a.pol_type_id "
                    + " ) z on z.pol_type_id = e.pol_type_id "
                    + " inner join gl_cost_center c on c.cc_code = z.cc_code "
                    + " left join gl_cost_center d on d.cc_code = z.cc_code_source "
                    + " group by 1,2,3,4,5,6,7 order by 1,2,4,6 ";

        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        if (stBranch == null) {
            final SQLAssembler sqa2 = new SQLAssembler();

            sqa2.addSelect(" sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) as inward ");

            sqa2.addQuery(" from ins_pol_inward c "
                    + " inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id ");

            sqa2.addClause("c.approved_flag = 'Y'");
            sqa2.addClause("(c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))");

            if (policyDateFrom != null) {
                sqa2.addClause("date_trunc('day',c.mutation_date) >= ? ");
                //sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa2.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa2.addClause("date_trunc('day',c.mutation_date) <= ? ");
                //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa2.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa2.addClause("date_trunc('day',c.mutation_date) >= ? ");
                //sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
                sqa2.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa2.addClause("date_trunc('day',c.mutation_date) <= ? ");
                //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
                sqa2.addPar(appDateTo);
            }

            /*if (stPolicyTypeID != null) {
            sqa2.addClause("c.attr_pol_type_id = ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
            sqa2.addPar(stPolicyTypeID);
            }*/

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa2.addClause("c.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa2.addClause("c.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            String sqlinw = sqa2.getSQL();

            final DTOList m = ListUtil.getDTOListFromQuery(
                    sqlinw,
                    sqa2.getPar(),
                    HashDTO.class);

            SessionManager.getInstance().getRequest().setAttribute("RPS", m);
        }

        return l;
    }

    public void EXPORT_REKAP_JENIS() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("cob");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        final DTOList listinw;
        HashDTO g = null;

        if (stBranch == null) {
            listinw = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPS");
            g = (HashDTO) listinw.get(0);
        }

        String jenpol = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow rows = sheet.createRow(0);
            if (stStatus != null) {
                rows.createCell(0).setCellValue("STATUS : " + getStStatus().toUpperCase());
            }

            HSSFRow row1 = sheet.createRow(1);
            if (policyDateFrom != null || policyDateTo != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));
            } else {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getAppDateFrom()) + " sd " + DateUtil.getDateStr(getAppDateTo()));
            }

            HSSFRow row2 = sheet.createRow(2);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStBranch().toUpperCase());
            }

            HSSFRow row0 = sheet.createRow(4);
            row0.createCell(0).setCellValue("cob");
            row0.createCell(1).setCellValue("jenis");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("jumlah");
            row0.createCell(7).setCellValue("target");

            final Date perStart = getPolicyDateFrom();
            final Date perEnd = getPolicyDateTo();

            DateTime startDate = new DateTime(perStart);
            DateTime endDate = new DateTime(perEnd);
            Months m = Months.monthsBetween(startDate, endDate);
            int mon = m.getMonths() + 1;

            BigDecimal a = new BigDecimal(12000);
            BigDecimal b = new BigDecimal(1000);
            String month = String.valueOf(mon);
            BigDecimal c = new BigDecimal(month);
            BigDecimal target = h.getFieldValueByFieldNameBD("amount");
            target = BDUtil.roundUp(BDUtil.div(target, a));
            target = BDUtil.roundUp(BDUtil.mul(target, b));

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 5);
            row.createCell(0).setCellValue(jenpol);
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cob")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("amount") != null) {
                row.createCell(7).setCellValue(BDUtil.mul(target, c).doubleValue());
            }
        }

        if (stBranch == null) {
            HSSFRow rowInward = sheet.createRow(list.size() + 5);
            rowInward.createCell(1).setCellValue("INWARD");
            if (g.getFieldValueByFieldNameBD("inward") != null) {
                rowInward.createCell(6).setCellValue(g.getFieldValueByFieldNameBD("inward").doubleValue());
            }
        }

        //bikin sheet
        HSSFSheet sheet2 = wb.createSheet("detil_cob");

        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");
        for (int i = 0; i < list2.size(); i++) {
            HashDTO h = (HashDTO) list2.get(i);

            HSSFRow rows = sheet2.createRow(0);
            if (stStatus != null) {
                rows.createCell(0).setCellValue("STATUS : " + getStStatus().toUpperCase());
            }

            HSSFRow row1 = sheet2.createRow(1);
            if (policyDateFrom != null || policyDateTo != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));
            } else {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getAppDateFrom()) + " sd " + DateUtil.getDateStr(getAppDateTo()));
            }

            HSSFRow row2 = sheet2.createRow(2);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStBranch().toUpperCase());
            }

            HSSFRow row0 = sheet2.createRow(4);
            row0.createCell(0).setCellValue("bulan");
            row0.createCell(1).setCellValue("koda");
            row0.createCell(2).setCellValue("cabang");
            row0.createCell(3).setCellValue("koda_source");
            row0.createCell(4).setCellValue("cabang_source");
            row0.createCell(5).setCellValue("cob");
            row0.createCell(6).setCellValue("jenis");
            row0.createCell(7).setCellValue("umum");
            row0.createCell(8).setCellValue("pemda");
            row0.createCell(9).setCellValue("perusda");
            row0.createCell(10).setCellValue("bpd");
            row0.createCell(11).setCellValue("jumlah");

            final Date perStart = getPolicyDateFrom();
            final Date perEnd = getPolicyDateTo();

            DateTime startDate = new DateTime(perStart);
            DateTime endDate = new DateTime(perEnd);
            Months m = Months.monthsBetween(startDate, endDate);
            int mon = m.getMonths() + 1;

            BigDecimal a = new BigDecimal(12000);
            BigDecimal b = new BigDecimal(1000);
            String month = String.valueOf(mon);
            BigDecimal c = new BigDecimal(month);
            BigDecimal target = h.getFieldValueByFieldNameBD("amount");
            target = BDUtil.roundUp(BDUtil.div(target, a));
            target = BDUtil.roundUp(BDUtil.mul(target, b));

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            //bikin isi cell
            HSSFRow row = sheet2.createRow(i + 5);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("bulan"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("cc_code_source"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("cabang_source"));
            row.createCell(5).setCellValue(jenpol);
            row.createCell(6).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cob")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_CABOUTLET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" e.category1 as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

            sqa.addQuery(" from ins_policies a "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + " left join ent_master e on e.ent_id = a.entity_id   "
                    + " left join ent_master f on f.ent_id = a.prod_id  ");

            sqa.addClause("a.active_flag='Y'");
            sqa.addClause("a.effective_flag='Y'");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                        + "coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1, "
                        + "coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2, "
                        + "coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3, "
                        + "coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4, "
                        + "coalesce(sum(premi-diskon),0) as premi_total_adisc  "
                        + "from s_region e "
                        + "left join ( "
                        + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                        + ") z on z.region_id = e.region_id "
                        + " where e.active_flag = 'Y' "
                        + " group by e.cc_code,e.desc2,e.region_code2 "
                        + " order by e.cc_code,e.region_code2 ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                            + "coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1, "
                            + "coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2, "
                            + "coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3, "
                            + "coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4, "
                            + "coalesce(sum(premi-diskon),0) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( "
                            + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                            + ") z on z.region_id_source = e.region_id "
                            + " where e.active_flag = 'Y' " //and e.cc_code not in ('80') "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                            + "coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1, "
                            + "coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2, "
                            + "coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3, "
                            + "coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4, "
                            + "coalesce(sum(premi-diskon),0) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( "
                            + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                            + ") z on z.region_id = e.region_id "
                            + " where e.active_flag = 'Y' "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                }
            }
            /*FILTERADD*/
        } else {
            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";

                currentMonth = "select bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";
            }


            sqa.addSelect(" bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source "
                        + ") a group by a.bus_source,a.cc_code,a.region_id,a.cc_code_source,a.region_id_source ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                        + "coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1, "
                        + "coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2, "
                        + "coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3, "
                        + "coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4, "
                        + "coalesce(sum(premi),0) as premi_total_adisc  "
                        + "from s_region e "
                        + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                        + ") z on z.region_id = e.region_id "
                        + " where e.active_flag = 'Y' "
                        + " group by e.cc_code,e.desc2,e.region_code2 "
                        + " order by e.cc_code,e.region_code2 ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                            + "coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1, "
                            + "coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2, "
                            + "coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3, "
                            + "coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4, "
                            + "coalesce(sum(premi),0) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                            + ") z on z.region_id_source = e.region_id "
                            + " where e.active_flag = 'Y' " //and e.cc_code not in ('80') "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,e.region_code2,e.desc2 as description, "
                            + "coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1, "
                            + "coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2, "
                            + "coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3, "
                            + "coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4, "
                            + "coalesce(sum(premi),0) as premi_total_adisc  "
                            + "from s_region e "
                            + "left join ( " + sqa.getSQL() + " group by 1,2,3,4,5 "
                            + ") z on z.region_id = e.region_id "
                            + " where e.active_flag = 'Y' "
                            + " group by e.cc_code,e.desc2,e.region_code2 "
                            + " order by e.cc_code,e.region_code2 ";
                }
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_CABOUTLET() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row0 = sheet.createRow(0);
            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    row0.createCell(0).setCellValue("UNIT NON AKS");
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    row0.createCell(0).setCellValue("UNIT AKS");
                }
            }

            HSSFRow row1 = sheet.createRow(1);
            if (getPolicyDateFrom() != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));
            }
            if (getAppDateFrom() != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getAppDateFrom()) + " sd " + DateUtil.getDateStr(getAppDateTo()));
            }

            HSSFRow row2 = sheet.createRow(2);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow rows = sheet.createRow(3);
            rows.createCell(0).setCellValue("cabang");
            rows.createCell(1).setCellValue("outlet");
            rows.createCell(2).setCellValue("description");
            rows.createCell(3).setCellValue("umum");
            rows.createCell(4).setCellValue("pemda");
            rows.createCell(5).setCellValue("perusda");
            rows.createCell(6).setCellValue("bpd");
            rows.createCell(7).setCellValue("jumlah");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 4);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("region_code2"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_CAB() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;
        String sql2 = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect(" b.category1 as bus_source,a.cc_code,"
                    + "(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

            sqa.addQuery(" from ins_policies a  "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + " left join ent_master f on f.ent_id = a.prod_id  "
                    + " inner join ins_policy_types k on k.pol_type_id = a.pol_type_id ");

            sqa.addClause("a.active_flag='Y'");
            sqa.addClause("a.effective_flag='Y'");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (stStatus != null) {
                sqa.addClause("a.status = ?");
                sqa.addPar(stStatus);
            } else {
                sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            }

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (periodFrom != null) {
                sqa.addClause("date_trunc('day',a.period_start) >= ?");
                sqa.addPar(periodFrom);
            }

            if (periodTo != null) {
                sqa.addClause("date_trunc('day',a.period_start) <= ?");
                sqa.addPar(periodTo);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("b.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stMarketerOffID != null) {
                sqa.addClause("a.marketing_officer_who = ?");
                sqa.addPar(stMarketerOffID);
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.create_who <> 'administrator'");
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            if (stBussinessPolType == null) {
                sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                        + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                        + " select e.cc_code,e.description,"
                        + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                        + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                        + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                        + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                        + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                        + " from gl_cost_center e "
                        + " left join ( "
                        + sqa.getSQL() + " group by b.category1,a.cc_code,a.cc_code_source "
                        + " ) z on z.cc_code = e.cc_code "
                        + " group by e.cc_code,e.description"
                        + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                        + " where a.jenis = 'gs'";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                            + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                            + " select e.cc_code,e.description,"
                            + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                            + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                            + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                            + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                            + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                            + " from gl_cost_center e "
                            + " left join ( "
                            + sqa.getSQL() + " group by b.category1,a.cc_code,a.cc_code_source "
                            + " ) z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                            + " group by e.cc_code,e.description"
                            + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                            + " where a.jenis = 'gs'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                            + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                            + " select e.cc_code,e.description,"
                            + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                            + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                            + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                            + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                            + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                            + " from gl_cost_center e "
                            + " left join ( "
                            + sqa.getSQL() + " group by b.category1,a.cc_code,a.cc_code_source "
                            + " ) z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                            + " group by e.cc_code,e.description"
                            + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                            + " where a.jenis = 'gs'";
                }
            }

            if (getPolicyDateFrom() != null) {
                sql = sql + " and a.years = '" + DateUtil.getYear(getPolicyDateFrom()) + "'";
            }
            if (getAppDateFrom() != null) {
                sql = sql + " and a.years = '" + DateUtil.getYear(getAppDateFrom()) + "'";
            }

            /*
            String sql = "select z.cc_code,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,"
            + " premi_total_adisc,sum(amount) as amount from ( "
            + " select e.cc_code,e.description,"
            + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
            + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
            + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
            + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
            + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
            + " from gl_cost_center e "
            + " left join ( "
            + sqa.getSQL() + " group by b.category1,a.cc_code "
            + " ) z on z.cc_code = e.cc_code "
            + " group by e.cc_code,e.description"
            + " ) z left join ins_statistic_product_cab a on a.cc_code = z.cc_code ";

            if (getPolicyDateFrom() != null) {
            sql = sql + " where a.years = '" + DateUtil.getYear(getPolicyDateFrom()) + "'";
            }
            if (getAppDateFrom() != null) {
            sql = sql + " where a.years = '" + DateUtil.getYear(getAppDateFrom()) + "'";
            }
             */

            sql = sql + " group by z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,z.premi_total_adisc "
                    + " order by z.cc_code";

            sql2 = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                    + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                    + " select e.cc_code,e.description,"
                    + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                    + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                    + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                    + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                    + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                    + " from gl_cost_center e "
                    + " left join ( "
                    + sqa.getSQL() + " group by 1,2,3 "
                    + " ) z on z.cc_code_source = e.cc_code "
                    + " group by e.cc_code,e.description"
                    + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                    + " where a.jenis = 'gs'"
                    + " group by z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,z.premi_total_adisc "
                    + " order by z.cc_code";

            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as bus_source,cc_code,(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by 1,2,3 ";

                currentMonth = "select bus_source,a.cc_code,a.cc_code_source,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.cc_code,(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as bus_source,a.cc_code,(case when a.cc_code = '80' then a.cc_code_source else a.cc_code end) as cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by 1,2,3 ";
            }


            sqa.addSelect(" bus_source,a.cc_code,a.cc_code_source,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by 1,2,3 ) a group by 1,2,3 ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            long lPeriodFrom;
            long lPeriodTo;

            if (getPolicyDateFrom() != null) {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateFrom()));
            } else {
                lPeriodFrom = Long.parseLong(DateUtil.getMonth2Digit(getAppDateFrom()));
            }

            if (getPolicyDateFrom() != null) {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getPolicyDateTo()));
            } else {
                lPeriodTo = Long.parseLong(DateUtil.getMonth2Digit(getAppDateTo()));
            }

            String plist = GLUtil.getPeriodList(lPeriodFrom, lPeriodTo, "a.bln", "+");

            if (stBussinessPolType == null) {
                sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                        + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                        + " select e.cc_code,e.description,"
                        + " coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1,"
                        + " coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2,"
                        + " coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3,"
                        + " coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4,"
                        + " coalesce(sum(premi),0) as premi_total_adisc "
                        + " from gl_cost_center e "
                        + " left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + " ) z on z.cc_code = e.cc_code "
                        + " group by e.cc_code,e.description"
                        + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                        + " where a.jenis = 'gs'";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                            + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                            + " select e.cc_code,e.description,"
                            + " coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1,"
                            + " coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2,"
                            + " coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3,"
                            + " coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4,"
                            + " coalesce(sum(premi),0) as premi_total_adisc "
                            + " from gl_cost_center e "
                            + " left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + " ) z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                            + " group by e.cc_code,e.description"
                            + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                            + " where a.jenis = 'gs'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                            + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                            + " select e.cc_code,e.description,"
                            + " coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1,"
                            + " coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2,"
                            + " coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3,"
                            + " coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4,"
                            + " coalesce(sum(premi),0) as premi_total_adisc "
                            + " from gl_cost_center e "
                            + " left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + " ) z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                            + " group by e.cc_code,e.description"
                            + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                            + " where a.jenis = 'gs'";
                }
            }

            if (getPolicyDateFrom() != null) {
                sql = sql + " and a.years = '" + DateUtil.getYear(getPolicyDateFrom()) + "'";
            }
            if (getAppDateFrom() != null) {
                sql = sql + " and a.years = '" + DateUtil.getYear(getAppDateFrom()) + "'";
            }

            sql = sql + " group by z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,z.premi_total_adisc "
                    + " order by z.cc_code";

            sql2 = "select z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,"
                    + " z.premi_total_adisc,sum(" + plist + ") as amount from ( "
                    + " select e.cc_code,e.description,"
                    + " coalesce(sum(getkoas(bus_source='1',premi)),0) as nd_comm1,"
                    + " coalesce(sum(getkoas(bus_source='2',premi)),0) as nd_comm2,"
                    + " coalesce(sum(getkoas(bus_source='3',premi)),0) as nd_comm3,"
                    + " coalesce(sum(getkoas(bus_source='4',premi)),0) as nd_comm4,"
                    + " coalesce(sum(premi),0) as premi_total_adisc "
                    + " from gl_cost_center e "
                    + " left join ( "
                    + sqa.getSQL() + " group by 1,2,3 "
                    + " ) z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                    + " group by e.cc_code,e.description"
                    + " ) z left join ins_statistic_target_perbulan a on a.cc_code = z.cc_code "
                    + " where a.jenis = 'gs'"
                    + " group by z.cc_code,z.description,z.nd_comm1,z.nd_comm2,z.nd_comm3,z.nd_comm4,z.premi_total_adisc "
                    + " order by z.cc_code";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        final SQLAssembler sqa2 = new SQLAssembler();

        sqa2.addSelect(" sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) as inward ");

        sqa2.addQuery(" from ins_pol_inward c "
                + " inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id ");

        sqa2.addClause("c.approved_flag = 'Y'");
        sqa2.addClause("(c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))");

        if (policyDateFrom != null) {
            sqa2.addClause("date_trunc('day',c.mutation_date) >= ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
            sqa2.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa2.addClause("date_trunc('day',c.mutation_date) <= ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
            sqa2.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa2.addClause("date_trunc('day',c.mutation_date) >= ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) >= ?";
            sqa2.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa2.addClause("date_trunc('day',c.mutation_date) <= ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
            sqa2.addPar(appDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa2.addClause("c.attr_pol_type_id = ? ");
            //sql = sql + " and date_trunc('day',c.mutation_date) <= ?";
            sqa2.addPar(stPolicyTypeID);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa2.addClause("c.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa2.addClause("c.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        String sqlinward = sqa2.getSQL();

        final DTOList m = ListUtil.getDTOListFromQuery(
                sqlinward,
                sqa2.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPS", m);

        return l;
    }

    public void EXPORT_REKAP_CAB() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");
        final DTOList listS = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPS");

        HashDTO g = (HashDTO) listS.get(0);

        for (int i = 0; i < list2.size(); i++) {
            HashDTO h = (HashDTO) list2.get(i);

            HSSFRow row0 = sheet.createRow(0);
            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    row0.createCell(0).setCellValue("UNIT NON AKS");
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    row0.createCell(0).setCellValue("UNIT AKS");
                }
            }

            HSSFRow row1 = sheet.createRow(1);
            if (getPolicyDateFrom() != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));
            }
            if (getAppDateFrom() != null) {
                row1.createCell(0).setCellValue(DateUtil.getDateStr(getAppDateFrom()) + " sd " + DateUtil.getDateStr(getAppDateTo()));
            }

            HSSFRow row2 = sheet.createRow(2);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            HSSFRow row3 = sheet.createRow(3);
            if (stStatus != null) {
                row3.createCell(0).setCellValue("STATUS : " + getStStatus().toUpperCase());
            }

            //bikin header
            HSSFRow rows = sheet.createRow(4);
            rows.createCell(0).setCellValue("koda");
            rows.createCell(1).setCellValue("cabang");
            rows.createCell(2).setCellValue("umum");
            rows.createCell(3).setCellValue("pemda");
            rows.createCell(4).setCellValue("perusda");
            rows.createCell(5).setCellValue("bpd");
            rows.createCell(6).setCellValue("jumlah");
            if (stBussinessPolType == null) {
                rows.createCell(7).setCellValue("target");
            }

//            final Date perStart = getPolicyDateFrom();
//            final Date perEnd = getPolicyDateTo();
//
//            DateTime startDate = new DateTime(perStart);
//            DateTime endDate = new DateTime(perEnd);
//            Months m = Months.monthsBetween(startDate, endDate);
//            int mon = m.getMonths() + 1;
//
//            BigDecimal a = new BigDecimal(12000);
//            BigDecimal b = new BigDecimal(1000);
//            String month = String.valueOf(mon);
//            BigDecimal c = new BigDecimal(month);
//            BigDecimal target = h.getFieldValueByFieldNameBD("amount");
//            target = BDUtil.roundUp(BDUtil.div(target, a));
//            target = BDUtil.roundUp(BDUtil.mul(target, b));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 5);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (stBussinessPolType == null) {
                if (h.getFieldValueByFieldNameBD("amount") != null) {
                    row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("amount").doubleValue());
                }
            }
//            if (h.getFieldValueByFieldNameBD("amount") != null) {
//                row.createCell(7).setCellValue(BDUtil.mul(target, c).doubleValue());
//            }
        }

        if (stBussinessPolType == null) {
            HSSFRow rowInward = sheet.createRow(list.size() + 5);
            rowInward.createCell(1).setCellValue("INWARD");
            if (g.getFieldValueByFieldNameBD("inward") != null) {
                rowInward.createCell(6).setCellValue(g.getFieldValueByFieldNameBD("inward").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_YEAR() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	substr(a.policy_date::text,6,2) as month,a.cc_code,"
                + "sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(d.disc_amount*a.ccy_rate,0)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        final String sql = "select e.cc_code,e.description,"
                + "sum(getkoas(month='01',(premi-diskon))) as jan,"
                + "sum(getkoas(month='02',(premi-diskon))) as feb,"
                + "sum(getkoas(month='03',(premi-diskon))) as mar,"
                + "sum(getkoas(month='04',(premi-diskon))) as apr,"
                + "sum(getkoas(month='05',(premi-diskon))) as mei,"
                + "sum(getkoas(month='06',(premi-diskon))) as jun,"
                + "sum(getkoas(month='07',(premi-diskon))) as jul,"
                + "sum(getkoas(month='08',(premi-diskon))) as aug,"
                + "sum(getkoas(month='09',(premi-diskon))) as sep,"
                + "sum(getkoas(month='10',(premi-diskon))) as okt,"
                + "sum(getkoas(month='11',(premi-diskon))) as nov,"
                + "sum(getkoas(month='12',(premi-diskon))) as des,"
                + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + "from gl_cost_center e "
                + "left join ( "
                + sqa.getSQL() + " group by substr(a.policy_date::text,6,2),a.cc_code "
                + ") z on z.cc_code = e.cc_code "
                + "group by e.cc_code,e.description order by e.cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_YEAR() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cc_code");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("jan");
            row0.createCell(3).setCellValue("feb");
            row0.createCell(4).setCellValue("mar");
            row0.createCell(5).setCellValue("apr");
            row0.createCell(6).setCellValue("mei");
            row0.createCell(7).setCellValue("jun");
            row0.createCell(8).setCellValue("jul");
            row0.createCell(9).setCellValue("aug");
            row0.createCell(10).setCellValue("sep");
            row0.createCell(11).setCellValue("okt");
            row0.createCell(12).setCellValue("nov");
            row0.createCell(13).setCellValue("des");
            row0.createCell(14).setCellValue("jumlah");


            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("jan").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("feb").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("mar").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("apr").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("mei").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("jun").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("jul").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("aug").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("sep").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("okt").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("nov").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("des").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public String getStTax() {
        return stTax;
    }

    public void setStTax(String stTax) {
        this.stTax = stTax;
    }

    public String getStTaxDesc() {
        return stTaxDesc;
    }

    public void setStTaxDesc(String stTaxDesc) {
        this.stTaxDesc = stTaxDesc;
    }

    public DTOList EXCEL_FOXPRO() throws Exception {

        String jenpol = null;
        if (stPolicyTypeID != null) {

            jenpol = null;
            if (stPolicyTypeID.length() == 1) {
                jenpol = "0" + stPolicyTypeID;
            } else {
                jenpol = stPolicyTypeID;
            }

        }

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.entity_id as ent_id,b.ent_name,b.gl_code,substr(a.nopol,5,2) as cc_code,c.description,substr(a.nopol,2,1) as bus_source,substr(a.tglpol::text,1,4) as tahun, sum(preto-diskon) as preto,"
                + "sum(biapol) as biapol,sum(biamat) as biamat, sum(komisi) as komisi,sum(diskon) as diskon,sum(h_fee) as h_fee, sum(b_fee) as b_fee ");

        sqa.addQuery("from aba_produk a  "
                + "left join ent_master b on b.ent_id = a.entity_id "
                + "left join gl_cost_center c on c.cc_code = substr(a.nopol,5,2) "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.flag='Y'");
        sqa.addClause("a.pol_id is null");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.tglpol) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.tglpol) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("substr(a.nopol,3,2) = ?");
            sqa.addPar(jenpol);
        }

        if (stBranch != null) {
            sqa.addClause("c.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("b.bus_source = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("b.ref1 in " + type);
//            sqa.addPar(type);
        }

        final String sql = "select cc_code,description,ent_id,ent_name,a.gl_code,"
                + "sum(getkoas(tahun='2006',preto-diskon)) as th2006,"
                + "sum(getkoas(tahun='2007',preto-diskon)) as th2007,"
                + "sum(getkoas(tahun='2008',preto-diskon)) as th2008,"
                + "sum(getkoas(tahun='2009',preto-diskon)) as th2009,"
                + "sum(getkoas(tahun='2010',preto-diskon)) as th2010 from ( "
                + sqa.getSQL() + " group by a.entity_id,substr(a.nopol,5,2),substr(a.nopol,2,1),substr(a.tglpol::text,1,4),b.ent_name,b.gl_code,c.description "
                + " ) a "
                + "group by cc_code,description,ent_id,ent_name,a.gl_code order by ent_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_FOXPRO() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("CODE");
            row0.createCell(1).setCellValue("DAERAH");
            row0.createCell(2).setCellValue("ID");
            row0.createCell(3).setCellValue("GL CODE");
            row0.createCell(4).setCellValue("NAMA BPD");
            row0.createCell(5).setCellValue("S/D " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase() + " 2006");
            row0.createCell(6).setCellValue("S/D " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase() + " 2007");
            row0.createCell(7).setCellValue("S/D " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase() + " 2008");
            row0.createCell(8).setCellValue("S/D " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase() + " 2009");
            row0.createCell(9).setCellValue("S/D " + DateUtil.getMonth(getPolicyDateTo()).toUpperCase() + " 2010");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("ent_id").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("gl_code"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("th2006").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("th2007").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("th2008").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("th2009").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("th2010").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public Date getRestFrom() {
        return restFrom;
    }

    public void setRestFrom(Date restFrom) {
        this.restFrom = restFrom;
    }

    public Date getRestTo() {
        return restTo;
    }

    public void setRestTo(Date restTo) {
        this.restTo = restTo;
    }

    public String getStCompTypeID() {
        return stCompTypeID;
    }

    public void setStCompTypeID(String stCompTypeID) {
        this.stCompTypeID = stCompTypeID;
    }

    public String getStCompTypeName() {
        return stCompTypeName;
    }

    public void setStCompTypeName(String stCompTypeName) {
        this.stCompTypeName = stCompTypeName;
    }

    public String getStCreditID() {
        return stCreditID;
    }

    public void setStCreditID(String stCreditID) {
        this.stCreditID = stCreditID;
    }

    public String getStCreditName() {
        return stCreditName;
    }

    public void setStCreditName(String stCreditName) {
        this.stCreditName = stCreditName;
    }

    public String getStItemClaimID() {
        return stItemClaimID;
    }

    public void setStItemClaimID(String stItemClaimID) {
        this.stItemClaimID = stItemClaimID;
    }

    public String getStItemClaimName() {
        return stItemClaimName;
    }

    public void setStItemClaimName(String stItemClaimName) {
        this.stItemClaimName = stItemClaimName;
    }

    public String getStWilayahID() {
        return stWilayahID;
    }

    public void setStWilayahID(String stWilayahID) {
        this.stWilayahID = stWilayahID;
    }

    public String getStWilayahName() {
        return stWilayahName;
    }

    public void setStWilayahName(String stWilayahName) {
        this.stWilayahName = stWilayahName;
    }

    public String getStKreasiID() {
        return stKreasiID;
    }

    public void setStKreasiID(String stKreasiID) {
        this.stKreasiID = stKreasiID;
    }

    public String getStKreasiName() {
        return stKreasiName;
    }

    public void setStKreasiName(String stKreasiName) {
        this.stKreasiName = stKreasiName;
    }

    public String getStReinsID() {
        return stReinsID;
    }

    public void setStReinsID(String stReinsID) {
        this.stReinsID = stReinsID;
    }

    public String getStReinsName() {
        return stReinsName;
    }

    public void setStReinsName(String stReinsName) {
        this.stReinsName = stReinsName;
    }

    public DTOList EXCEL_CLAUSULES() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.ins_clause_id,a.description,a.pol_type_id,a.shortdesc,a.cc_code ");

        sqa.addQuery(" from ins_clausules a ");

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        final String sql = sqa.getSQL() + " order by a.cc_code,a.ins_clause_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_CLAUSULES() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("id");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("pol_type_id");
            row0.createCell(3).setCellValue("shortdesc");
            row0.createCell(4).setCellValue("cc_code");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("ins_clause_id").doubleValue());
            if (h.getFieldValueByFieldNameST("description") != null) {
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            }
            if (h.getFieldValueByFieldNameBD("pol_type_id") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("shortdesc") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("shortdesc"));
            }
            if (h.getFieldValueByFieldNameST("cc_code") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }
    /*
    public DTOList EXCEL_LOSS_RATIO() throws Exception {
    final SQLAssembler sqa = new SQLAssembler();

    sqa.addSelect("	a.pol_id,a.pol_no,a.cc_code,a.period_start,a.period_end,a.policy_date,c.description," +
    "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as cust_name," +
    "getpremi2(b.entity_id=1,getpremi(a.status='ENDORSE',(a.insured_amount_e*a.ccy_rate),(a.insured_amount*a.ccy_rate))) as insured_amount," +
    "getpremi2(b.entity_id=1,(a.premi_total*a.ccy_rate)) as premi100," +
    "getpremi2(b.entity_id<>1,(b.premi_amt*a.ccy_rate)) as premi_ko," +
    "getpremi2(b.entity_id=1,(a.nd_pcost*a.ccy_rate)) as nd_pcost," +
    "getpremi2(b.entity_id=1,(a.nd_sfee*a.ccy_rate)) as nd_sfee," +
    "getpremi2(b.entity_id=1,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate))) as disc100," +
    "getpremi2(b.entity_id<>1,(b.disc_amount*a.ccy_rate)) as disc_ko," +
    "getpremi2(b.entity_id=1,((coalesce(a.nd_comm1,0)*a.ccy_rate) + (coalesce(a.nd_comm2,0)*a.ccy_rate) + (coalesce(a.nd_comm3,0)*a.ccy_rate) + (coalesce(a.nd_comm4,0)*a.ccy_rate))) as comm100," +
    "getpremi2(b.entity_id<>1,(b.comm_amount*a.ccy_rate)) as comm_ko," +
    "getpremi2(b.entity_id=1,((coalesce(a.nd_brok1,0)*a.ccy_rate) + (coalesce(a.nd_brok2,0)*a.ccy_rate))) as brok100," +
    "getpremi2(b.entity_id<>1,(b.broker_amount*a.ccy_rate)) as bfee_ko," +
    "getpremi2(b.entity_id=1,(coalesce(a.nd_hfee,0)*a.ccy_rate)) as hfee100," +
    "getpremi2(b.entity_id<>1,(b.hfee_amount*a.ccy_rate)) as hfee_ko ");

    sqa.addQuery(" from ins_policy a " +
    " left join ent_master e on e.ent_id = a.entity_id " +
    " inner join ins_pol_coins b on b.policy_id = a.pol_id " +
    " left join gl_cost_center c on c.cc_code = a.cc_code ");

    sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
    sqa.addClause("a.effective_flag='Y'");
    sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

    if (policyDateFrom!=null) {
    sqa.addClause("date_trunc('day',a.policy_date) >= ?");
    sqa.addPar(policyDateFrom);
    }

    if (policyDateTo!=null) {
    sqa.addClause("date_trunc('day',a.policy_date) <= ?");
    sqa.addPar(policyDateTo);
    }

    if (stBranch!=null) {
    sqa.addClause("a.cc_code = ?");
    sqa.addPar(stBranch);
    }

    if (stRegion!=null) {
    sqa.addClause("a.region_id = ?");
    sqa.addPar(stRegion);
    }

    if (stPolicyTypeID!=null) {
    sqa.addClause("a.pol_type_id = ?");
    sqa.addPar(stPolicyTypeID);
    }

    if (stCompanyID!=null) {
    sqa.addClause("e.ref2 = ?");
    sqa.addPar(stCompanyID);
    }

    final String sql = " select cc_code,description,period_start,period_end,policy_date,pol_id,pol_no,cust_name," +
    " sum(insured_amount) as insured_amount," +
    " sum(premi100) as premi100,sum(premi_ko) as premi_ko," +
    " sum(nd_pcost) as nd_pcost,sum(nd_sfee) as nd_sfee," +
    " sum(disc100) as disc100,sum(disc_ko) as disc_ko," +
    " sum(comm100) as comm100,sum(comm_ko) as comm_ko," +
    " sum(brok100) as brok100,sum(bfee_ko) as bfee_ko," +
    " sum(hfee100) as hfee100,sum(hfee_ko) as hfee_ko " +
    " from ( "+sqa.getSQL()+" order by a.pol_no,b.entity_id ) x " +
    " group by cc_code,description,pol_id,pol_no,period_start,period_end,policy_date,cust_name " +
    " order by cc_code,policy_date,pol_no ";

    final DTOList l = ListUtil.getDTOListFromQuery(
    sql,
    sqa.getPar(),
    HashDTO.class
    );

    SessionManager.getInstance().getRequest().setAttribute("RPT", l);

    return l;
    }

    public void EXPORT_LOSS_RATIO()  throws Exception {

    XSSFWorkbook wb = new XSSFWorkbook();

    //bikin sheet
    XSSFSheet sheet = wb.createSheet("new sheet");

    final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

    for (int i=0;i< list.size() ; i++){
    HashDTO h = (HashDTO) list.get(i);

    //bikin header3
    XSSFRow row3 = sheet.createRow(0);
    row3.createCell(0).setCellValue(getStCompanyName());

    //bikin header
    XSSFRow row0 = sheet.createRow(2);
    row0.createCell(0).setCellValue("cc_code");
    row0.createCell(1).setCellValue("period_start");
    row0.createCell(2).setCellValue("period_end");
    row0.createCell(3).setCellValue("policy_date");
    row0.createCell(4).setCellValue("pol_id");
    row0.createCell(5).setCellValue("pol_no");
    row0.createCell(6).setCellValue("cust_name");
    row0.createCell(7).setCellValue("insured_amount");
    row0.createCell(8).setCellValue("premi100");
    row0.createCell(9).setCellValue("premi_ko");
    row0.createCell(10).setCellValue("nd_pcost");
    row0.createCell(11).setCellValue("nd_sfee");
    row0.createCell(12).setCellValue("disc100");
    row0.createCell(13).setCellValue("disc_ko");
    row0.createCell(14).setCellValue("comm100");
    row0.createCell(15).setCellValue("comm_ko");
    row0.createCell(16).setCellValue("brok100");
    row0.createCell(17).setCellValue("bfee_ko");
    row0.createCell(18).setCellValue("hfee100");
    row0.createCell(19).setCellValue("hfee_ko");


    //bikin isi cell
    XSSFRow row = sheet.createRow(i+3);
    row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
    row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
    row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
    row.createCell(3).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
    row.createCell(4).setCellValue(String.valueOf(h.getFieldValueByFieldNameBD("pol_id")));
    row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
    row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
    if (h.getFieldValueByFieldNameBD("insured_amount")!=null)
    row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
    if (h.getFieldValueByFieldNameBD("premi100")!=null)
    row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("premi100").doubleValue());
    if (h.getFieldValueByFieldNameBD("premi_ko")!=null)
    row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi_ko").doubleValue());
    if (h.getFieldValueByFieldNameBD("nd_pcost")!=null)
    row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
    if (h.getFieldValueByFieldNameBD("nd_sfee")!=null)
    row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
    if (h.getFieldValueByFieldNameBD("disc100")!=null)
    row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("disc100").doubleValue());
    if (h.getFieldValueByFieldNameBD("disc_ko")!=null)
    row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("disc_ko").doubleValue());
    if (h.getFieldValueByFieldNameBD("comm100")!=null)
    row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("comm100").doubleValue());
    if (h.getFieldValueByFieldNameBD("comm_ko")!=null)
    row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("comm_ko").doubleValue());
    if (h.getFieldValueByFieldNameBD("brok100")!=null)
    row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("brok100").doubleValue());
    if (h.getFieldValueByFieldNameBD("bfee_ko")!=null)
    row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("bfee_ko").doubleValue());
    if (h.getFieldValueByFieldNameBD("hfee100")!=null)
    row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("hfee100").doubleValue());
    if (h.getFieldValueByFieldNameBD("hfee_ko")!=null)
    row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("hfee_ko").doubleValue());

    }

    SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    SessionManager.getInstance().getResponse().setHeader("Content-Disposition","attachment; filename="+ getStFileName()+".xlsx;");
    ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

    wb.write(sosStream);
    sosStream.flush();
    sosStream.close();
    }
     */

    /*
    public DTOList EXCEL_LOSS_RATIO_OLD() throws Exception {
    final SQLAssembler sqa = new SQLAssembler();

    sqa.addSelect("	a.cc_code as koda,c.description as cabang,substr(a.pol_no,1,16) as pol_no,d.ent_name as cust_name,b.ref1 as nama,"
    + "a.ccy_rate,a.period_start,a.period_end,"
    + "sum(case when a.status in ('POLICY','RENEWAL','HISTORY') "
    + "then getpremi(a.pol_type_id=21,b.refn4,b.insured_amount) else 0 end) as insured_amount,"
    + "sum(case when a.status in ('POLICY','RENEWAL','HISTORY') "
    + "then getpremi(a.pol_type_id=21,b.refn6,b.premi_total) else 0 end) as premi100,"
    + "sum(case when a.status in ('POLICY','RENEWAL','HISTORY') and a.cover_type_code in ('COINSOUT','COINSOUTSELF') "
    + "then getpremi(a.pol_type_id=21,b.refn2,0) else 0 end) as premiko, "
    + "sum(case when a.status in ('ENDORSE') and b.premi_total <> 0 "
    + "then (coalesce(b.refn6,b.premi_total)*a.ccy_rate) else 0 end) as endorse,"
    + "sum(case when a.status in ('CLAIM') and a.claim_status ='DLA' "
    + "then (a.claim_amount*a.ccy_rate) else 0 end) as claim ");

    sqa.addQuery(" from ins_policy a "
    + "inner join ins_pol_obj b on b.pol_id  = a.pol_id "
    + "left join gl_cost_center c on c.cc_code = a.cc_code "
    + "left join ent_master d on d.ent_id = a.entity_id "
    + "       left join ent_master f on f.ent_id = a.prod_id  ");

    sqa.addClause("(a.status in ('POLICY','RENEWAL','HISTORY') or (a.status = 'ENDORSE' and b.refn6 <> 0) or (a.status in ('CLAIM') and a.claim_status ='DLA'))");
    sqa.addClause("a.effective_flag='Y'");
    sqa.addClause("a.cc_code <> '00'");

    if (policyDateFrom != null) {
    sqa.addClause("date_trunc('day',a.policy_date) >= ?");
    sqa.addPar(policyDateFrom);
    }

    if (policyDateTo != null) {
    sqa.addClause("date_trunc('day',a.policy_date) <= ?");
    sqa.addPar(policyDateTo);
    }

    if (stBranch != null) {
    sqa.addClause("a.cc_code = ?");
    sqa.addPar(stBranch);
    }

    if (stRegion != null) {
    sqa.addClause("a.region_id = ?");
    sqa.addPar(stRegion);
    }

    if (stPolicyTypeGroupID != null) {
    sqa.addClause("a.ins_policy_type_grp_id = ?");
    sqa.addPar(stPolicyTypeGroupID);
    }

    if (stPolicyTypeID != null) {
    sqa.addClause("a.pol_type_id = ?");
    sqa.addPar(stPolicyTypeID);
    }

    if (stCompanyID != null) {
    sqa.addClause("d.ref2 = ?");
    sqa.addPar(stCompanyID);
    }

    if (stCompanyProdID != null) {
    sqa.addClause("f.ref2 = ?");
    sqa.addPar(stCompanyProdID);
    }

    final String sql = " select a.koda,a.cabang,a.period_start,a.period_end,a.pol_no,a.cust_name,a.nama,"
    + "(a.insured_amount*a.ccy_rate) as insured_amount,"
    + "(a.premi100*a.ccy_rate) as premi100,"
    + "(a.premiko*a.ccy_rate) as premiko,"
    + "(a.endorse*a.ccy_rate) as endorse,"
    + "(a.claim*a.ccy_rate) as claim from ( " + sqa.getSQL() + " group by a.cc_code,c.description,substr(a.pol_no,1,16),d.ent_name,b.ref1,a.period_start,a.period_end,a.ccy_rate "
    + " order by a.cc_code,substr(a.pol_no,1,16),b.ref1 ) a order by a.koda,a.pol_no,a.nama ";

    final DTOList l = ListUtil.getDTOListFromQuery(
    sql,
    sqa.getPar(),
    HashDTO.class);

    SessionManager.getInstance().getRequest().setAttribute("RPT", l);

    return l;
    }

    public DTOList EXCEL_LOSS_RATIO_OLD2() throws Exception {
    final SQLAssembler sqa = new SQLAssembler();

    String description = "a.cc_code,d.description as cabang,a.period_start,a.period_end,';'||substr(a.pol_no,1,16) as pol_no,c.ent_name,";

    String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0) else 0 end) as tsi, "
    + "sum(case when a.status in ('ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),0) else 0 end) as tsi_e, "
    + "sum(case when a.status in ('POLICY','RENEWAL') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),0) else 0 end) as premi, "
    + "sum(case when a.status in ('ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),0) else 0 end) as premi_e, "
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,0,coalesce(b.premi_amt*a.ccy_rate,0)) else 0 end) as premiko, "
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,"
    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
    + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,"
    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11) and a.pol_id = x.pol_id),0),"
    + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,"
    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
    + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,"
    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
    + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,"
    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
    + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
    if (getPolicyDateFrom() != null) {
    query = query + " and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
    }

    if (getPolicyDateTo() != null) {
    query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
    }
    query = query
    + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

    sqa.addSelect(query);

    sqa.addQuery(" from ins_policy a "
    + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
    + "inner join ent_master c on c.ent_id = a.entity_id "
    + "inner join gl_cost_center d on d.cc_code = a.cc_code and d.mv_zone is not null "
    + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id "
    + "inner join ent_master f on f.ent_id = a.prod_id  ");

    sqa.addClause("(a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))");
    sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
    sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

    if (stBranch != null) {
    sqa.addClause("a.cc_code = ?");
    sqa.addPar(stBranch);
    }

    if (stRegion != null) {
    sqa.addClause("a.region_id = ?");
    sqa.addPar(stRegion);
    }

    if (stPolicyTypeGroupID != null) {
    sqa.addClause("a.ins_policy_type_grp_id = ?");
    sqa.addPar(stPolicyTypeGroupID);
    }

    if (stPolicyTypeID != null) {
    sqa.addClause("a.pol_type_id = ?");
    sqa.addPar(stPolicyTypeID);
    }

    if (stCompanyID != null) {
    sqa.addClause("c.ref2 = ?");
    sqa.addPar(stCompanyID);
    }

    if (stCompanyProdID != null) {
    sqa.addClause("f.ref2 = ?");
    sqa.addPar(stCompanyProdID);
    }

    final String sql = " select a.cc_code as koda,a.cabang,a.period_start,a.period_end,a.pol_no,a.ent_name as cust_name,"
    + "sum(a.tsi+a.tsi_e) as insured,sum(a.premi) as premi100,sum(a.premi_e) as premi_e,"
    + "sum(a.premiko) as premiko,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,"
    + "sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,"
    + "sum(a.ppn) as nd_ppn,sum(a.claim) as claim from ( " + sqa.getSQL() + " group by 1,2,3,4,5,6 order by 1 "
    + " ) a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or premi_e <> 0 or premiko <> 0 or diskon <> 0 or komisi <> 0 or bfee <> 0 or hfee <> 0 or feebase <> 0 or ppn <> 0 or claim <> 0) "
    + "group by 1,2,3,4,5,6 order by 1,3 ";

    final DTOList l = ListUtil.getDTOListFromQuery(
    sql,
    sqa.getPar(),
    HashDTO.class);

    SessionManager.getInstance().getRequest().setAttribute("RPT", l);

    return l;
    }*/

    /*
    public void EXPORT_LOSS_RATIO() throws Exception {

    XSSFWorkbook wb = new XSSFWorkbook();

    //bikin sheet
    XSSFSheet sheet = wb.createSheet("new sheet");

    final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

    //        int norut = 0;
    for (int i = 0; i < list.size(); i++) {
    HashDTO h = (HashDTO) list.get(i);

    //bikin header3
    XSSFRow row3 = sheet.createRow(0);
    row3.createCell(0).setCellValue(getStCompanyName());

    //bikin header
    XSSFRow row0 = sheet.createRow(2);
    row0.createCell(0).setCellValue("koda");
    row0.createCell(1).setCellValue("cabang");
    row0.createCell(2).setCellValue("periode awal");
    row0.createCell(3).setCellValue("periode akhir");
    row0.createCell(4).setCellValue("polis");
    row0.createCell(5).setCellValue("tertanggung");
    //            row0.createCell(6).setCellValue("nomor");
    //            row0.createCell(7).setCellValue("nama");
    row0.createCell(6).setCellValue("tsi");
    row0.createCell(7).setCellValue("premi100");
    row0.createCell(8).setCellValue("premiko");
    row0.createCell(9).setCellValue("endorse");
    row0.createCell(10).setCellValue("claim");

    //            norut++;
    //
    //            if (i > 0) {
    //                HashDTO s = (HashDTO) list.get(i - 1);
    //                String nopol = s.getFieldValueByFieldNameST("pol_no");
    //                String nopol2 = h.getFieldValueByFieldNameST("pol_no");
    //                if (!nopol.equalsIgnoreCase(nopol2)) {
    //                    norut = 1;
    //                }
    //            }

    //bikin isi cell
    XSSFRow row = sheet.createRow(i + 3);
    row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("koda"));
    row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
    row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
    row.createCell(3).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
    row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
    row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
    //            row.createCell(6).setCellValue(norut);
    //            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("nama"));
    if (h.getFieldValueByFieldNameBD("insured") != null) {
    row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
    }
    if (h.getFieldValueByFieldNameBD("premi100") != null) {
    row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi100").doubleValue());
    }
    if (h.getFieldValueByFieldNameBD("premiko") != null) {
    row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("premiko").doubleValue());
    }
    if (h.getFieldValueByFieldNameBD("premi_e") != null) {
    row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi_e").doubleValue());
    }
    if (h.getFieldValueByFieldNameBD("claim") != null) {
    row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("claim").doubleValue());
    }
    }

    SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
    ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

    wb.write(sosStream);
    sosStream.flush();
    sosStream.close();
    }*/
    public DTOList APPROVAL_HISTORY() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "pol_no,a.change_date,a.change_who,approved_date,"
                + " approved_who,b.user_name as ref3,client_ip,a.password,b.password as ref4");

        sqa.addQuery("   from       ins_policy a "
                + " inner join s_users b on a.approved_who = b.user_id");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("b.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        final String sql = sqa.getSQL() + "   order by "
                + "      substr(pol_no,13,6)::bigint";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        //HashDTO.class

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_STATISTIK_MV() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.pol_id,b.ins_pol_obj_id,';'||a.pol_no as pol_no,e.ent_name,a.cust_name,b.ref9 as nama,b.ref4 as rangka,b.ref5 as mesin,b.ref1 as polisi,b.ref2d as merk,b.ref8 as type,b.ref7d as penggunaan,"
                + " a.ccy_rate as kurs,a.cc_code as cabang,b.ref3 as tahun,getpremi(a.status = 'ENDORSE',a.insured_amount_e,a.insured_amount) as insured_amount,b.insured_amount as insured_amount_obj,a.period_start,a.period_end,a.premi_total,b.premi_total as premi_total_obj,f.ins_risk_cat_code,f.description,"
                + " (a.nd_disc1+a.nd_disc2) as diskon,a.status,a.ccy as mata_uang,a.nd_comm1,a.nd_comm2,a.nd_comm3,a.nd_comm4,"
                + " a.nd_feebase1,a.nd_feebase2,a.nd_brok1,a.nd_brok2,a.nd_hfee, "
                + " (select sum(amount)  from ins_pol_deduct z "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_clm_caus_id in (3840,3733)) as deduct, "
                + "(select string_agg(l.description,'|') "
                + "from ins_cover l "
                + "inner join ins_pol_cover z on z.ins_cover_id = l.ins_cover_id "
                + "where z.ins_pol_obj_id = b.ins_pol_obj_id) as jaminan1 " /*
                + " (select cekstatus(x.ins_cover_id = '2',q.description) "
                + " from ins_pol_obj z "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '2' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan1, "
                + " (select cekstatus(x.ins_cover_id = '107',q.description) "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '107' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan2, "
                + " (select cekstatus(x.ins_cover_id = '108',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '108' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan3, "
                + " (select cekstatus(x.ins_cover_id = '101',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '101' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan4, "
                + " (select cekstatus(x.ins_cover_id = '62',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '62' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan5, "
                + " (select cekstatus(x.ins_cover_id = '63',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '63' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan6, "
                + " (select cekstatus(x.ins_cover_id = '64',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '64' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan7, "
                + " (select cekstatus(x.ins_cover_id = '91',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '91' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan8, "
                + " (select cekstatus(x.ins_cover_id = '92',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '92' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan9, "
                + " (select cekstatus(x.ins_cover_id = '93',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '93' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan10, "
                + " (select cekstatus(x.ins_cover_id = '94',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '94' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan11, "
                + " (select cekstatus(x.ins_cover_id = '22',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '22' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan12, "
                + " (select cekstatus(x.ins_cover_id = '29',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '29' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan13, "
                + " (select cekstatus(x.ins_cover_id = '65',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '65' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan14, "
                + " (select cekstatus(x.ins_cover_id = '114',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '114' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan15, "
                + " (select cekstatus(x.ins_cover_id = '120',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '120' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan16, "
                + " (select cekstatus(x.ins_cover_id = '121',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '121' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan17, "
                + " (select cekstatus(x.ins_cover_id = '122',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '122' "
                + "where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan18, "
                + " (select cekstatus(x.ins_cover_id = '123',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '123' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan19, "
                + " (select cekstatus(x.ins_cover_id = '128',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '128' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan20, "
                + " (select cekstatus(x.ins_cover_id = '129',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '129' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan21, "
                + " (select cekstatus(x.ins_cover_id = '130',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '130' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan22, "
                + " (select cekstatus(x.ins_cover_id = '131',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '131' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan23, "
                + " (select cekstatus(x.ins_cover_id = '140',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '140' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan24, "
                + " (select cekstatus(x.ins_cover_id = '141',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '141' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan25, "
                + " (select cekstatus(x.ins_cover_id = '142',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '142' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan26, "
                + " (select cekstatus(x.ins_cover_id = '148',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '148' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan27, "
                + " (select cekstatus(x.ins_cover_id = '210',q.description)  "
                + " from ins_pol_obj z  "
                + " inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id  "
                + " inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = '210' "
                + " where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan28 "*/);

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join gl_cost_center c on c.cc_code = a.cc_code "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + " left join ent_master e on e.ent_id = a.entity_id "
                + " left join  ins_risk_cat f on f.ins_risk_cat_id = b.ins_risk_cat_id ");

        sqa.addClause("a.status in ('POLICY','RENEWAL','ENDORSE')");
        sqa.addClause("a.effective_flag = 'Y'");
        sqa.addClause("a.pol_type_id = 3 ");
        sqa.addClause("substr(a.pol_no,1,16) not in (select substr(a.pol_no,1,16) from ins_policy a where a.status in ('ENDORSE') and a.insured_amount = 0 and pol_type_id = 3)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= '" + appDateFrom + "'");
            //sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= '" + appDateTo + "'");
            //sqa.addPar(appDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = sqa.getSQL() + " order by a.cc_code,a.pol_no,b.ins_pol_obj_id ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

        SQLUtil S = new SQLUtil();

        String nama_file = "produksi_statistik_mv_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();
    }

    public void EXPORT_STATISTIK_MV() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("pol_id");
            row0.createCell(1).setCellValue("ins_pol_obj_id");
            row0.createCell(2).setCellValue("pol_no");
            row0.createCell(3).setCellValue("bank tertanggung");
            row0.createCell(4).setCellValue("tertanggung");
            row0.createCell(5).setCellValue("objek");
            row0.createCell(6).setCellValue("rangka");
            row0.createCell(7).setCellValue("mesin");
            row0.createCell(8).setCellValue("polisi");
            row0.createCell(9).setCellValue("type");
            row0.createCell(10).setCellValue("penggunaan");
            row0.createCell(11).setCellValue("ins_risk_cat_code");
            row0.createCell(12).setCellValue("ins_risk_cat_name");
            row0.createCell(13).setCellValue("cabang");
            row0.createCell(14).setCellValue("tahun");
            row0.createCell(15).setCellValue("insured_amount");
            row0.createCell(16).setCellValue("insured_amount_obj");
            row0.createCell(17).setCellValue("period_start");
            row0.createCell(18).setCellValue("period_end");
            row0.createCell(19).setCellValue("premi_total");
            row0.createCell(20).setCellValue("premi_total_obj");
            row0.createCell(21).setCellValue("diskon");
            row0.createCell(22).setCellValue("status");
            row0.createCell(23).setCellValue("kurs");
            row0.createCell(24).setCellValue("mata_uang");
            row0.createCell(25).setCellValue("comm");
            row0.createCell(26).setCellValue("nd_feebase");
            row0.createCell(27).setCellValue("nd_brok");
            row0.createCell(28).setCellValue("nd_hfee");
            row0.createCell(29).setCellValue("deduct");
            row0.createCell(30).setCellValue("jaminan/coverage");

            BigDecimal comm1 = null;
            BigDecimal comm2 = null;
            BigDecimal bfee = null;
            BigDecimal feebase = null;
            comm1 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));
            comm2 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_comm4"));
            bfee = BDUtil.add(h.getFieldValueByFieldNameBD("nd_brok1"), h.getFieldValueByFieldNameBD("nd_brok2"));
            feebase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("ins_pol_obj_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            if (h.getFieldValueByFieldNameST("nama") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("nama"));
            }
            if (h.getFieldValueByFieldNameST("rangka") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("rangka"));
            }
            if (h.getFieldValueByFieldNameST("mesin") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("mesin"));
            }
            if (h.getFieldValueByFieldNameST("polisi") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("polisi"));
            }
            if (h.getFieldValueByFieldNameST("type") != null) {
                row.createCell(9).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("merk")) + ", " + h.getFieldValueByFieldNameST("type"));
            }
            row.createCell(10).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("penggunaan")));
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameST("description"));
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("tahun"));
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount_obj") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("insured_amount_obj").doubleValue());
            }
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("premi_total_obj").doubleValue());
            if (h.getFieldValueByFieldNameBD("diskon") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            }
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("kurs").doubleValue());
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameST("mata_uang"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(25).setCellValue(BDUtil.add(comm1, comm2).doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_feebase1") != null) {
                row.createCell(26).setCellValue(feebase.doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_brok1") != null) {
                row.createCell(27).setCellValue(bfee.doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_hfee") != null) {
                row.createCell(28).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("deduct") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameBD("deduct").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jaminan1") != null
                    || h.getFieldValueByFieldNameST("jaminan2") != null
                    || h.getFieldValueByFieldNameST("jaminan3") != null
                    || h.getFieldValueByFieldNameST("jaminan4") != null
                    || h.getFieldValueByFieldNameST("jaminan5") != null
                    || h.getFieldValueByFieldNameST("jaminan6") != null
                    || h.getFieldValueByFieldNameST("jaminan7") != null
                    || h.getFieldValueByFieldNameST("jaminan8") != null
                    || h.getFieldValueByFieldNameST("jaminan9") != null
                    || h.getFieldValueByFieldNameST("jaminan10") != null
                    || h.getFieldValueByFieldNameST("jaminan11") != null
                    || h.getFieldValueByFieldNameST("jaminan12") != null
                    || h.getFieldValueByFieldNameST("jaminan13") != null
                    || h.getFieldValueByFieldNameST("jaminan14") != null
                    || h.getFieldValueByFieldNameST("jaminan15") != null
                    || h.getFieldValueByFieldNameST("jaminan16") != null
                    || h.getFieldValueByFieldNameST("jaminan17") != null
                    || h.getFieldValueByFieldNameST("jaminan18") != null
                    || h.getFieldValueByFieldNameST("jaminan19") != null
                    || h.getFieldValueByFieldNameST("jaminan20") != null
                    || h.getFieldValueByFieldNameST("jaminan21") != null
                    || h.getFieldValueByFieldNameST("jaminan22") != null
                    || h.getFieldValueByFieldNameST("jaminan23") != null
                    || h.getFieldValueByFieldNameST("jaminan24") != null
                    || h.getFieldValueByFieldNameST("jaminan25") != null
                    || h.getFieldValueByFieldNameST("jaminan26") != null
                    || h.getFieldValueByFieldNameST("jaminan27") != null
                    || h.getFieldValueByFieldNameST("jaminan28") != null) {
                row.createCell(30).setCellValue(
                        LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan1")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan2")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan3")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan4")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan5")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan6")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan7")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan8")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan9")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan10")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan11")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan12")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan13")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan14")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan15")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan16")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan17")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan18")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan19")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan20")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan21")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan22")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan23")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan24")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan25")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan26")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan27")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan28")));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXCEL_STATISTIK() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code as cabang,a.pol_id,b.ins_pol_obj_id,';'||a.pol_no as pol_no,a.policy_date,"
                + "b.ref1,b.ref2,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9d as kode_pos,b.ref10,b.ref11,b.ref1d,b.ref2d,b.ref3d,b.ref4d,  "
                + "b.ref5d,b.ref6d,b.ref7d,b.ref8d,b.ref11,b.risk_class,b.refd1,b.refd2,b.refd3,f.ins_risk_cat_code,f.description,  "
                + "a.ccy_rate as kurs,getpremi(a.status = 'ENDORSE',a.insured_amount_e,a.insured_amount) as insured_amount,a.premi_total,b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,"
                + "(a.nd_disc1+a.nd_disc2) as diskon,a.status,a.ccy as mata_uang,a.nd_comm1,a.nd_comm2,a.nd_comm3,a.nd_comm4,  "
                + "a.nd_feebase1,a.nd_feebase2,a.nd_brok1,a.nd_brok2,a.nd_hfee,  "
                + "(select string_agg(l.description,'|') "
                + "from ins_cover l "
                + "inner join ins_pol_cover z on z.ins_cover_id = l.ins_cover_id "
                + "where z.ins_pol_obj_id = b.ins_pol_obj_id) as jaminan1 " /*+ " (select cekstatus(x.ins_cover_id = 1,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 1 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan1, "
                + " (select cekstatus(x.ins_cover_id = 2,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 2 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan2, "
                + " (select cekstatus(x.ins_cover_id = 3,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 3 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan3, "
                + " (select cekstatus(x.ins_cover_id = 4,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 4 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan4, "
                + " (select cekstatus(x.ins_cover_id = 5,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 5 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan5, "
                + " (select cekstatus(x.ins_cover_id = 6,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 6 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan6, "
                + " (select cekstatus(x.ins_cover_id = 7,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 7 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan7, "
                + " (select cekstatus(x.ins_cover_id = 8,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 8 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan8, "
                + " (select cekstatus(x.ins_cover_id = 9,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 9 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan9, "
                + " (select cekstatus(x.ins_cover_id = 10,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 10 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan10, "
                + " (select cekstatus(x.ins_cover_id = 11,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 11 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan11, "
                + " (select cekstatus(x.ins_cover_id = 12,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 12 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan12, "
                + " (select cekstatus(x.ins_cover_id = 13,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 13 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan13, "
                + " (select cekstatus(x.ins_cover_id = 14,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 14 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan14, "
                + " (select cekstatus(x.ins_cover_id = 15,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 15 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan15, "
                + " (select cekstatus(x.ins_cover_id = 16,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 16 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan16, "
                + " (select cekstatus(x.ins_cover_id = 17,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 17 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan17, "
                + " (select cekstatus(x.ins_cover_id = 18,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 18 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan18, "
                + " (select cekstatus(x.ins_cover_id = 19,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 19 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan19, "
                + " (select cekstatus(x.ins_cover_id = 20,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 20 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan20, "
                + " (select cekstatus(x.ins_cover_id = 21,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 21 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan21, "
                + " (select cekstatus(x.ins_cover_id = 22,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 22 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan22, "
                + " (select cekstatus(x.ins_cover_id = 23,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 23 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan23, "
                + " (select cekstatus(x.ins_cover_id = 24,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 24 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan24, "
                + " (select cekstatus(x.ins_cover_id = 25,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 25 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan25, "
                + " (select cekstatus(x.ins_cover_id = 26,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 26 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan26, "
                + " (select cekstatus(x.ins_cover_id = 27,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 27 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan27, "
                + " (select cekstatus(x.ins_cover_id = 28,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 28 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan28, "
                + " (select cekstatus(x.ins_cover_id = 29,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 29 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan29, "
                + " (select cekstatus(x.ins_cover_id = 31,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 31 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan30, "
                + " (select cekstatus(x.ins_cover_id = 33,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 33 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan31, "
                + " (select cekstatus(x.ins_cover_id = 34,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 34 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan32, "
                + " (select cekstatus(x.ins_cover_id = 35,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 35 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan33, "
                + " (select cekstatus(x.ins_cover_id = 36,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 36 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan34, "
                + " (select cekstatus(x.ins_cover_id = 37,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 37 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan35, "
                + " (select cekstatus(x.ins_cover_id = 39,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 39 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan36, "
                + " (select cekstatus(x.ins_cover_id = 40,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 40 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan37, "
                + " (select cekstatus(x.ins_cover_id = 41,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 41 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan38, "
                + " (select cekstatus(x.ins_cover_id = 42,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 42 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan39, "
                + " (select cekstatus(x.ins_cover_id = 43,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 43 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan40, "
                + " (select cekstatus(x.ins_cover_id = 44,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 44 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan41, "
                + " (select cekstatus(x.ins_cover_id = 45,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 45 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan42, "
                + " (select cekstatus(x.ins_cover_id = 46,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 46 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan43, "
                + " (select cekstatus(x.ins_cover_id = 47,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 47 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan44, "
                + " (select cekstatus(x.ins_cover_id = 48,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 48 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan45, "
                + " (select cekstatus(x.ins_cover_id = 49,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 49 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan46, "
                + " (select cekstatus(x.ins_cover_id = 50,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 50 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan47, "
                + " (select cekstatus(x.ins_cover_id = 51,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 51 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan48, "
                + " (select cekstatus(x.ins_cover_id = 52,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 52 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan49, "
                + " (select cekstatus(x.ins_cover_id = 53,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 53 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan50, "
                + " (select cekstatus(x.ins_cover_id = 54,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 54 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan51, "
                + " (select cekstatus(x.ins_cover_id = 55,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 55 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan52, "
                + " (select cekstatus(x.ins_cover_id = 56,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 56 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan53, "
                + " (select cekstatus(x.ins_cover_id = 57,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 57 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan54, "
                + " (select cekstatus(x.ins_cover_id = 58,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 58 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan55, "
                + " (select cekstatus(x.ins_cover_id = 59,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 59 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan56, "
                + " (select cekstatus(x.ins_cover_id = 60,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 60 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan57, "
                + " (select cekstatus(x.ins_cover_id = 61,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 61 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan58, "
                + " (select cekstatus(x.ins_cover_id = 62,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 62 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan59, "
                + " (select cekstatus(x.ins_cover_id = 63,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 63 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan60, "
                + " (select cekstatus(x.ins_cover_id = 64,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 64 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan61, "
                + " (select cekstatus(x.ins_cover_id = 65,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 65 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan62, "
                + " (select cekstatus(x.ins_cover_id = 67,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 67 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan63, "
                + " (select cekstatus(x.ins_cover_id = 68,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 68 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan64, "
                + " (select cekstatus(x.ins_cover_id = 69,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 69 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan65, "
                + " (select cekstatus(x.ins_cover_id = 70,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 70 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan66, "
                + " (select cekstatus(x.ins_cover_id = 72,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 72 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan67, "
                + " (select cekstatus(x.ins_cover_id = 75,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 75 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan68, "
                + " (select cekstatus(x.ins_cover_id = 76,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 76 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan69, "
                + " (select cekstatus(x.ins_cover_id = 78,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 78 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan70, "
                + " (select cekstatus(x.ins_cover_id = 80,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 80 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan71, "
                + " (select cekstatus(x.ins_cover_id = 81,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 81 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan72, "
                + " (select cekstatus(x.ins_cover_id = 83,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 83 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan73, "
                + " (select cekstatus(x.ins_cover_id = 84,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 84 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan74, "
                + " (select cekstatus(x.ins_cover_id = 85,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 85 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan75, "
                + " (select cekstatus(x.ins_cover_id = 86,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 86 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan76, "
                + " (select cekstatus(x.ins_cover_id = 87,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 87 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan77, "
                + " (select cekstatus(x.ins_cover_id = 88,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 88 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan78, "
                + " (select cekstatus(x.ins_cover_id = 89,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 89 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan79, "
                + " (select cekstatus(x.ins_cover_id = 90,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 90 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan80, "
                + " (select cekstatus(x.ins_cover_id = 91,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 91 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan81, "
                + " (select cekstatus(x.ins_cover_id = 92,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 92 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan82, "
                + " (select cekstatus(x.ins_cover_id = 93,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 93 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan83, "
                + " (select cekstatus(x.ins_cover_id = 94,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 94 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan84, "
                + " (select cekstatus(x.ins_cover_id = 95,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 95 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan85, "
                + " (select cekstatus(x.ins_cover_id = 96,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 96 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan86, "
                + " (select cekstatus(x.ins_cover_id = 97,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 97 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan87, "
                + " (select cekstatus(x.ins_cover_id = 98,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 98 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan88, "
                + " (select cekstatus(x.ins_cover_id = 99,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 99 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan89, "
                + " (select cekstatus(x.ins_cover_id = 101,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 101 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan90, "
                + " (select cekstatus(x.ins_cover_id = 102,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 102 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan91, "
                + " (select cekstatus(x.ins_cover_id = 103,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 103 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan92, "
                + " (select cekstatus(x.ins_cover_id = 104,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 104 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan93, "
                + " (select cekstatus(x.ins_cover_id = 105,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 105 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan94, "
                + " (select cekstatus(x.ins_cover_id = 106,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 106 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan95, "
                + " (select cekstatus(x.ins_cover_id = 107,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 107 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan96, "
                + " (select cekstatus(x.ins_cover_id = 108,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 108 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan97, "
                + " (select cekstatus(x.ins_cover_id = 109,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 109 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan98, "
                + " (select cekstatus(x.ins_cover_id = 110,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 110 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan99, "
                + " (select cekstatus(x.ins_cover_id = 112,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 112 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan100, "
                + " (select cekstatus(x.ins_cover_id = 113,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 113 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan101, "
                + " (select cekstatus(x.ins_cover_id = 114,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 114 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan102, "
                + " (select cekstatus(x.ins_cover_id = 115,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 115 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan103, "
                + " (select cekstatus(x.ins_cover_id = 116,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 116 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan104, "
                + " (select cekstatus(x.ins_cover_id = 117,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 117 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan105, "
                + " (select cekstatus(x.ins_cover_id = 118,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 118 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan106, "
                + " (select cekstatus(x.ins_cover_id = 119,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 119 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan107, "
                + " (select cekstatus(x.ins_cover_id = 120,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 120 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan108, "
                + " (select cekstatus(x.ins_cover_id = 121,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 121 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan109, "
                + " (select cekstatus(x.ins_cover_id = 122,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 122 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan110, "
                + " (select cekstatus(x.ins_cover_id = 123,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 123 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan111, "
                + " (select cekstatus(x.ins_cover_id = 124,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 124 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan112, "
                + " (select cekstatus(x.ins_cover_id = 125,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 125 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan113, "
                + " (select cekstatus(x.ins_cover_id = 126,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 126 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan114, "
                + " (select cekstatus(x.ins_cover_id = 127,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 127 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan115, "
                + " (select cekstatus(x.ins_cover_id = 128,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 128 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan116, "
                + " (select cekstatus(x.ins_cover_id = 129,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 129 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan117, "
                + " (select cekstatus(x.ins_cover_id = 130,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 130 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan118, "
                + " (select cekstatus(x.ins_cover_id = 131,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 131 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan119, "
                + " (select cekstatus(x.ins_cover_id = 139,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 139 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan120, "
                + " (select cekstatus(x.ins_cover_id = 140,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 140 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan121, "
                + " (select cekstatus(x.ins_cover_id = 141,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 141 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan122, "
                + " (select cekstatus(x.ins_cover_id = 142,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 142 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan123, "
                + " (select cekstatus(x.ins_cover_id = 143,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 143 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan124, "
                + " (select cekstatus(x.ins_cover_id = 144,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 144 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan125, "
                + " (select cekstatus(x.ins_cover_id = 145,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 145 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan126, "
                + " (select cekstatus(x.ins_cover_id = 146,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 146 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan127, "
                + " (select cekstatus(x.ins_cover_id = 147,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 147 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan128, "
                + " (select cekstatus(x.ins_cover_id = 148,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 148 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan129, "
                + " (select cekstatus(x.ins_cover_id = 204,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 204 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan130, "
                + " (select cekstatus(x.ins_cover_id = 205,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 205 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan131, "
                + " (select cekstatus(x.ins_cover_id = 206,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 206 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan132, "
                + " (select cekstatus(x.ins_cover_id = 207,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 207 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan133, "
                + " (select cekstatus(x.ins_cover_id = 208,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 208 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan134, "
                + " (select cekstatus(x.ins_cover_id = 209,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 209 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan135, "
                + " (select cekstatus(x.ins_cover_id = 210,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 210 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan136, "
                + " (select cekstatus(x.ins_cover_id = 211,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 211 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan137, "
                + " (select cekstatus(x.ins_cover_id = 212,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 212 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan138, "
                + " (select cekstatus(x.ins_cover_id = 213,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 213 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan139, "
                + " (select cekstatus(x.ins_cover_id = 214,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 214 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan140, "
                + " (select cekstatus(x.ins_cover_id = 215,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 215 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan141, "
                + " (select cekstatus(x.ins_cover_id = 216,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 216 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan142, "
                + " (select cekstatus(x.ins_cover_id = 217,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 217 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan143, "
                + " (select cekstatus(x.ins_cover_id = 218,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 218 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan144, "
                + " (select cekstatus(x.ins_cover_id = 219,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 219 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan145, "
                + " (select cekstatus(x.ins_cover_id = 220,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 220 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan146, "
                + " (select cekstatus(x.ins_cover_id = 221,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 221 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan147, "
                + " (select cekstatus(x.ins_cover_id = 222,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 222 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan148, "
                + " (select cekstatus(x.ins_cover_id = 223,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 223 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan149, "
                + " (select cekstatus(x.ins_cover_id = 224,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 224 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan150, "
                + " (select cekstatus(x.ins_cover_id = 225,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 225 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan151, "
                + " (select cekstatus(x.ins_cover_id = 226,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 226 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan152, "
                + " (select cekstatus(x.ins_cover_id = 227,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 227 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan153, "
                + " (select cekstatus(x.ins_cover_id = 228,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 228 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan154, "
                + " (select cekstatus(x.ins_cover_id = 229,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 229 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan155, "
                + " (select cekstatus(x.ins_cover_id = 230,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 230 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan156, "
                + " (select cekstatus(x.ins_cover_id = 231,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 231 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan157, "
                + " (select cekstatus(x.ins_cover_id = 232,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 232 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan158, "
                + " (select cekstatus(x.ins_cover_id = 233,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 233 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan159, "
                + " (select cekstatus(x.ins_cover_id = 234,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 234 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan160, "
                + " (select cekstatus(x.ins_cover_id = 235,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 235 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan161, "
                + " (select cekstatus(x.ins_cover_id = 236,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 236 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan162, "
                + " (select cekstatus(x.ins_cover_id = 237,q.description) from ins_pol_obj z inner join ins_pol_cover x on x.ins_pol_obj_id = z.ins_pol_obj_id inner join ins_cover q on q.ins_cover_id = x.ins_cover_id and q.ins_cover_id = 237 where z.ins_pol_obj_id = b.ins_pol_obj_id group by q.description,x.ins_cover_id) as jaminan163 "*/);

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join  ins_risk_cat f on f.ins_risk_cat_id = b.ins_risk_cat_id "
                + " left join gl_cost_center c on c.cc_code = a.cc_code "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in('POLICY','RENEWAL','ENDORSE')");
        sqa.addClause("a.effective_flag = 'Y'");
        // sqa.addClause("a.pol_type_id in (1,81,19,2)");
        //sqa.addClause("a.pol_type_id in (1,81)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= '" + appDateFrom + "'");
            //sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= '" + appDateTo + "'");
            //sqa.addPar(appDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("b.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%'+stPolicyNo+'%');
        }

        String sql = sqa.getSQL();

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );
        
        SessionManager.getInstance().getRequest().setAttribute("RPT", l);
        
        return l;
         */

        sql = sql + " order by a.cc_code,a.pol_no,b.ins_pol_obj_id ";

        SQLUtil S = new SQLUtil();

        String nama_file = "produksi_statistik_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();
    }

    public void EXPORT_STATISTIK() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("pol_id");
            row0.createCell(2).setCellValue("tgl polis");
            row0.createCell(3).setCellValue("pol_no");
            row0.createCell(4).setCellValue("ref1");
            row0.createCell(5).setCellValue("ref2");
            row0.createCell(6).setCellValue("ref3");
            row0.createCell(7).setCellValue("ref4");
            row0.createCell(8).setCellValue("ref5");
            row0.createCell(9).setCellValue("ref6");
            row0.createCell(10).setCellValue("ref7");
            row0.createCell(11).setCellValue("ref8");
            row0.createCell(12).setCellValue("kode_pos");
            row0.createCell(13).setCellValue("ref10");
            row0.createCell(14).setCellValue("ref11");
            row0.createCell(15).setCellValue("ref1d");
            row0.createCell(16).setCellValue("ref2d");
            row0.createCell(17).setCellValue("ref3d");
            row0.createCell(18).setCellValue("ref4d");
            row0.createCell(19).setCellValue("ref5d");
            row0.createCell(20).setCellValue("ref6d");
            row0.createCell(21).setCellValue("ref7d");
            row0.createCell(22).setCellValue("ref8d");
            row0.createCell(23).setCellValue("ref11");
            row0.createCell(24).setCellValue("risk_class");
            row0.createCell(25).setCellValue("refd1");
            row0.createCell(26).setCellValue("refd2");
            row0.createCell(27).setCellValue("refd3");
            row0.createCell(28).setCellValue("ins_risk_cat_code");
            row0.createCell(29).setCellValue("ins_risk_cat_name");
            row0.createCell(30).setCellValue("period_start");
            row0.createCell(31).setCellValue("period_end");
            row0.createCell(32).setCellValue("status");
            row0.createCell(33).setCellValue("mata_uang");
            row0.createCell(34).setCellValue("kurs");
            row0.createCell(35).setCellValue("insured_amount");
            row0.createCell(36).setCellValue("premi_total");
            row0.createCell(37).setCellValue("insured_amount_obj");
            row0.createCell(38).setCellValue("premi_total_obj");
            row0.createCell(39).setCellValue("diskon");
            row0.createCell(40).setCellValue("comm");
            row0.createCell(41).setCellValue("nd_feebase");
            row0.createCell(42).setCellValue("nd_brok");
            row0.createCell(43).setCellValue("nd_hfee");
            row0.createCell(44).setCellValue("jaminan/coverage");

            BigDecimal comm1 = null;
            BigDecimal comm2 = null;
            BigDecimal bfee = null;
            BigDecimal feebase = null;
            comm1 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));
            comm2 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_comm4"));
            bfee = BDUtil.add(h.getFieldValueByFieldNameBD("nd_brok1"), h.getFieldValueByFieldNameBD("nd_brok2"));
            feebase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (h.getFieldValueByFieldNameST("ref2") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            }
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("ref3"));
            }
            if (h.getFieldValueByFieldNameST("ref4") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("ref4"));
            }
            if (h.getFieldValueByFieldNameST("ref5") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("ref5"));
            }
            if (h.getFieldValueByFieldNameST("ref6") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            }
            if (h.getFieldValueByFieldNameST("ref7") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("ref7"));
            }
            if (h.getFieldValueByFieldNameST("ref8") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("ref8"));
            }
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameST("kode_pos"));
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("ref10"));
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("ref11"));
            row.createCell(15).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1d")));
            row.createCell(16).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
            row.createCell(17).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3d")));
            row.createCell(18).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4d")));
            row.createCell(19).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5d")));
            row.createCell(20).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6d")));
            row.createCell(21).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
            row.createCell(22).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8d")));
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameST("ref11"));
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameST("risk_class"));
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(25).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            if (h.getFieldValueByFieldNameDT("refd2") != null) {
                row.createCell(26).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            }
            if (h.getFieldValueByFieldNameDT("refd3") != null) {
                row.createCell(27).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            }
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            row.createCell(29).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameDT("period_start") != null) {
                row.createCell(30).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            }
            if (h.getFieldValueByFieldNameDT("period_end") != null) {
                row.createCell(31).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            }
            row.createCell(32).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(33).setCellValue(h.getFieldValueByFieldNameST("mata_uang"));
            row.createCell(34).setCellValue(h.getFieldValueByFieldNameBD("kurs").doubleValue());
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(35).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount_obj") != null) {
                row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("insured_amount_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_obj") != null) {
                row.createCell(38).setCellValue(h.getFieldValueByFieldNameBD("premi_total_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("diskon") != null) {
                row.createCell(39).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(40).setCellValue(BDUtil.add(comm1, comm2).doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_feebase1") != null) {
                row.createCell(41).setCellValue(feebase.doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_brok1") != null) {
                row.createCell(42).setCellValue(bfee.doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_hfee") != null) {
                row.createCell(43).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jaminan1") != null
                    || h.getFieldValueByFieldNameST("jaminan2") != null
                    || h.getFieldValueByFieldNameST("jaminan3") != null
                    || h.getFieldValueByFieldNameST("jaminan4") != null
                    || h.getFieldValueByFieldNameST("jaminan5") != null
                    || h.getFieldValueByFieldNameST("jaminan6") != null
                    || h.getFieldValueByFieldNameST("jaminan7") != null
                    || h.getFieldValueByFieldNameST("jaminan8") != null
                    || h.getFieldValueByFieldNameST("jaminan9") != null
                    || h.getFieldValueByFieldNameST("jaminan10") != null
                    || h.getFieldValueByFieldNameST("jaminan11") != null
                    || h.getFieldValueByFieldNameST("jaminan12") != null
                    || h.getFieldValueByFieldNameST("jaminan13") != null
                    || h.getFieldValueByFieldNameST("jaminan14") != null
                    || h.getFieldValueByFieldNameST("jaminan15") != null
                    || h.getFieldValueByFieldNameST("jaminan16") != null
                    || h.getFieldValueByFieldNameST("jaminan17") != null
                    || h.getFieldValueByFieldNameST("jaminan18") != null
                    || h.getFieldValueByFieldNameST("jaminan19") != null
                    || h.getFieldValueByFieldNameST("jaminan20") != null
                    || h.getFieldValueByFieldNameST("jaminan21") != null
                    || h.getFieldValueByFieldNameST("jaminan22") != null
                    || h.getFieldValueByFieldNameST("jaminan23") != null
                    || h.getFieldValueByFieldNameST("jaminan24") != null
                    || h.getFieldValueByFieldNameST("jaminan25") != null
                    || h.getFieldValueByFieldNameST("jaminan26") != null
                    || h.getFieldValueByFieldNameST("jaminan27") != null
                    || h.getFieldValueByFieldNameST("jaminan28") != null
                    || h.getFieldValueByFieldNameST("jaminan29") != null
                    || h.getFieldValueByFieldNameST("jaminan30") != null
                    || h.getFieldValueByFieldNameST("jaminan31") != null
                    || h.getFieldValueByFieldNameST("jaminan32") != null
                    || h.getFieldValueByFieldNameST("jaminan33") != null
                    || h.getFieldValueByFieldNameST("jaminan34") != null
                    || h.getFieldValueByFieldNameST("jaminan35") != null
                    || h.getFieldValueByFieldNameST("jaminan36") != null
                    || h.getFieldValueByFieldNameST("jaminan37") != null
                    || h.getFieldValueByFieldNameST("jaminan38") != null
                    || h.getFieldValueByFieldNameST("jaminan39") != null
                    || h.getFieldValueByFieldNameST("jaminan40") != null
                    || h.getFieldValueByFieldNameST("jaminan41") != null
                    || h.getFieldValueByFieldNameST("jaminan42") != null
                    || h.getFieldValueByFieldNameST("jaminan43") != null
                    || h.getFieldValueByFieldNameST("jaminan44") != null
                    || h.getFieldValueByFieldNameST("jaminan45") != null
                    || h.getFieldValueByFieldNameST("jaminan46") != null
                    || h.getFieldValueByFieldNameST("jaminan47") != null
                    || h.getFieldValueByFieldNameST("jaminan48") != null
                    || h.getFieldValueByFieldNameST("jaminan49") != null
                    || h.getFieldValueByFieldNameST("jaminan50") != null
                    || h.getFieldValueByFieldNameST("jaminan51") != null
                    || h.getFieldValueByFieldNameST("jaminan52") != null
                    || h.getFieldValueByFieldNameST("jaminan53") != null
                    || h.getFieldValueByFieldNameST("jaminan54") != null
                    || h.getFieldValueByFieldNameST("jaminan55") != null
                    || h.getFieldValueByFieldNameST("jaminan56") != null
                    || h.getFieldValueByFieldNameST("jaminan57") != null
                    || h.getFieldValueByFieldNameST("jaminan58") != null
                    || h.getFieldValueByFieldNameST("jaminan59") != null
                    || h.getFieldValueByFieldNameST("jaminan60") != null
                    || h.getFieldValueByFieldNameST("jaminan61") != null
                    || h.getFieldValueByFieldNameST("jaminan62") != null
                    || h.getFieldValueByFieldNameST("jaminan63") != null
                    || h.getFieldValueByFieldNameST("jaminan64") != null
                    || h.getFieldValueByFieldNameST("jaminan65") != null
                    || h.getFieldValueByFieldNameST("jaminan66") != null
                    || h.getFieldValueByFieldNameST("jaminan67") != null
                    || h.getFieldValueByFieldNameST("jaminan68") != null
                    || h.getFieldValueByFieldNameST("jaminan69") != null
                    || h.getFieldValueByFieldNameST("jaminan70") != null
                    || h.getFieldValueByFieldNameST("jaminan71") != null
                    || h.getFieldValueByFieldNameST("jaminan72") != null
                    || h.getFieldValueByFieldNameST("jaminan73") != null
                    || h.getFieldValueByFieldNameST("jaminan74") != null
                    || h.getFieldValueByFieldNameST("jaminan75") != null
                    || h.getFieldValueByFieldNameST("jaminan76") != null
                    || h.getFieldValueByFieldNameST("jaminan77") != null
                    || h.getFieldValueByFieldNameST("jaminan78") != null
                    || h.getFieldValueByFieldNameST("jaminan79") != null
                    || h.getFieldValueByFieldNameST("jaminan80") != null
                    || h.getFieldValueByFieldNameST("jaminan81") != null
                    || h.getFieldValueByFieldNameST("jaminan82") != null
                    || h.getFieldValueByFieldNameST("jaminan83") != null
                    || h.getFieldValueByFieldNameST("jaminan84") != null
                    || h.getFieldValueByFieldNameST("jaminan85") != null
                    || h.getFieldValueByFieldNameST("jaminan86") != null
                    || h.getFieldValueByFieldNameST("jaminan87") != null
                    || h.getFieldValueByFieldNameST("jaminan88") != null
                    || h.getFieldValueByFieldNameST("jaminan89") != null
                    || h.getFieldValueByFieldNameST("jaminan90") != null
                    || h.getFieldValueByFieldNameST("jaminan91") != null
                    || h.getFieldValueByFieldNameST("jaminan92") != null
                    || h.getFieldValueByFieldNameST("jaminan93") != null
                    || h.getFieldValueByFieldNameST("jaminan94") != null
                    || h.getFieldValueByFieldNameST("jaminan95") != null
                    || h.getFieldValueByFieldNameST("jaminan96") != null
                    || h.getFieldValueByFieldNameST("jaminan97") != null
                    || h.getFieldValueByFieldNameST("jaminan98") != null
                    || h.getFieldValueByFieldNameST("jaminan99") != null
                    || h.getFieldValueByFieldNameST("jaminan100") != null
                    || h.getFieldValueByFieldNameST("jaminan101") != null
                    || h.getFieldValueByFieldNameST("jaminan102") != null
                    || h.getFieldValueByFieldNameST("jaminan103") != null
                    || h.getFieldValueByFieldNameST("jaminan104") != null
                    || h.getFieldValueByFieldNameST("jaminan105") != null
                    || h.getFieldValueByFieldNameST("jaminan106") != null
                    || h.getFieldValueByFieldNameST("jaminan107") != null
                    || h.getFieldValueByFieldNameST("jaminan108") != null
                    || h.getFieldValueByFieldNameST("jaminan109") != null
                    || h.getFieldValueByFieldNameST("jaminan110") != null
                    || h.getFieldValueByFieldNameST("jaminan111") != null
                    || h.getFieldValueByFieldNameST("jaminan112") != null
                    || h.getFieldValueByFieldNameST("jaminan113") != null
                    || h.getFieldValueByFieldNameST("jaminan114") != null
                    || h.getFieldValueByFieldNameST("jaminan115") != null
                    || h.getFieldValueByFieldNameST("jaminan116") != null
                    || h.getFieldValueByFieldNameST("jaminan117") != null
                    || h.getFieldValueByFieldNameST("jaminan118") != null
                    || h.getFieldValueByFieldNameST("jaminan119") != null
                    || h.getFieldValueByFieldNameST("jaminan120") != null
                    || h.getFieldValueByFieldNameST("jaminan121") != null
                    || h.getFieldValueByFieldNameST("jaminan122") != null
                    || h.getFieldValueByFieldNameST("jaminan123") != null
                    || h.getFieldValueByFieldNameST("jaminan124") != null
                    || h.getFieldValueByFieldNameST("jaminan125") != null
                    || h.getFieldValueByFieldNameST("jaminan126") != null
                    || h.getFieldValueByFieldNameST("jaminan127") != null
                    || h.getFieldValueByFieldNameST("jaminan128") != null
                    || h.getFieldValueByFieldNameST("jaminan129") != null
                    || h.getFieldValueByFieldNameST("jaminan130") != null
                    || h.getFieldValueByFieldNameST("jaminan131") != null
                    || h.getFieldValueByFieldNameST("jaminan132") != null
                    || h.getFieldValueByFieldNameST("jaminan133") != null
                    || h.getFieldValueByFieldNameST("jaminan134") != null
                    || h.getFieldValueByFieldNameST("jaminan135") != null
                    || h.getFieldValueByFieldNameST("jaminan136") != null
                    || h.getFieldValueByFieldNameST("jaminan137") != null
                    || h.getFieldValueByFieldNameST("jaminan138") != null
                    || h.getFieldValueByFieldNameST("jaminan139") != null
                    || h.getFieldValueByFieldNameST("jaminan140") != null
                    || h.getFieldValueByFieldNameST("jaminan141") != null
                    || h.getFieldValueByFieldNameST("jaminan142") != null
                    || h.getFieldValueByFieldNameST("jaminan143") != null
                    || h.getFieldValueByFieldNameST("jaminan144") != null
                    || h.getFieldValueByFieldNameST("jaminan145") != null
                    || h.getFieldValueByFieldNameST("jaminan146") != null
                    || h.getFieldValueByFieldNameST("jaminan147") != null
                    || h.getFieldValueByFieldNameST("jaminan148") != null
                    || h.getFieldValueByFieldNameST("jaminan149") != null
                    || h.getFieldValueByFieldNameST("jaminan150") != null
                    || h.getFieldValueByFieldNameST("jaminan151") != null
                    || h.getFieldValueByFieldNameST("jaminan152") != null
                    || h.getFieldValueByFieldNameST("jaminan153") != null
                    || h.getFieldValueByFieldNameST("jaminan154") != null
                    || h.getFieldValueByFieldNameST("jaminan155") != null
                    || h.getFieldValueByFieldNameST("jaminan156") != null
                    || h.getFieldValueByFieldNameST("jaminan157") != null
                    || h.getFieldValueByFieldNameST("jaminan158") != null
                    || h.getFieldValueByFieldNameST("jaminan159") != null
                    || h.getFieldValueByFieldNameST("jaminan160") != null
                    || h.getFieldValueByFieldNameST("jaminan161") != null
                    || h.getFieldValueByFieldNameST("jaminan162") != null
                    || h.getFieldValueByFieldNameST("jaminan163") != null) {
                row.createCell(44).setCellValue(
                        LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan1")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan2")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan3")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan4")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan5")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan6")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan7")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan8")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan9")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan10")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan11")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan12")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan13")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan14")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan15")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan16")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan17")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan18")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan19")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan20")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan21")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan22")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan23")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan24")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan25")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan26")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan27")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan28")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan29")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan30")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan31")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan32")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan33")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan34")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan35")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan36")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan37")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan38")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan39")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan40")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan41")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan42")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan43")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan44")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan45")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan46")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan47")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan48")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan49")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan50")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan51")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan52")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan53")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan54")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan55")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan56")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan57")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan58")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan59")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan60")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan61")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan62")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan63")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan64")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan65")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan66")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan67")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan68")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan69")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan70")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan71")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan72")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan73")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan74")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan75")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan76")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan77")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan78")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan79")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan80")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan81")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan82")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan83")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan84")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan85")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan86")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan87")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan88")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan89")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan90")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan91")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan92")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan93")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan94")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan95")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan96")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan97")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan98")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan99")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan100")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan101")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan102")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan103")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan104")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan105")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan106")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan107")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan108")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan109")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan110")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan111")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan112")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan113")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan114")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan115")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan116")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan117")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan118")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan119")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan120")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan121")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan122")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan123")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan124")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan125")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan126")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan127")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan128")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan129")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan130")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan131")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan132")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan133")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan134")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan135")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan136")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan137")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan138")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan139")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan140")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan141")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan142")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan143")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan144")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan145")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan146")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan147")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan148")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan149")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan150")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan151")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan152")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan153")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan154")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan155")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan156")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan157")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan158")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan159")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan160")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan161")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan162")) + ", "
                        + LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jaminan163")));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public String getStGroupID() {
        return stGroupID;
    }

    public void setStGroupID(String stGroupID) {
        this.stGroupID = stGroupID;
    }

    public String getStGroupName() {
        return stGroupName;
    }

    public void setStGroupName(String stGroupName) {
        this.stGroupName = stGroupName;
    }

    public String getStFontSize() {
        return stFontSize;
    }

    public void setStFontSize(String stFontSize) {
        this.stFontSize = stFontSize;
    }

    public void EXPORT_RISK_CONTROL2() throws Exception {

        BigDecimal comm = new BigDecimal(0);
        BigDecimal feebase = new BigDecimal(0);

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        int norut = 0;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("period_start");
            row0.createCell(1).setCellValue("period_end");
            row0.createCell(2).setCellValue("policy_date");
            row0.createCell(3).setCellValue("create id");
            row0.createCell(4).setCellValue("status");
            row0.createCell(5).setCellValue("pol_no");
            row0.createCell(6).setCellValue("nomor PP");
            row0.createCell(7).setCellValue("cust_name");
            row0.createCell(8).setCellValue("norut");
            row0.createCell(9).setCellValue("ref1");
            row0.createCell(10).setCellValue("ref2");
            row0.createCell(11).setCellValue("ref3");
            row0.createCell(12).setCellValue("ref4");
            row0.createCell(13).setCellValue("ref5");
            row0.createCell(14).setCellValue("ref6");
            row0.createCell(15).setCellValue("ref7");
            row0.createCell(16).setCellValue("ref8");
            row0.createCell(17).setCellValue("kode_pos");
            row0.createCell(18).setCellValue("ins_risk_cat_code");
            row0.createCell(19).setCellValue("ccy");
            row0.createCell(20).setCellValue("kurs");
            row0.createCell(21).setCellValue("insured_amount");
            row0.createCell(22).setCellValue("premi_total");
            row0.createCell(23).setCellValue("insured_amount_e");
            row0.createCell(24).setCellValue("premi_total_e");
            row0.createCell(25).setCellValue("premi_total_d");
            row0.createCell(26).setCellValue("komisi");
            row0.createCell(27).setCellValue("fee_base");
            row0.createCell(28).setCellValue("ref1d");
            row0.createCell(29).setCellValue("ref2d");
            row0.createCell(30).setCellValue("ref3d");
            row0.createCell(31).setCellValue("ref4d");
            row0.createCell(32).setCellValue("ref5d");
            row0.createCell(33).setCellValue("ref6d");
            row0.createCell(34).setCellValue("ref7d");
            row0.createCell(35).setCellValue("ref8d");
            row0.createCell(36).setCellValue("ref10");
            row0.createCell(37).setCellValue("ref11");
            row0.createCell(38).setCellValue("risk_class");
            row0.createCell(39).setCellValue("refd1");
            row0.createCell(40).setCellValue("refd2");
            row0.createCell(41).setCellValue("refd3");
            row0.createCell(42).setCellValue("jangka waktu");
            row0.createCell(43).setCellValue("endorse notes");
            row0.createCell(44).setCellValue("no urut debitur");

            norut++;

            if (i > 0) {
                HashDTO s = (HashDTO) list.get(i - 1);
                String nopol = s.getFieldValueByFieldNameST("pol_no");
                String nopol2 = h.getFieldValueByFieldNameST("pol_no");
                if (!nopol.equalsIgnoreCase(nopol2)) {

                    norut = 1;
                }
            }

            //comm = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));
            //feebase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("create_who"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            if (getStPolicyTypeGroupID() != null) {
                if (getStPolicyTypeGroupID().equalsIgnoreCase("8")) {
                    row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("nomor_pp"));
                }
            }
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(8).setCellValue(String.valueOf(norut));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(9).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1")));
            }
            if (h.getFieldValueByFieldNameST("ref2") != null) {
                row.createCell(10).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2")));
            }
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(11).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3")));
            }
            if (h.getFieldValueByFieldNameST("ref4") != null) {
                row.createCell(12).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4")));
            }
            if (h.getFieldValueByFieldNameST("ref5") != null) {
                row.createCell(13).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5")));
            }
            if (h.getFieldValueByFieldNameST("ref6") != null) {
                row.createCell(14).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6")));
            }
            if (h.getFieldValueByFieldNameST("ref7") != null) {
                row.createCell(15).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7")));
            }
            if (h.getFieldValueByFieldNameST("ref8") != null) {
                row.createCell(16).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8")));
            }
            if (h.getFieldValueByFieldNameST("kode_pos") != null) {
                row.createCell(17).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("kode_pos")));
            }
            if (h.getFieldValueByFieldNameST("ins_risk_cat_code") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameST("ins_risk_cat_code"));
            }
            if (h.getFieldValueByFieldNameST("ccy") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameST("ccy"));
            }
            if (h.getFieldValueByFieldNameBD("ccy_rate") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("ccy_rate").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("insured_amount_e") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("insured_amount_e").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_e") != null) {
                row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("premi_total_e").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_d") != null) {
                row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("premi_total_d").doubleValue());
            }
            //if (h.getFieldValueByFieldNameBD("nd_comm1")!=null)
            //    row.createCell(26).setCellValue(comm.doubleValue());
            //if (h.getFieldValueByFieldNameBD("nd_feebase1")!=null)
            //    row.createCell(27).setCellValue(feebase.doubleValue());
            if (h.getFieldValueByFieldNameST("ref1d") != null) {
                row.createCell(28).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1d")));
            }
            if (h.getFieldValueByFieldNameST("ref2d") != null) {
                row.createCell(29).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
            }
            if (h.getFieldValueByFieldNameST("ref3d") != null) {
                row.createCell(30).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3d")));
            }
            if (h.getFieldValueByFieldNameST("ref4d") != null) {
                row.createCell(31).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4d")));
            }
            if (h.getFieldValueByFieldNameST("ref5d") != null) {
                row.createCell(32).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5d")));
            }
            if (h.getFieldValueByFieldNameST("ref6d") != null) {
                row.createCell(33).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6d")));
            }
            if (h.getFieldValueByFieldNameST("ref7d") != null) {
                row.createCell(34).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
            }
            if (h.getFieldValueByFieldNameST("ref8d") != null) {
                row.createCell(35).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8d")));
            }
            if (h.getFieldValueByFieldNameST("ref10") != null) {
                row.createCell(36).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref10")));
            }
            if (h.getFieldValueByFieldNameST("ref11") != null) {
                row.createCell(37).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref11")));
            }
            if (h.getFieldValueByFieldNameST("risk_class") != null) {
                row.createCell(38).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("risk_class")));
            }
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(39).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            if (h.getFieldValueByFieldNameDT("refd2") != null) {
                row.createCell(40).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            }
            if (h.getFieldValueByFieldNameDT("refd3") != null) {
                row.createCell(41).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            }
            row.createCell(42).setCellValue(h.getFieldValueByFieldNameST("years"));
            row.createCell(43).setCellValue(h.getFieldValueByFieldNameST("endorse_notes"));
            if (h.getFieldValueByFieldNameBD("order_no") != null) {
                row.createCell(44).setCellValue(h.getFieldValueByFieldNameBD("order_no").doubleValue());
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_PAKREASI() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.cc_code as cabang,a.policy_date as tgl_polis,a.pol_no as no_polis,b.ref1 as nama,"
                + "b.refd1 as tgl_lhr,b.refd2 as tgl_cair,b.refd3 as tgl_akhir,b.ref2 as umur,b.ref4 as lama,b.insured_amount,"
                + "getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as premi100,getpremi2(a.pol_type_id = 21,b.refn2) as premi_ko,getpremi2(a.pol_type_id = 21,b.refn9) as comm_ko,a.kreasi_type_desc as jenis_kredit");

        sqa.addQuery(" from ins_policy a"
                + " inner join ins_pol_obj b on b.pol_id  = a.pol_id ");

        sqa.addClause(" a.status in ('POLICY','ENDORSE','RENEWAL') ");
        sqa.addClause(" a.active_flag='Y' and a.effective_flag='Y' ");
        sqa.addClause(" a.pol_type_id in (21,59) ");
        sqa.addClause(" (b.refn2 <> '0' or b.refn6 <> 0 or b.premi_total <> 0) ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        final String sql = sqa.getSQL() + " order by a.cc_code,a.pol_no,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_PAKREASI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("tgl_polis");
            row0.createCell(2).setCellValue("no_polis");
            row0.createCell(3).setCellValue("nama");
            row0.createCell(4).setCellValue("tgl_lhr");
            row0.createCell(5).setCellValue("tgl_cair");
            row0.createCell(6).setCellValue("tgl_akhir");
            row0.createCell(7).setCellValue("umur");
            row0.createCell(8).setCellValue("lama");
            row0.createCell(9).setCellValue("insured_amount");
            row0.createCell(10).setCellValue("premi100");
            row0.createCell(11).setCellValue("premi_ko");
            row0.createCell(12).setCellValue("comm_ko");
            row0.createCell(13).setCellValue("jenis_kredit");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("tgl_polis"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("no_polis"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("nama"));
            if (h.getFieldValueByFieldNameDT("tgl_lhr") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("tgl_lhr"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_cair") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tgl_cair"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_akhir") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("tgl_akhir"));
            }
            if (h.getFieldValueByFieldNameST("umur") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("umur"));
            }
            if (h.getFieldValueByFieldNameST("lama") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("lama"));
            }
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi100") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi100").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_ko") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("premi_ko").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("comm_ko") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("comm_ko").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jenis_kredit") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("jenis_kredit"));
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_REKAP_GABUNGAN() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.cc_code,a.pol_type_id,"
                + "sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = " select x.cc_code,x.description as cabang,e.pol_type_id,e.description,"
                + " sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                + " sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                + " sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                + " sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                + " sum(premi-diskon) as premi_total_adisc "
                + " from ins_policy_types e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id "
                + " ) z on z.pol_type_id = e.pol_type_id "
                + " inner join gl_cost_center x on x.cc_code = z.cc_code "
                + " group by x.cc_code,x.description,e.pol_type_id,e.description order by x.cc_code,e.pol_type_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_GABUNGAN() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String jenpol = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            XSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("pol_type_id");
            row0.createCell(3).setCellValue("description");
            row0.createCell(4).setCellValue("umum");
            row0.createCell(5).setCellValue("pemda");
            row0.createCell(6).setCellValue("perusda");
            row0.createCell(7).setCellValue("bpd");
            row0.createCell(8).setCellValue("jumlah");

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(2).setCellValue(jenpol);
            row.createCell(3).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList PRINCIPAL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.ref1 as prod_name,a.ins_policy_type_grp_id,"
                + "sum(getpremi(a.status = 'ENDORSE',a.insured_amount_e,a.insured_amount)) as insured_amount,sum(a.premi_total) as premi_total");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " inner join ent_master c on c.ent_id = a.entity_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'");
        sqa.addClause("a.ins_policy_type_grp_id in (7,8) and a.pol_type_id not in (59) ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end::date+30::integer) > ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end::date+30::integer) < ?");
            sqa.addPar(periodEndTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stMarketerID);
        }

        final String sql = sqa.getSQL() + " group by b.ref1,a.ins_policy_type_grp_id "
                + " order by b.ref1,a.ins_policy_type_grp_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_PRINCIPAL_OLD() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.entity_id,c.ent_name as cust_name,b.ref2,b.ref1 as prod_name,a.ins_policy_type_grp_id,"
                + "sum(getpremi(a.status = 'ENDORSE',a.insured_amount_e,a.insured_amount)) as insured_amount,sum(a.premi_total) as premi_total,"
                + "a.period_start,a.period_end ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " inner join ent_master c on c.ent_id = a.entity_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y'");
        sqa.addClause("a.ins_policy_type_grp_id in (7,8)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end::date+30::integer) > ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end::date+30::integer) < ?");
            sqa.addPar(periodEndTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stMarketerID);
        }

        final String sql = sqa.getSQL() + " group by a.entity_id,c.ent_name,b.ref2,b.ref1,a.ins_policy_type_grp_id,a.period_start,a.period_end "
                + " order by b.ref2,a.ins_policy_type_grp_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_PRINCIPAL_OLD() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String groupID = null;
        String surety = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            XSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("ID Obligee");
            row0.createCell(1).setCellValue("Obligee Name");
            row0.createCell(2).setCellValue("ID Principal");
            row0.createCell(3).setCellValue("Principal Name");
            row0.createCell(4).setCellValue("Type Group");
            row0.createCell(5).setCellValue("Period Start");
            row0.createCell(6).setCellValue("Period End");
            row0.createCell(7).setCellValue("Insured");
            row0.createCell(8).setCellValue("Premium");

            groupID = String.valueOf(h.getFieldValueByFieldNameBD("ins_policy_type_grp_id"));
            if (groupID.equalsIgnoreCase("7")) {
                surety = "SB";
            } else {
                surety = "KBG";
            }

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("prod_name"));
            row.createCell(4).setCellValue(surety);
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList RISK_CONTROL() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.period_start,a.period_end,a.ccy,a.insured_amount,b.insured_amount as insured_amount_e,b.premi_total as premi_total,"
                + "b.ref9d as kode_pos,getpostcode(a.pol_type_id,b.ref7,coalesce(null,'')) as kode_acc,"
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (6,105),z.insured_amount)) "
                + "	from ins_policy x "
                + "	inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + "	inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + "	where y.ins_pol_obj_id=b.ins_pol_obj_id) as total_due, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (39,40,106),z.insured_amount)) "
                + "	from ins_policy x "
                + "	inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + "	inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + "	where y.ins_pol_obj_id=b.ins_pol_obj_id) as total_fee, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id in (56,57,58),z.insured_amount)) "
                + "	from ins_policy x "
                + "	inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + "	inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + "	where y.ins_pol_obj_id=b.ins_pol_obj_id) as premi_rate, "
                + "(	select sum(getkoas(z.ins_tsi_cat_id not in (2,12,21,23,25,27,29,30,33,34,35,44,79,95,97,98,103,108,109),z.insured_amount)) "
                + "	from ins_policy x "
                + "	inner join ins_pol_obj y on y.pol_id = x.pol_id "
                + "	inner join ins_pol_tsi z on z.ins_pol_obj_id = y.ins_pol_obj_id "
                + "	where y.ins_pol_obj_id=b.ins_pol_obj_id) as premi_netto, "
                + "sum(checkreas(j.treaty_type='BPDAN',i.premi_amount)) as premi_bpdan, "
                + "sum(checkreas(j.treaty_type='PARK',i.premi_amount)) as premi_park, "
                + "sum(checkreas(j.treaty_type='OR',i.premi_amount)) as premi_or, "
                + "sum(checkreas(j.treaty_type='SPL',i.premi_amount)) as premi_spl, "
                + "sum(checkreas(j.treaty_type='FAC',i.premi_amount)) as premi_fac");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join  ins_zone_limit d on d.zone_id = getzone3(a.pol_type_id in (1,81), b.ref7)::bigint "
                + "left join  ins_risk_cat e on e.ins_risk_cat_id = b.ins_risk_cat_id "
                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause(" a.active_flag = 'Y'");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(periodEndTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stPostCode != null) {
            sqa.addClause("b.ref9 = ?");
            sqa.addPar(stPostCode);
        }

        if (stPostCodeDesc2 != null) {
            sqa.addClause("b.ref9d = ?");
            sqa.addPar(stPostCodeDesc2);
        }

        if (stZoneCode != null) {
            sqa.addClause("b.ref7 = ?");
            sqa.addPar(stZoneCode);
        }

        if (stZoneEquakeName != null) {
            sqa.addClause("b.ref2d = ?");
            sqa.addPar(stZoneEquakeName);
        }

        if (stRiskCode != null) {
            sqa.addClause("e.ins_risk_cat_code = ?");
            sqa.addPar(stRiskCode);
        }


        final String sql = sqa.getSQL() + " group by a.pol_no,a.period_start,a.period_end,a.ccy,a.insured_amount,b.insured_amount,b.premi_total,b.ins_pol_obj_id,a.pol_type_id,b.ref7,b.ref9d "
                + "order by a.pol_no,b.ins_pol_obj_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public String getStRegion() {
        return stRegion;
    }

    public void setStRegion(String stRegion) {
        this.stRegion = stRegion;
    }

    public String getStRegionDesc() {
        return stRegionDesc;
    }

    public void setStRegionDesc(String stRegionDesc) {
        this.stRegionDesc = stRegionDesc;
    }

    public boolean isCanNavigateBranch() {
        return canNavigateBranch;
    }

    public void setCanNavigateBranch(boolean canNavigateBranch) {
        this.canNavigateBranch = canNavigateBranch;
    }

    public String getStRegionName() {
        return stRegionName;
    }

    public void setStRegionName(String stRegionName) {
        this.stRegionName = stRegionName;
    }

    public DTOList EXCEL_REKAP_JENIS_PLUSKLAIM() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.pol_type_id,"
                + "case when a.status in ('POLICY','ENDORSE','RENEWAL') then sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) else 0 end as premi,"
                + "case when a.status in ('POLICY','ENDORSE','RENEWAL') then sum(getpremiend(d.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0)+coalesce(a.nd_disc2*a.ccy_rate,0)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) else 0 end as diskon,"
                + "case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA' and d.entity_id = 1 then sum(a.claim_amount*a.ccy_rate) else 0 end as claim ");

        sqa.addQuery(" from ins_policy a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.effective_flag='Y' and a.pol_no is not null");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql =
                " select e.pol_type_id,e.description,"
                + " sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                + " sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                + " sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                + " sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                + " sum(premi-diskon) as premi_total_adisc,"
                + " sum(getkoas(bus_source='1',claim)) as nd_taxcomm1, "
                + " sum(getkoas(bus_source='2',claim)) as nd_taxcomm2, "
                + " sum(getkoas(bus_source='3',claim)) as nd_taxcomm3, "
                + " sum(getkoas(bus_source='4',claim)) as nd_taxcomm4, "
                + " sum(claim) as claim "
                + " from ins_policy_types e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.pol_type_id,a.status,a.claim_status,d.entity_id "
                + " ) z on z.pol_type_id = e.pol_type_id "
                + " group by e.pol_type_id,e.description order by e.pol_type_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_JENIS_PLUSKLAIM() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String jenpol = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stBranch != null) {
                row2.createCell(0).setCellValue(getCostCenter().getStDescription().toUpperCase());
            }

            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("pol_type_id");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("produksi umum");
            row0.createCell(3).setCellValue("produksi pemda");
            row0.createCell(4).setCellValue("produksi perusda");
            row0.createCell(5).setCellValue("produksi bpd");
            row0.createCell(6).setCellValue("jumlah produksi");
            row0.createCell(7).setCellValue("klaim umum");
            row0.createCell(8).setCellValue("klaim pemda");
            row0.createCell(9).setCellValue("klaim perusda");
            row0.createCell(10).setCellValue("klaim bpd");
            row0.createCell(11).setCellValue("jumlah klaim");

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(jenpol);
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm1") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm2") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm3") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm4") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("claim") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("claim").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_CAB_PLUSKLAIM() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.cc_code,"
                + "case when a.status in ('POLICY','ENDORSE','RENEWAL') then sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) else 0 end as premi,"
                + "case when a.status in ('POLICY','ENDORSE','RENEWAL') then sum(getpremiend(d.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0)+coalesce(a.nd_disc2*a.ccy_rate,0)),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) else 0 end as diskon,"
                + "case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA' and d.entity_id = 1 then sum(a.claim_amount*a.ccy_rate) else 0 end as claim ");

        sqa.addQuery(" from ins_policy a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.effective_flag='Y' and a.pol_no is not null");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql =
                " select e.cc_code,e.description,"
                + " sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                + " sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                + " sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                + " sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                + " sum(premi-diskon) as premi_total_adisc,"
                + " sum(getkoas(bus_source='1',claim)) as nd_taxcomm1, "
                + " sum(getkoas(bus_source='2',claim)) as nd_taxcomm2, "
                + " sum(getkoas(bus_source='3',claim)) as nd_taxcomm3, "
                + " sum(getkoas(bus_source='4',claim)) as nd_taxcomm4, "
                + " sum(claim) as claim "
                + " from gl_cost_center e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.cc_code,a.status,a.claim_status,d.entity_id "
                + " ) z on z.cc_code = e.cc_code "
                + " group by e.cc_code,e.description order by e.cc_code ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_CAB_PLUSKLAIM() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String jenpol = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stBranch != null) {
                row2.createCell(0).setCellValue(getCostCenter().getStDescription().toUpperCase());
            }

            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("kode");
            row0.createCell(1).setCellValue("description");
            row0.createCell(2).setCellValue("produksi umum");
            row0.createCell(3).setCellValue("produksi pemda");
            row0.createCell(4).setCellValue("produksi perusda");
            row0.createCell(5).setCellValue("produksi bpd");
            row0.createCell(6).setCellValue("jumlah produksi");
            row0.createCell(7).setCellValue("klaim umum");
            row0.createCell(8).setCellValue("klaim pemda");
            row0.createCell(9).setCellValue("klaim perusda");
            row0.createCell(10).setCellValue("klaim bpd");
            row0.createCell(11).setCellValue("jumlah klaim");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm1") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm2") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm3") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_taxcomm4") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("claim") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("claim").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public RegionView getRegion() {
        final RegionView region = (RegionView) DTOPool.getInstance().getDTO(RegionView.class, stRegion);

        return region;
    }

    public DTOList RPP_CABANG100() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("cc_code, "
                + "	sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                + "	sum(checkreas(status='ENDORSE',pol_no)) as jumlah, "
                + "	sum(insured_amount) as insured_amount, "
                + "	sum(premi_amt) as premi_amt, "
                + "	sum(nd_pcost) as nd_pcost, "
                + "	sum(nd_sfee) as nd_sfee, "
                + "	sum(diskon_premi) as diskon_premi, "
                + "	sum(nd_feebase1) as nd_feebase1, "
                + "	sum(nd_hfee) as nd_hfee, "
                + "	sum(komisi) as komisi, "
                + "	sum(brok) as brok,sum(nd_taxcomm1) as tax "
                + "	from (  "
                + "	select a.cc_code,count(a.pol_no) as pol_no,a.status, "
                + "	coalesce(a.insured_amount*a.ccy_rate,0) as insured_amount, "
                + "	coalesce(a.premi_total*a.ccy_rate,0) as premi_amt, "
                + "	coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost,  "
                + "	coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee,  "
                + "	coalesce(a.nd_disc1*a.ccy_rate,0) as diskon_premi, "
                + "     coalesce(a.nd_feebase1*a.ccy_rate,0) as nd_feebase1, "
                + "	coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee, "
                + "	coalesce(a.nd_comm1*a.ccy_rate,0) as komisi, "
                + "	coalesce(a.nd_brok1*a.ccy_rate,0) as brok, "
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1,"
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3 ");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        final String sql = sqa.getSQL() + " group by a.cc_code,a.pol_id,a.pol_no,a.status,a.ccy_rate,a.insured_amount,a.premi_total,a.nd_pcost,"
                + " a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,a.nd_feebase1,a.nd_brok1,a.nd_taxcomm1,a.pol_no "
                + " order by a.cc_code,a.pol_no "
                + " ) x group by cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXCEL_RPP_CABANG100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("c.description as cabang,a.cc_code, "
                + " count(a.pol_no) as pol_no,a.status, "
                + " coalesce(a.insured_amount*a.ccy_rate,0) as insured_amount, "
                + " coalesce(a.premi_total*a.ccy_rate,0) as premi_amt, "
                + " coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost, "
                + " coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee, "
                + " coalesce(a.nd_disc1*a.ccy_rate,0) as diskon_premi, "
                + " coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee, "
                + " coalesce(a.nd_comm1*a.ccy_rate,0) as nd_comm1, "
                + " coalesce(a.nd_brok1*a.ccy_rate,0) as brok, "
                + " coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase, "
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (1,4,7)) as nd_taxcomm1,"
                + " (select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32,12,19,26,33,88,89,90,13,20,27,34,100,105,106,107,108) and x.tax_code in (2,5,8)) as nd_taxcomm3 ");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + "	inner join gl_cost_center c on c.cc_code = a.cc_code "
                + " left join ent_master f on f.ent_id = a.prod_id "
                + " inner join ins_policy_types k on k.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        String sql = "select cabang, "
                + " sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                + " sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
                + " sum(insured_amount) as insured_amount, "
                + " sum(premi_amt) as premi, "
                + " sum(nd_pcost) as biapol, "
                + " sum(nd_sfee) as biamat, "
                + " sum(diskon_premi) as diskon, "
                + " sum(brok) as brok, "
                + " sum(nd_hfee) as hfee, "
                + " sum(nd_comm1) as komisi,sum(nd_taxcomm1+nd_taxcomm3) as tax, "
                + " sum(feebase) as feebase "
                + " from (" + sqa.getSQL()
                + " group by a.cc_code,c.description,a.pol_id,a.pol_no,a.status,a.ccy_rate,a.insured_amount,"
                + "a.premi_total,a.nd_pcost,a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,a.nd_feebase1,a.nd_brok1 order by a.cc_code,a.pol_no "
                + " ) x group by cabang,cc_code "
                + " order by cc_code,cabang";

        /*
        final String sql = "select cabang, "
        + " sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
        + " sum(checkreas(status='ENDORSE',pol_no)) as endorse, "
        + " sum(premi_amt) as premi_amt, "
        + " sum(nd_pcost) as nd_pcost, "
        + " sum(nd_sfee) as nd_sfee, "
        + " sum(diskon_premi) as diskon_premi, "
        + " sum(nd_hfee) as nd_hfee, "
        + " sum(nd_comm1) as komisi,sum(feebase) as feebase, "
        + " sum(brok) as brok,sum(nd_taxcomm1+nd_taxcomm3) as tax "
        + " from (" + sqa.getSQL()
        + " group by a.cc_code,a.pol_id,a.pol_no,a.status,a.ccy_rate,a.premi_total,a.nd_pcost,"
        + " a.nd_sfee,a.nd_disc1,a.nd_hfee,a.nd_comm1,a.nd_feebase1,"
        + " a.nd_brok1,a.nd_taxcomm1,a.pol_no,c.description "
        + " order by a.cc_code,a.pol_no "
        + " ) x group by cabang,cc_code "
        + " order by cc_code,cabang";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rekap_cabang100_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXPORT_RPP_CABANG100() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("premi");
            row0.createCell(4).setCellValue("bpol");
            row0.createCell(5).setCellValue("bmat");
            row0.createCell(6).setCellValue("diskon");
            row0.createCell(7).setCellValue("hfee");
            row0.createCell(8).setCellValue("komisi");
            row0.createCell(9).setCellValue("feebase");
            row0.createCell(10).setCellValue("bfee");
            row0.createCell(11).setCellValue("pajak");


            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());


        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public boolean isCanNavigateRegion() {
        return canNavigateRegion;
    }

    public void setCanNavigateRegion(boolean canNavigateRegion) {
        this.canNavigateRegion = canNavigateRegion;
    }

    public DTOList EXCEL_REKAPCAB100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.cc_code,a.region_id,"
                + "sum((a.premi_total*a.ccy_rate)) as premi,"
                + "sum((a.nd_disc1*a.ccy_rate)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("a.ref12 = 'Y'");
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.create_who <> 'administrator'");
        }

        String sql = " select e.cc_code,e.region_code2,e.desc2 as description, "
                + " sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                + " sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                + " sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                + " sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                + " sum(getkoas(bus_source='1',diskon)) as nd_disc1,"
                + " sum(getkoas(bus_source='2',diskon)) as nd_disc2,"
                + " sum(getkoas(bus_source='3',diskon)) as nd_disc3,"
                + " sum(getkoas(bus_source='4',diskon)) as nd_disc4,"
                + " sum(premi) as premi, sum(diskon) as diskon "
                + " from s_region e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.cc_code,a.region_id "
                + " ) a on a.region_id = e.region_id "
                + " where e.active_flag = 'Y' "
                + " group by e.cc_code,e.desc2,e.region_code2 "
                + " order by e.cc_code,e.region_code2 ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAPCAB100() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("outlet");
            row0.createCell(2).setCellValue("cabang");
            row0.createCell(3).setCellValue("umum");
            row0.createCell(4).setCellValue("pemda");
            row0.createCell(5).setCellValue("perusda");
            row0.createCell(6).setCellValue("bpd");
            row0.createCell(7).setCellValue("jumlah");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("region_code2"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAPCABADISC100() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal premi_umum = new BigDecimal(0);
        BigDecimal premi_pemda = new BigDecimal(0);
        BigDecimal premi_perusda = new BigDecimal(0);
        BigDecimal premi_bpd = new BigDecimal(0);
        BigDecimal premi_adisc = new BigDecimal(0);
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("outlet");
            row0.createCell(2).setCellValue("cabang");
            row0.createCell(3).setCellValue("umum");
            row0.createCell(4).setCellValue("pemda");
            row0.createCell(5).setCellValue("perusda");
            row0.createCell(6).setCellValue("bpd");
            row0.createCell(7).setCellValue("jumlah");

            premi_umum = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_disc1"));
            premi_pemda = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm2"), h.getFieldValueByFieldNameBD("nd_disc2"));
            premi_perusda = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_disc3"));
            premi_bpd = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm4"), h.getFieldValueByFieldNameBD("nd_disc4"));
            premi_adisc = BDUtil.sub(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("diskon"));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("region_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (premi_umum != null) {
                row.createCell(3).setCellValue(premi_umum.doubleValue());
            }
            if (premi_pemda != null) {
                row.createCell(4).setCellValue(premi_pemda.doubleValue());
            }
            if (premi_perusda != null) {
                row.createCell(5).setCellValue(premi_perusda.doubleValue());
            }
            if (premi_bpd != null) {
                row.createCell(6).setCellValue(premi_bpd.doubleValue());
            }
            if (premi_adisc != null) {
                row.createCell(7).setCellValue(premi_adisc.doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAPTYPE100() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.pol_type_id,"
                + "sum((a.premi_total*a.ccy_rate)) as premi,"
                + "sum((a.nd_disc1*a.ccy_rate)) as diskon ");

        sqa.addQuery(" from ins_policy a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " left join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (Tools.isYes(stABAFlag)) {
            sqa.addClause("a.ref12 = 'Y'");
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.create_who <> 'administrator'");
        }

        String sql = " select e.pol_type_id,e.description, "
                + " sum(getkoas(bus_source='1',premi)) as nd_comm1,"
                + " sum(getkoas(bus_source='2',premi)) as nd_comm2,"
                + " sum(getkoas(bus_source='3',premi)) as nd_comm3,"
                + " sum(getkoas(bus_source='4',premi)) as nd_comm4,"
                + " sum(getkoas(bus_source='1',diskon)) as nd_disc1,"
                + " sum(getkoas(bus_source='2',diskon)) as nd_disc2,"
                + " sum(getkoas(bus_source='3',diskon)) as nd_disc3,"
                + " sum(getkoas(bus_source='4',diskon)) as nd_disc4,"
                + " sum(premi) as premi, sum(diskon) as diskon "
                + " from ins_policy_types e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.pol_type_id "
                + " ) a on a.pol_type_id = e.pol_type_id "
                + " group by e.pol_type_id,e.description "
                + " order by e.pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAPTYPE100() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String jenpol = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStBranch().toUpperCase());
            }

            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("kode");
            row0.createCell(1).setCellValue("jenis");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("jumlah");

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(jenpol);
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public void EXPORT_REKAPTYPEADISC100() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        String jenpol = null;
        BigDecimal premi_umum = new BigDecimal(0);
        BigDecimal premi_pemda = new BigDecimal(0);
        BigDecimal premi_perusda = new BigDecimal(0);
        BigDecimal premi_bpd = new BigDecimal(0);
        BigDecimal premi_adisc = new BigDecimal(0);
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            XSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStBranch().toUpperCase());
            }

            XSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("kode");
            row0.createCell(1).setCellValue("jenis");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("jumlah");

            jenpol = String.valueOf(h.getFieldValueByFieldNameBD("pol_type_id"));
            if (jenpol.length() == 1) {
                jenpol = "0" + jenpol;
            } else {
                jenpol = jenpol;
            }

            premi_umum = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_disc1"));
            premi_pemda = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm2"), h.getFieldValueByFieldNameBD("nd_disc2"));
            premi_perusda = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_disc3"));
            premi_bpd = BDUtil.sub(h.getFieldValueByFieldNameBD("nd_comm4"), h.getFieldValueByFieldNameBD("nd_disc4"));
            premi_adisc = BDUtil.sub(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("diskon"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(jenpol);
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (premi_umum != null) {
                row.createCell(2).setCellValue(premi_umum.doubleValue());
            }
            if (premi_pemda != null) {
                row.createCell(3).setCellValue(premi_pemda.doubleValue());
            }
            if (premi_perusda != null) {
                row.createCell(4).setCellValue(premi_perusda.doubleValue());
            }
            if (premi_bpd != null) {
                row.createCell(5).setCellValue(premi_bpd.doubleValue());
            }
            if (premi_adisc != null) {
                row.createCell(6).setCellValue(premi_adisc.doubleValue());
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_ABA_BAYAR() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("b.* ");

        sqa.addQuery(" from aba_produk a "
                + " inner join aba_bayar1 b on b.pol_id = a.pol_id "
                + " left join ins_policy c on c.pol_id = a.pol_id ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.tglpol) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.tglpol) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("c.cc_code = ? ");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("c.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("c.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("c.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("c.pol_no = ?");
            sqa.addPar(stPolicyNo);
        }

        final String sql = sqa.getSQL() + " order by a.nopol,b.konter,a.kodeko ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_ABA_BAYAR() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("bayar");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("nopol");
            row0.createCell(1).setCellValue("konter");
            row0.createCell(2).setCellValue("kodeko");
            row0.createCell(3).setCellValue("preto");
            row0.createCell(4).setCellValue("jtempo");
            row0.createCell(5).setCellValue("komisi");
            row0.createCell(6).setCellValue("diskon");
            row0.createCell(7).setCellValue("h_fee");
            row0.createCell(8).setCellValue("b_fee");
            row0.createCell(9).setCellValue("feebase");
            row0.createCell(10).setCellValue("pol_id");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("nopol"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("konter").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("kodeko"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("preto").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("jtempo"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("h_fee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("b_fee").doubleValue());
            if (h.getFieldValueByFieldNameBD("feebase") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            }
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());


        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public String getStTriwulan() {
        return stTriwulan;
    }

    public void setStTriwulan(String stTriwulan) {
        this.stTriwulan = stTriwulan;
    }

    public void EXCEL_LOSS_PROFILE_PAKREASI() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.*,b.dla_no,b.klaim,b.tgl_klaim,b.prod_klaim,b.status from ( "
                + " select c.description as cabang,a.cc_code as koda,a.region_id,a.pol_type_id,d.vs_description as group,f.ent_name as name,"
                + " a.period_start,a.policy_date as tgl_polis,';'||a.pol_no as no_polis,b.rekap_kreasi,b.ref1 as nama,b.order_no,"
                + " row_number() over(partition by a.pol_no,b.rekap_kreasi order by a.cc_code,a.pol_no,b.rekap_kreasi,b.ins_pol_obj_id) AS nomor,"
                + " b.refd1 as tgl_lahir,b.refd2 as tgl_awal,b.refd3 as tgl_akhir,b.ref2 as umur,"
                + " (case when a.pol_type_id = 21 then b.ref4 else b.ref5 end) as tahun,"
                + " coalesce(b.ref8,a.coinsurer_id) as kodeko,e.short_name as coins,"
                + " (case when a.pol_type_id = 21 then b.refn4 else b.refn3 end) as tsi,"
                + " (case when a.pol_type_id = 21 then b.refn6 else b.refn4 end) as premi100,"
                + " (case when a.pol_type_id = 21 then (b.refn6-b.refn2) else 0 end) as premi,"
                + " (case when a.pol_type_id = 21 then b.refn2 else 0 end) as koas,"
                + " (case when a.pol_type_id = 21 then b.refn9 else 0 end) as comm,"
                + " (select coalesce(sum(premi),0)"
                + " from ins_policy x"
                + " inner join ins_pol_cover z on x.pol_id = z.pol_id where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_cover_id in (78)) as pa,"
                + " (select coalesce(sum(premi),0)"
                + " from ins_policy x"
                + " inner join ins_pol_cover z on x.pol_id = z.pol_id where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_cover_id = 124) as phk,"
                + " (select coalesce(sum(premi),0)"
                + " from ins_policy x"
                + " inner join ins_pol_cover z on x.pol_id = z.pol_id where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_cover_id = 125) as paw,"
                + " (select coalesce(sum(premi),0)"
                + " from ins_policy x"
                + " inner join ins_pol_cover z on x.pol_id = z.pol_id where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_cover_id = 126) as santunan,"
                + " (select coalesce(sum(premi),0)"
                + " from ins_policy x"
                + " inner join ins_pol_cover z on x.pol_id = z.pol_id where z.ins_pol_obj_id = b.ins_pol_obj_id and z.ins_cover_id = 209) as other,"
                + " a.kreasi_type_desc as jenis_kredit,g.division as keterangan ");

        String sql = " ) a left join ( "
                + " select d.description as cabang,a.cc_code as koda,a.pol_type_id,a.pol_no as no_polis,b.ref1 as nama, "
                + " a.dla_no,a.claim_amount as klaim,a.claim_date as tgl_klaim,a.claim_approved_date as prod_klaim,c.cause_desc as status "
                + " from ins_policy a "
                + " inner join ins_pol_obj b on b.ins_pol_obj_id = a.claim_object_id "
                + " left join ins_clm_cause c on c.ins_clm_caus_id = a.claim_cause "
                + " left join gl_cost_center d on d.cc_code = a.cc_code "
                + " where a.status IN ('CLAIM') and a.effective_flag='Y' and a.pol_type_id in (21,59) and a.claim_status = 'DLA' ";

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id"
                + " left join gl_cost_center c on c.cc_code = a.cc_code "
                + " left join ent_master f on f.ent_id = a.entity_id "
                + " left join s_company_group d on d.vs_code::text = f.ref2 "
                + " left join ent_master e on e.ent_id::text = coalesce(a.coinsurer_id,b.ref8) "
                + " left join s_valueset g on g.vs_code = a.kreasi_type_id and g.vs_group = 'INSOBJ_KREASI_KREDIT' ");

        sqa.addClause("a.status IN ('POLICY','RENEWAL','ENDORSE')");
        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("a.pol_type_id in (21,59)");
        sqa.addClause("a.cc_code <> '00'");
        sqa.addClause("(b.refn2 <> 0 or b.refn6 <> 0 or b.refn9 <> 0 or b.premi_total <> 0)");

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',b.refd2) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',b.refd2) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        sql = sqa.getSQL() + sql + " ) b on b.no_polis||b.nama = a.no_polis||a.nama where a.pol_type_id in (21,59) ";

        if (getPolicyDateFrom() != null) {
            sql = sql + " and date_trunc('day',a.tgl_polis) >= '" + policyDateFrom + "'";
            //sqa.addPar(policyDateFrom);
        }

        if (getPolicyDateTo() != null) {
            sql = sql + " and date_trunc('day',a.tgl_polis) <= '" + policyDateTo + "'";
            //sqa.addPar(policyDateTo);
        }

        if (getPeriodFrom() != null) {
            sql = sql + " and date_trunc('day',a.tgl_awal) >= '" + periodFrom + "'";
            //sqa.addPar(periodFrom);
        }

        if (getPeriodTo() != null) {
            sql = sql + " and date_trunc('day',a.tgl_awal) <= '" + periodTo + "'";
            //sqa.addPar(periodTo);
        }

        if (getStBranch() != null) {
            sql = sql + " and a.koda = '" + stBranch + "'";
            //sqa.addPar(stBranch);
        }

        if (getStRegion() != null) {
            sql = sql + " and a.region_id = '" + stRegion + "'";
            //sqa.addPar(stRegion);
        }

        sql = sql + " order by a.koda,a.no_polis ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );
        
        SessionManager.getInstance().getRequest().setAttribute("RPT", l);
        
        return l;
         */

        //sql = sql + " order by a.cc_code,a.policy_date,a.pol_no";

        SQLUtil S = new SQLUtil();

        String nama_file = "loss_profile_kreasi_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXPORT_LOSS_PROFILE_PAKREASI() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("bayar");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("koda");
            row0.createCell(2).setCellValue("tgl_polis");
            row0.createCell(3).setCellValue("no_polis");
            row0.createCell(4).setCellValue("rekap_kreasi");
            row0.createCell(5).setCellValue("nama");
            row0.createCell(6).setCellValue("nomor");
            row0.createCell(7).setCellValue("tgl_lahir");
            row0.createCell(8).setCellValue("tgl_awal");
            row0.createCell(9).setCellValue("tgl_akhir");
            row0.createCell(10).setCellValue("umur");
            row0.createCell(11).setCellValue("tahun");
            row0.createCell(12).setCellValue("tsi");
            row0.createCell(13).setCellValue("premi100");
            row0.createCell(14).setCellValue("premi");
            row0.createCell(15).setCellValue("koas");
            row0.createCell(16).setCellValue("comm");
            row0.createCell(17).setCellValue("nd");
            row0.createCell(18).setCellValue("phk");
            row0.createCell(19).setCellValue("paw");
            row0.createCell(20).setCellValue("keterangan");
            row0.createCell(21).setCellValue("dla_no");
            row0.createCell(22).setCellValue("klaim");
            row0.createCell(23).setCellValue("tgl_klaim");
            row0.createCell(24).setCellValue("prod_klaim");
            row0.createCell(25).setCellValue("status");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("koda"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("tgl_polis"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("no_polis"));
            if (h.getFieldValueByFieldNameST("rekap_kreasi") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("rekap_kreasi"));
            }
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("nama"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nomor").doubleValue());
            if (h.getFieldValueByFieldNameDT("tgl_lahir") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("tgl_lahir"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_awal") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameDT("tgl_awal"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_akhir") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameDT("tgl_akhir"));
            }
            if (h.getFieldValueByFieldNameST("umur") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("umur"));
            }
            if (h.getFieldValueByFieldNameST("tahun") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("tahun"));
            }
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("tsi").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("premi100").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("koas").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("comm").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("nd").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("phk").doubleValue());
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("paw").doubleValue());
            row.createCell(20).setCellValue(h.getFieldValueByFieldNameST("keterangan"));
            if (h.getFieldValueByFieldNameST("dla_no") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameST("dla_no"));
            }
            if (h.getFieldValueByFieldNameBD("klaim") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("klaim").doubleValue());
            }
            if (h.getFieldValueByFieldNameDT("tgl_klaim") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameDT("tgl_klaim"));
            }
            if (h.getFieldValueByFieldNameDT("prod_klaim") != null) {
                row.createCell(24).setCellValue(h.getFieldValueByFieldNameDT("prod_klaim"));
            }
            if (h.getFieldValueByFieldNameST("status") != null) {
                row.createCell(25).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("status")));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public String getStCompanyProdID() {
        return stCompanyProdID;
    }

    public void setStCompanyProdID(String stCompanyProdID) {
        this.stCompanyProdID = stCompanyProdID;
    }

    public String getStCompanyProdName() {
        return stCompanyProdName;
    }

    public void setStCompanyProdName(String stCompanyProdName) {
        this.stCompanyProdName = stCompanyProdName;
    }

    public DTOList EXCEL_RPP_COMPANY_AGEN() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code as koda,a.pol_type_id as cob,a.status,g.vs_description as sumbis,"
                + "a.approved_date,a.policy_date as tglpolis,a.period_start as periode_awal,a.period_end as periode_akhir,"
                + "a.pol_id,';'||a.pol_no as pol_no,a.cust_name as tertanggung,e.ent_name as marketingofficer,"
                + "(select string_agg(y.ins_risk_cat_code,'| ') from ( select y.ins_risk_cat_code from ins_pol_obj x "
                + "inner join ins_risk_cat y on y.ins_risk_cat_id = x.ins_risk_cat_id where x.pol_id = a.pol_id group by y.ins_risk_cat_code ) y ) as risk_code,"
                + "a.ccy,a.ccy_rate,i.ent_id as pemasarid,i.ent_name as pemasarname,b.description as cob,c.description as cabang, "
                + "(case when i.business_source_code is null then 'Direct' else h.vs_description end ) as klasifikasi, "
                + "sum(getpremiend(f.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(f.amount*a.ccy_rate,0)*-1)) as insured_amount, "
                + "sum(getpremiend(f.entity_id,a.premi_total*a.ccy_rate,coalesce(f.premi_amt*a.ccy_rate,0)*-1)) as premi_total, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(f.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(f.broker_amount*a.ccy_rate,0)*-1)) as nd_brok1, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(f.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(f.disc_amount*a.ccy_rate,0)*-1)) as nd_disc1, "
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as nd_feebase1,"
                + "sum(getpremiend(f.entity_id,coalesce(a.nd_ppn*a.ccy_rate,0),0)) as nd_ppn ");

        sqa.addQuery(" from ins_policies a "
                + "inner join ins_pol_coins f on f.policy_id = a.pol_id "
                + "inner join ins_policy_types b on b.pol_type_id = a.pol_type_id "
                + "inner join gl_cost_center c on c.cc_code = a.cc_code "
                + "left join ent_master d on d.ent_id = a.entity_id "
                + "left join ent_master e on e.ent_id::text = a.marketing_officer_who "
                + "left join ent_master i on i.ent_id = a.prod_id "
                + "left join s_valueset g on g.vs_code = d.category1 and g.vs_group = 'ASK_BUS_SOURCE' "
                + "left join s_valueset h on h.vs_code = i.business_source_code and h.vs_group = 'BUSINESS_SOURCE_CODE' ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
//            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
//            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
//            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
//            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
//            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
//            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
//                sqa.addClause("a.cc_code = '" + stBranch + "'");
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
//                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
//                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
//                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
//            sqa.addClause("a.region_id = '" + stRegion + "'");
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
//            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
//            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
//            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
//            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
//            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
//            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stMarketerOffID != null) {
//            sqa.addClause("a.marketing_officer_who = '" + stMarketerOffID + "'");
            sqa.addClause("a.marketing_officer_who = ?");
            sqa.addPar(stMarketerOffID);
        }

        if (stBussinessSourceID != null) {
//            sqaR.addClause("a.business_source_id = '" + stBussinessSourceID + "'");
            sqa.addClause("d.business_source_code = ?");
            sqa.addPar(stBussinessSourceID);
        }

        String sql = sqa.getSQL() + " group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 order by a.policy_date,a.cc_code,a.pol_type_id,a.pol_id ";


        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);


        final SQLAssembler sqaR = new SQLAssembler();

        String sqla = "a.cc_code as koda,c.description as cabang,a.cc_code_source as koda_nonaks,g.description as cabang_nonaks,"
                + "a.pol_type_id as jenid,d.description as jenis,f.ent_id as entid,f.ent_name as marketer,f.address as alamat,f.gl_code as glcode, "
                + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,(b.premi_amt*a.ccy_rate)*-1)) as premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as biapol, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as biamat, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                + "(case when f.business_source_code is null then 'Direct' else i.vs_description end )as klasifikasi ";

        sqaR.addSelect(sqla);

//        sqaR.addSelect("c.cc_code,c.description,f.ent_id,f.ent_name as cust_name,f.address,f.gl_code, "
//                + "sum(getpremiend(b.entity_id,a.premi_total*a.ccy_rate,(b.premi_amt*a.ccy_rate)*-1)) as premi_amt, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
//                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1 ");

        sqaR.addQuery(" from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join gl_cost_center c on c.cc_code = a.cc_code "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + " left join ent_master e on e.ent_id = a.entity_id "
                + " left join ent_master f on f.ent_id = a.prod_id "
                + " left join gl_cost_center g on g.cc_code = a.cc_code_source "
                + " left join ent_master h on h.ent_id = a.payment_company_id::int "
                + " left join s_valueset i on i.vs_code = f.business_source_code and i.vs_group = 'BUSINESS_SOURCE_CODE' ");

        sqaR.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqaR.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqaR.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
//            sqaR.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            sqaR.addClause("date_trunc('day',a.period_start) >= ?");
            sqaR.addPar(periodFrom);
        }

        if (periodTo != null) {
//            sqaR.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            sqaR.addClause("date_trunc('day',a.period_start) <= ?");
            sqaR.addPar(periodTo);
        }

        if (policyDateFrom != null) {
//            sqaR.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            sqaR.addClause("date_trunc('day',a.policy_date) >= ?");
            sqaR.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
//            sqaR.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            sqaR.addClause("date_trunc('day',a.policy_date) <= ?");
            sqaR.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
//            sqaR.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            sqaR.addClause("a.ins_policy_type_grp_id = ?");
            sqaR.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
//            sqaR.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            sqaR.addClause("a.pol_type_id = ?");
            sqaR.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
//                sqaR.addClause("a.cc_code = '" + stBranch + "'");
                sqaR.addClause("a.cc_code = ?");
                sqaR.addPar(stBranch);

                if (stBranchSource != null) {
//                    sqaR.addClause("a.cc_code_source = '" + stBranchSource + "'");
                    sqaR.addClause("a.cc_code_source = ?");
                    sqaR.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
//                    sqaR.addClause("a.region_id_source = '" + stRegionSource + "'");
                    sqaR.addClause("a.region_id_source = ?");
                    sqaR.addPar(stRegionSource);
                }
            } else {
//                sqaR.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
                sqaR.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqaR.addPar(stBranch);
                sqaR.addPar(stBranch);
            }
            //sqaR.addPar(stBranch);
        }

        if (stRegion != null) {
//            sqaR.addClause("a.region_id = '" + stRegion + "'");
            sqaR.addClause("a.region_id = ?");
            sqaR.addPar(stRegion);
        }

        if (stFltCoverType != null) {
//            sqaR.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            sqaR.addClause("a.cover_type_code = ?");
            sqaR.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
//            sqaR.addClause("e.category1 = '" + stCustCategory1 + "'");
            sqaR.addClause("e.category1 = ?");
            sqaR.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
//            sqaR.addClause("a.entity_id = '" + stEntityID + "'");
            sqaR.addClause("a.entity_id = ?");
            sqaR.addPar(stEntityID);
        }

        if (stCompanyID != null) {
//            sqaR.addClause("e.ref2 = '" + stCompanyID + "'");
            sqaR.addClause("e.ref2 = ?");
            sqaR.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
//            sqaR.addClause("a.prod_id = '" + stMarketerID + "'");
            sqaR.addClause("a.prod_id = ?");
            sqaR.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
//            sqaR.addClause("f.ref2 = '" + stCompanyProdID + "'");
            sqaR.addClause("f.ref2 = ?");
            sqaR.addPar(stCompanyProdID);
        }

        if (stMarketerOffID != null) {
//            sqaR.addClause("a.marketing_officer_who = '" + stMarketerOffID + "'");
            sqaR.addClause("a.marketing_officer_who = ?");
            sqaR.addPar(stMarketerOffID);
        }

        if (stBussinessSourceID != null) {
//            sqaR.addClause("a.business_source_id = '" + stBussinessSourceID + "'");
            sqaR.addClause("e.business_source_code = ?");
            sqaR.addPar(stBussinessSourceID);
        }

        String sqlR = sqaR.getSQL() + " group by a.cc_code,c.description,a.cc_code_source,g.description,a.pol_type_id,"
                + "d.description,f.ent_id,f.ent_name,f.address,f.gl_code,e.business_source_code,i.vs_description "
                + " order by a.cc_code,f.ent_id ";


        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sqlR,
                sqaR.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        return l;

        /*
        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_companyagen_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
        + sql
        + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
        outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();
         */
    }

    public void EXPORT_RPP_COMPANY_AGEN() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("detil");
        //XSSFSheet sheet2 = wb.createSheet("rekap");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        //final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("klasifikasi");
            row0.createCell(1).setCellValue("namasumberbisnis");
            row0.createCell(2).setCellValue("tertanggung");
            row0.createCell(3).setCellValue("marketingofficer");
            row0.createCell(4).setCellValue("sumbis");
            row0.createCell(5).setCellValue("pol_no");
            row0.createCell(6).setCellValue("periode_awal");
            row0.createCell(7).setCellValue("periode_akhir");
            row0.createCell(8).setCellValue("tsi");
            row0.createCell(9).setCellValue("premi");
            row0.createCell(10).setCellValue("biapol");
            row0.createCell(11).setCellValue("biamat");
            row0.createCell(12).setCellValue("ppn");
            row0.createCell(13).setCellValue("diskon");
            row0.createCell(14).setCellValue("hfee");
            row0.createCell(15).setCellValue("taxhfee");
            row0.createCell(16).setCellValue("bfee");
            row0.createCell(17).setCellValue("taxbfee");
            row0.createCell(18).setCellValue("komisi");
            row0.createCell(19).setCellValue("taxkomisi");
            row0.createCell(20).setCellValue("fbase");
            row0.createCell(21).setCellValue("tagnetto");
            row0.createCell(22).setCellValue("risk_code");
            row0.createCell(23).setCellValue("status");
            row0.createCell(24).setCellValue("cob");
            row0.createCell(25).setCellValue("cabang");

            BigDecimal tagnetto = new BigDecimal(0);

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("klasifikasi"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("pemasarname"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("tertanggung"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("marketingofficer"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("sumbis"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("periode_awal"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("periode_akhir"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("nd_ppn").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("nd_disc1").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("nd_taxhfee").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("nd_brok1").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("nd_taxbrok1").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm1").doubleValue());
            row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase1").doubleValue());
            row.createCell(21).setCellValue(tagnetto.doubleValue());
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("risk_code"));
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(24).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cob")));
            row.createCell(25).setCellValue(h.getFieldValueByFieldNameST("cabang"));
        }

        /*format rekAP lama*/
        /*
        for (int i = 0; i < list2.size(); i++) {
        HashDTO h = (HashDTO) list2.get(i);

        //bikin header
        XSSFRow row0 = sheet2.createRow(0);
        row0.createCell(0).setCellValue("koda");
        row0.createCell(1).setCellValue("cabang");
        row0.createCell(2).setCellValue("koda_nonaks");
        row0.createCell(3).setCellValue("cabang_nonaks");
        row0.createCell(4).setCellValue("jenid");
        row0.createCell(5).setCellValue("jenis");
        row0.createCell(6).setCellValue("entid");
        row0.createCell(7).setCellValue("marketer");
        row0.createCell(8).setCellValue("alamat");
        row0.createCell(9).setCellValue("glcode");
        row0.createCell(10).setCellValue("premi");
        row0.createCell(11).setCellValue("biapol");
        row0.createCell(12).setCellValue("biamat");
        row0.createCell(13).setCellValue("diskon");
        row0.createCell(14).setCellValue("bfee");
        row0.createCell(15).setCellValue("hfee");
        row0.createCell(16).setCellValue("komisi");
        row0.createCell(17).setCellValue("nd_taxcomm");
        row0.createCell(18).setCellValue("feebase");
        row0.createCell(19).setCellValue("klasifikasi");

        //bikin isi cell
        XSSFRow row = sheet2.createRow(i + 1);
        row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("koda"));
        row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
        row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("koda_nonaks"));
        row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("cabang_nonaks"));
        row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("jenid").doubleValue());
        row.createCell(5).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
        row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("entid").doubleValue());
        row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("marketer"));
        row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("alamat"));
        row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("glcode"));
        row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
        row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("biapol").doubleValue());
        row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("biamat").doubleValue());
        row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("diskon").doubleValue());
        row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("bfee").doubleValue());
        row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("hfee").doubleValue());
        row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
        row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("nd_taxcomm").doubleValue());
        row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
        row.createCell(19).setCellValue(h.getFieldValueByFieldNameST("klasifikasi"));

        }*/

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public void EXCEL_DEBITUR_OBJEK() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.pol_id,';'||a.pol_no as pol_no,a.ccy,a.ccy_rate as kurs,b.refd1,b.refd2,b.refd3,b.refd4,b.refd5,b.refd6,"
                + " b.ref1,b.ref2,b.ref2d,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref7d,b.ref8,b.ref9,b.ref9d as postal_code,b.ref10,b.ref11,b.ref13,"
                + " b.ref14,b.ref15,b.ref16,b.ref17,b.ref19,b.ref20,b.ref23,b.ref24,b.ref25,b.ref26,b.ref28,b.ref29,b.ref30,b.refn1,b.refn2,"
                + " b.risk_class,c.ins_risk_cat_code,c.description, a.ccy,a.ccy_rate,b.insured_amount,b.premi_total,d.ent_name as sumbis,e.ent_name as pemasar ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join ins_risk_cat c on b.ins_risk_cat_id = c.ins_risk_cat_id"
                + " left join ent_master d on d.ent_id = a.entity_id "
                + " left join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        sqa.addClause("(b.insured_amount <> 0 or b.premi_total <> 0)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = " + stPolicyTypeGroupID);
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = " + stPolicyTypeID);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = " + stRegion);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("d.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stCompanyID != null) {
            sqa.addClause("d.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("d.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        String sql = sqa.getSQL() + " order by a.cc_code,a.policy_date,a.pol_no ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );
        
        SessionManager.getInstance().getRequest().setAttribute("RPT", l);
        
        return l;
         */

        //sql = sql + " order by a.cc_code,a.policy_date,a.pol_no";

        SQLUtil S = new SQLUtil();

        String nama_file = "debitur_objek_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList VALIDASI_CABANG() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.policy_date,a.pol_no,a.cust_name,a.status,a.effective_flag, "
                + "a.ccy,a.ccy_rate,b.ins_pol_obj_id,b.description,coalesce(a.f_ri_finish,'N') as f_ri_finish, "
                + "b.insured_amount as insured_amount,b.premi_total as premi_total ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join gl_cost_center3 y on y.cc_code = a.cc_code "
                + "inner join ff_table x on x.ref1 = y.role_id and x.active_flag = 'Y' and x.fft_group_id='CAPA' and x.ref4 is null and x.ref2='ACCEPT' ");

//        sqa.addClause(" a.status in ('POLICY','RENEWAL') ");
        sqa.addClause(" a.active_flag = 'Y' ");
        sqa.addClause(" (a.f_ri_finish is null or a.effective_flag = 'N' or a.effective_flag is null)");

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','RENEWAL')");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }
        if (stPolicyTypeID != null) {
            sqa.addClause("x.ref3 = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stValidasi.equalsIgnoreCase("1")) {
            sqa.addClause(" b.insured_amount < x.refn1 ");
        }

        if (stValidasi.equalsIgnoreCase("2")) {
            sqa.addClause(" b.insured_amount > x.refn1 ");
        }

        final String sql = sqa.getSQL() + " order by a.pol_no,b.ins_pol_obj_id ";

        /*
        String sql = null;
        if (stValidasi.equalsIgnoreCase("1")) {
        sql = "select a.policy_date,a.pol_no,a.cust_name,a.status,a.effective_flag,a.f_ri_finish,"
        + "a.ccy,a.ccy_rate,sum(a.insured_amount) as insured_amount,sum(a.premi_total) as premi_total "
        + "from ( " + sqa.getSQL() + " ) a group by a.policy_date,a.pol_no,a.cust_name,"
        + "a.status,a.effective_flag,a.f_ri_finish,a.ccy,a.ccy_rate ";

        sql = sql + " order by a.policy_date,a.pol_no ";
        }

        if (stValidasi.equalsIgnoreCase("2")) {
        sql = "select a.policy_date,a.pol_no,a.cust_name,a.status,a.effective_flag,a.f_ri_finish,"
        + "a.ccy,a.ccy_rate,a.description,a.insured_amount,a.premi_total from ( "
        + sqa.getSQL() + " ) a where a.insured_amount > ( select max(a.refn1) "
        + "from ff_table a "
        + "inner join gl_cost_center3 b on b.role_id = a.ref1 "
        + "where a.active_flag = 'Y' and a.fft_group_id='CAPA' and a.ref4 is null and a.ref2='ACCEPT' ";

        if (getStBranch() != null) {
        sql = sql + " and b.cc_code = ? ";
        sqa.addPar(stBranch);
        }

        if (getStPolicyTypeID() != null) {
        sql = sql + " and a.ref3 = ? ";
        sqa.addPar(stPolicyTypeID);
        }

        sql = sql + " ) order by a.policy_date,a.pol_no,a.ins_pol_obj_id ";
        }*/

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    /**
     * @return the stValidasi
     */
    public String getStValidasi() {
        return stValidasi;
    }

    /**
     * @param stValidasi the stValidasi to set
     */
    public void setStValidasi(String stValidasi) {
        this.stValidasi = stValidasi;
    }

    public void EXPORT_EXPIRED2() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("tanggal polis");
            row0.createCell(1).setCellValue("periode mulai");
            row0.createCell(2).setCellValue("periode akhir");
            row0.createCell(3).setCellValue("no_polis");
            row0.createCell(4).setCellValue("tertanggung");
            row0.createCell(5).setCellValue("okupasi");
            row0.createCell(6).setCellValue("tsi");
            row0.createCell(7).setCellValue("premi");


            BigDecimal comm1 = null;
            BigDecimal comm2 = null;
            BigDecimal bfee = null;
            BigDecimal feebase = null;
            comm1 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm1"), h.getFieldValueByFieldNameBD("nd_comm2"));
            comm2 = BDUtil.add(h.getFieldValueByFieldNameBD("nd_comm3"), h.getFieldValueByFieldNameBD("nd_comm4"));
            bfee = BDUtil.add(h.getFieldValueByFieldNameBD("nd_brok1"), h.getFieldValueByFieldNameBD("nd_brok2"));
            feebase = BDUtil.add(h.getFieldValueByFieldNameBD("nd_feebase1"), h.getFieldValueByFieldNameBD("nd_feebase2"));

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);

            row.createCell(0).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }

            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList REKAP_PERBANDINGAN_DAERAH() throws Exception {

        Calendar policyDateFroms = Calendar.getInstance();
        policyDateFroms.setTime(policyDateFrom != null ? policyDateFrom : new Date());
        policyDateFroms.set(Calendar.YEAR, policyDateFroms.get(Calendar.YEAR) - 1);

        Calendar policyDateTos = Calendar.getInstance();
        policyDateTos.setTime(policyDateTo != null ? policyDateTo : new Date());
        policyDateTos.set(Calendar.YEAR, policyDateTos.get(Calendar.YEAR) - 1);

        int tahunBefore = Integer.parseInt(DateUtil.getYear(policyDateFrom)) - 1; //2022

//        String sql = " select cabang as cc_code, sum(premiold-diskon) as nd_comm1,sum(preminew-diskon2) as nd_comm2 from  (  "
//                + " select e.cc_code as cabang, "
//                + " case when date_trunc('day',a.policy_date) >= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateFroms.getTime()) + "' and date_trunc('day',a.policy_date) <=  '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateTos.getTime()) + "' then sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1)) else 0 end as premiold , "
//                + " case when date_trunc('day',a.policy_date) >= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateFroms.getTime()) + "' and date_trunc('day',a.policy_date) <=  '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateTos.getTime()) + "' then sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) else 0 end as diskon , "
//                + " case when date_trunc('day',a.policy_date) >= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateFrom != null ? policyDateFrom : new Date()) + "' and date_trunc('day',a.policy_date) <=  '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateTo != null ? policyDateTo : new Date()) + "'  then sum(getpremiend(d.entity_id,a.premi_total*a.ccy_rate,d.premi_amt*a.ccy_rate*-1 )) else 0 end as preminew , "
//                + " case when date_trunc('day',a.policy_date) >= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateFrom != null ? policyDateFrom : new Date()) + "' and date_trunc('day',a.policy_date) <=  '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateTo != null ? policyDateTo : new Date()) + "'  then sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) else 0 end as diskon2 "
//                + " from ins_policies a left join ent_master b on b.ent_id = a.entity_id inner join ins_pol_coins d on d.policy_id = a.pol_id left join gl_cost_center e on e.cc_code = a.cc_code"
//                + " where a.status in ('POLICY','ENDORSE','RENEWAL')"
//                + " and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')"
//                + " and date_trunc('day',a.policy_date) >= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateFroms.getTime()) + "' "
//                + " and date_trunc('day',a.policy_date) <= '" + new SimpleDateFormat("yyyy-MM-dd").format(policyDateTo != null ? policyDateTo : new Date()) + "' "
//                + " group by e.cc_code, a.policy_date order by e.cc_code ) n group by cabang order by cabang ";

//        String sql = " select cabang as cc_code, sum(premiold) as nd_comm1,sum(preminew) as nd_comm2 from ( "
//                + "select a.bulan,e.cc_code,e.description as cabang, "
//                + "sum(case when a.tahun = '" + tahunBefore + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as premiold,"
//                + "sum(case when a.tahun = '" + DateUtil.getYear(policyDateFrom) + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as preminew "
//                + "from ins_rekap_produksi_det a left join gl_cost_center e on e.cc_code = a.cc_code "
//                + "group by a.bulan,e.cc_code,e.description order by a.bulan,e.cc_code ) n group by n.cc_code,n.cabang order by n.cc_code ";

        String sql = null;
        if (stBussinessPolType == null) {
            sql = " select cabang as cc_code, sum(premiold) as nd_comm1,sum(preminew) as nd_comm2 from ( "
                    + "select a.bulan,e.cc_code,e.description as cabang, "
                    + "sum(case when a.tahun = '" + tahunBefore + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as premiold,"
                    + "sum(case when a.tahun = '" + DateUtil.getYear(policyDateFrom) + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as preminew "
                    + "from ins_rekap_produksi_det a left join gl_cost_center e on e.cc_code = a.cc_code "
                    + "group by a.bulan,e.cc_code,e.description order by a.bulan,e.cc_code ) n where cc_code is not null group by n.cc_code,n.cabang order by n.cc_code ";
        } else {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = " select cabang as cc_code, sum(premiold) as nd_comm1,sum(preminew) as nd_comm2 from ( "
                        + "select a.bulan,e.cc_code,e.description as cabang, "
                        + "sum(case when a.tahun = '" + tahunBefore + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as premiold,"
                        + "sum(case when a.tahun = '" + DateUtil.getYear(policyDateFrom) + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as preminew "
                        + "from ins_rekap_produksi_det a left join gl_cost_center e on e.cc_code = a.cc_code_source  where a.cc_code = '80'  "
                        + "group by a.bulan,e.cc_code,e.description order by a.bulan,e.cc_code ) n where cc_code is not null group by n.cc_code,n.cabang order by n.cc_code ";
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sql = " select cabang as cc_code, sum(premiold) as nd_comm1,sum(preminew) as nd_comm2 from ( "
                        + "select a.bulan,e.cc_code,e.description as cabang, "
                        + "sum(case when a.tahun = '" + tahunBefore + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as premiold,"
                        + "sum(case when a.tahun = '" + DateUtil.getYear(policyDateFrom) + "' and a.bulan between '" + DateUtil.getMonth2Digit(policyDateFrom) + "' and '" + DateUtil.getMonth2Digit(policyDateTo) + "' then a.premi else 0 end) as preminew "
                        + "from ins_rekap_produksi_det a left join gl_cost_center e on e.cc_code = a.cc_code  where a.cc_code <> '80'  "
                        + "group by a.bulan,e.cc_code,e.description order by a.bulan,e.cc_code ) n where cc_code is not null group by n.cc_code,n.cabang order by n.cc_code ";
            }
        }


        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;


    }

    public DTOList RPP_OJK_LEVEL() throws Exception {
        final boolean ACT_CLAIM = "Y".equalsIgnoreCase((String) refPropMap.get("ACT_CLAIM"));
        final boolean EFF_CLAIM = "Y".equalsIgnoreCase((String) refPropMap.get("EFF_CLAIM"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "a.lvl,a.ref4,a.ref5,coalesce(count(b.pol_no)) as jumlah,"
                + " coalesce(sum(b.premi_amount),0) as premi_amount ");
        /*
        String sql = "left join ( select a.pol_no,"
        + " coalesce((a.insured_amount*a.ccy_rate),0) as insured_amount,  ("
        + " case when date_trunc('day',a.policy_date) >=  '" + appDateFrom + "'"
        + " and date_trunc('day',a.policy_date) <= '" + appDateTo + "'";

        sql = sql + "then coalesce((a.premi_total*a.ccy_rate),0) else 0 end) as premi_amount,  ("
        + " case when date_trunc('day',a.policy_date) >= '" + appDateFrom + "'  "
        + " and date_trunc('day',a.policy_date) <= '" + appDateTo + "' ";
        sql = sql + "  then coalesce((a.premi_total*a.ccy_rate),0) else 0 end) as premi_paid  ";
         */

        String sql = "left join ( select a.pol_no,a.insured_amount,(a.premi_bruto-a.diskon) as premi_amount from ( "
                + "select a.pol_no,sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0)) as insured_amount, "
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_bruto,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(b.disc_amount*a.ccy_rate,0))*-1)) as diskon ";

        sql = sql + " from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
                + " inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 "
                + " where a.status IN ('RENEWAL','ENDORSE','POLICY') and a.active_flag = 'Y' and a.effective_flag = 'Y' "
                + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')"
                + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'"
                + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";

        if (stBranch != null) {
            sql = sql + " and a.cc_code = '" + stBranch + "'";
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sql = sql + " and a.region_id = " + stRegion;
            //sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sql = sql + " and b.ins_policy_type_grp_id = " + stPolicyTypeGroupID;
            //sqa.addPar(stGroupID);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = sql + " and a.cc_code = '80'";
//            sqa.addPar(stBussinessPolType);
            }
        }

        sql = sql + " group by a.pol_no order by a.pol_no ) a ";

        sqa.addQuery(" from band_level a " + sql + " order by a.pol_no   "
                + " ) as b on b.insured_amount between a.ref1 and a.ref2 ");

        if (getStGroupID() != null) {
            sqa.addClause("a.pol_type_grp_id2 = '" + stGroupID + "'");
            //sqa.addPar(stGroupID);
        }

        if (getStGroupID() == null) {
            sqa.addClause("a.pol_type_grp_id2 is null");
            //sqa.addPar(stGroupID);
        }

        sqa.addClause(" a.group_desc = 'OJK'");

        sql = sqa.getSQL() + " group by a.lvl,a.ref4,a.ref5 ";

        sql = sql + " order by a.lvl";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPP_OJK_LEVEL() throws Exception {
        final boolean ACT_CLAIM = "Y".equalsIgnoreCase((String) refPropMap.get("ACT_CLAIM"));
        final boolean EFF_CLAIM = "Y".equalsIgnoreCase((String) refPropMap.get("EFF_CLAIM"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                "a.lvl,a.ref4,a.ref5,coalesce(count(b.pol_no)) as jumlah,"
                + " coalesce(sum(b.premi_amount),0) as premi_amount ");
        /*
        String sql = "left join ( select a.pol_no,"
        + " coalesce((a.insured_amount*a.ccy_rate),0) as insured_amount,  ("
        + " case when date_trunc('day',a.policy_date) >=  '" + appDateFrom + "'"
        + " and date_trunc('day',a.policy_date) <= '" + appDateTo + "'";

        sql = sql + "then coalesce((a.premi_total*a.ccy_rate),0) else 0 end) as premi_amount,  ("
        + " case when date_trunc('day',a.policy_date) >= '" + appDateFrom + "'  "
        + " and date_trunc('day',a.policy_date) <= '" + appDateTo + "' ";
        sql = sql + "  then coalesce((a.premi_total*a.ccy_rate),0) else 0 end) as premi_paid  ";
         */

        String sql = "left join ( select a.pol_no,a.insured_amount,(a.premi_bruto-a.diskon) as premi_amount from ( "
                + "select a.pol_no,sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0)) as insured_amount, "
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premi_bruto,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),(coalesce(b.disc_amount*a.ccy_rate,0))*-1)) as diskon ";

        sql = sql + " from ins_policies a "
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
                + " inner join ins_policy_type_grp d on d.ins_policy_type_grp_id = c.ins_policy_type_grp_id2 "
                + " where a.status IN ('RENEWAL','ENDORSE','POLICY') and a.active_flag = 'Y' and a.effective_flag = 'Y' "
                + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')"
                + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'"
                + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";

        if (stBranch != null) {
            sql = sql + " and a.cc_code = '" + stBranch + "'";
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sql = sql + " and a.region_id = " + stRegion;
            //sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sql = sql + " and b.ins_policy_type_grp_id = " + stPolicyTypeGroupID;
            //sqa.addPar(stGroupID);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = sql + " and a.cc_code = '80'";
                //sqa.addPar(stGroupID);
            }
        }

        sql = sql + " group by a.pol_no order by a.pol_no ) a ";

        sqa.addQuery(" from band_level a " + sql + " order by a.pol_no   "
                + " ) as b on b.insured_amount between a.ref1 and a.ref2 ");

        if (getStGroupID() != null) {
            sqa.addClause("a.pol_type_grp_id2 = '" + stGroupID + "'");
            //sqa.addPar(stGroupID);
        }

        if (getStGroupID() == null) {
            sqa.addClause("a.pol_type_grp_id2 is null");
            //sqa.addPar(stGroupID);
        }

        sqa.addClause(" a.group_desc = 'OJK'");

        sql = sqa.getSQL() + " group by a.lvl,a.ref4,a.ref5 ";

        sql = sql + " order by a.lvl";

        SQLUtil S = new SQLUtil();

        String nama_file = "EXCEL_OJK_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList EXCEL_RPP_JENIS_AAUI() throws Exception {
        final String FLT_CLAIM_STATUS = (String) refPropMap.get("FLT_CLAIM_STATUS");
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" ins_policy_type_grp_id,group_name,count(pol_no) as pol_no,status,sum(jumlah) as jumlah, "
                + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost, "
                + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi, "
                + "sum(nd_hfee) as nd_hfee,sum(nd_comm1) as komisi, "
                + "sum(brok) as brok,sum(feebase) as feebase,sum(nd_taxcomm1) as tax, "
                + "sum(nd_taxbrok1) as tax_bfee,sum(nd_taxhfee) as tax_hfee "
                + "from (  "
                + "select f.ins_policy_type_grp_id,f.group_name,d.description as jenis,a.status,a.pol_type_id,a.pol_no,a.pol_id, "
                + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0)) as insured_amount, "
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),(b.premi_amt*a.ccy_rate)*-1)) as premi_amt, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0)) as nd_pcost, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0)) as nd_sfee, "
                + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as jumlah,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon_premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as nd_hfee, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as nd_comm1, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0)) as feebase,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as brok, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0)) as nd_taxcomm1, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0)) as nd_taxbrok1, "
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0)) as nd_taxhfee ");

        sqa.addQuery("   from       ins_policies a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " left join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + " left join ent_master c on c.ent_id = a.prod_id "
                + " inner join ins_policy_type_grp f on f.ins_policy_type_grp_id = d.ins_policy_type_grp_id2 ");

        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        boolean isClaim = "CLAIM".equalsIgnoreCase(status);

        if (FLT_CLAIM_STATUS != null) {
            sqa.addClause("a.claim_status = ?");
            sqa.addPar(FLT_CLAIM_STATUS);
        }

        boolean displayEffective = true;

        if (isClaim && stFltClaimStatus != null) {
            displayEffective = false;
        }

        if (displayEffective) {
            sqa.addClause("a.effective_flag='Y'");
        }

        if (isClaim) {
            sqa.addClause("a.status in(?,?)");
            sqa.addPar(FinCodec.PolicyStatus.CLAIM);
            sqa.addPar(FinCodec.PolicyStatus.ENDORSECLAIM);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("c.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = " select group_name, "
                + "sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)) as polis, "
                + "sum(checkreas(status='ENDORSE',pol_no)) as endorse,sum(jumlah) as jml_debitur, "
                + "sum(insured_amount) as insured_amount,sum(premi_amt) as premi_amt,sum(nd_pcost) as nd_pcost,"
                + "sum(nd_sfee) as nd_sfee,sum(diskon_premi) as diskon_premi,"
                + "sum(nd_hfee) as nd_hfee,sum(komisi) as komisi,sum(feebase) as feebase,"
                + "sum(brok) as brok,sum(tax) as tax,sum(tax_bfee) as tax_bfee,sum(tax_hfee) as tax_hfee "
                + "from ( " + sqa.getSQL() + " group by a.pol_type_id,d.description,a.status,a.pol_no,a.pol_id,f.ins_policy_type_grp_id,f.group_name "
                + " ) x group by ins_policy_type_grp_id,group_name,status "
                + " ) x group by ins_policy_type_grp_id,group_name order by ins_policy_type_grp_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_RPP_JENIS_AAUI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("group");
            row0.createCell(1).setCellValue("polis");
            row0.createCell(2).setCellValue("endorse");
            row0.createCell(3).setCellValue("jml_debitur");
            row0.createCell(4).setCellValue("insured");
            row0.createCell(5).setCellValue("premi");
            row0.createCell(6).setCellValue("bpol");
            row0.createCell(7).setCellValue("bmat");
            row0.createCell(8).setCellValue("diskon");
            row0.createCell(9).setCellValue("hfee");
            row0.createCell(10).setCellValue("komisi");
            row0.createCell(11).setCellValue("feebase");
            row0.createCell(12).setCellValue("bfee");
            row0.createCell(13).setCellValue("pajak");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("group_name")));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("polis").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("endorse").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("jml_debitur").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi_amt").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_pcost").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_sfee").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("diskon_premi").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("nd_hfee").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("feebase").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("brok").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("tax").doubleValue());


        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList RPP_LETTER() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code,a.pol_id,a.policy_date,a.pol_no,a.cust_name,a.ccy_rate,coalesce(a.premi_total*a.ccy_rate,0) as premi_total,"
                + "coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost,coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee,a.entity_id,a.prod_id,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (66,67,68,69)) as nd_feebase1,"
                + "(select coalesce(x.rate,0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (66,67,68,69)) as refn1 ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ent_master e on e.ent_id = a.entity_id "
                + "inner join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stStatus != null) {
            if (FinCodec.PolicyStatus.POLICY.equalsIgnoreCase(stStatus)) {
                sqa.addClause("a.status in (?,?)");
                sqa.addPar(FinCodec.PolicyStatus.POLICY);
                sqa.addPar(FinCodec.PolicyStatus.RENEWAL);
            } else {
                sqa.addClause("a.status = ?");
                sqa.addPar(stStatus);
            }
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("e.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        final String sql = sqa.getSQL() + " order by a.pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public EntityView getMarketer() {
        final EntityView entity = (EntityView) DTOPool.getInstance().getDTO(EntityView.class, stMarketerID);

        return entity;
    }

    public UserSessionView getUser(String stUserID) {
        return (UserSessionView) DTOPool.getInstance().getDTO(UserSessionView.class, stUserID);
    }

    public DTOList EXCEL_REKAP_CAB_TARGET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.cc_code,"
                + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCreditID != null) {
            sqa.addClause("a.kreasi_type_id = ?");
            sqa.addPar(stCreditID);
        }

        String sql = "select z.cc_code,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,"
                + " premi_total_adisc,sum(amount) as amount from ( "
                + " select e.cc_code,e.description,"
                + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + " from gl_cost_center e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.cc_code "
                + " ) z on z.cc_code = e.cc_code "
                + " group by e.cc_code,e.description"
                + " ) z left join ins_statistic_product_cab a on a.cc_code = z.cc_code";

        sql = sql + " where a.years = ? ";
        sqa.addPar(DateUtil.getYear(policyDateFrom));

        sql = sql + " group by z.cc_code,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,premi_total_adisc "
                + " order by z.cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_CAB_TARGET() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal sisa = null;
        BigDecimal dbpersen = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow rows = sheet.createRow(0);
            if (stStatus != null) {
                rows.createCell(0).setCellValue("STATUS : " + getStStatus().toUpperCase());
            }

            HSSFRow row1 = sheet.createRow(1);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(2);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow row0 = sheet.createRow(4);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("umum");
            row0.createCell(3).setCellValue("pemda");
            row0.createCell(4).setCellValue("perusda");
            row0.createCell(5).setCellValue("bpd");
            row0.createCell(6).setCellValue("jumlah");
            row0.createCell(7).setCellValue("target");
            row0.createCell(8).setCellValue("sisa");
            row0.createCell(9).setCellValue("persen");

            sisa = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total_adisc"), h.getFieldValueByFieldNameBD("amount"));

            if (BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("premi_total_adisc")) || BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("amount"))) {
                dbpersen = new BigDecimal(0);
            } else {
                dbpersen = BDUtil.divNR(h.getFieldValueByFieldNameBD("premi_total_adisc"), h.getFieldValueByFieldNameBD("amount"));
                dbpersen = BDUtil.mul(dbpersen, new BigDecimal(100));
            }

            /*
            final Date perStart = getPolicyDateFrom();
            final Date perEnd = getPolicyDateTo();

            DateTime startDate = new DateTime(perStart);
            DateTime endDate = new DateTime(perEnd);
            Months m = Months.monthsBetween(startDate, endDate);
            int mon = m.getMonths() + 1;

            BigDecimal a = new BigDecimal(12000);
            BigDecimal b = new BigDecimal(1000);
            String month = String.valueOf(mon);
            BigDecimal c = new BigDecimal(month);
            BigDecimal target = h.getFieldValueByFieldNameBD("amount");
            target = BDUtil.roundUp(BDUtil.div(target, a));
            target = BDUtil.roundUp(BDUtil.mul(target, b));
             */

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 5);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("amount") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("amount").doubleValue());
            }
            if (sisa != null) {
                row.createCell(8).setCellValue(sisa.doubleValue());
            }
            if (dbpersen != null) {
                row.createCell(9).setCellValue(dbpersen.doubleValue() + " %");
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList EXCEL_REKAP_CABOUTLET_TARGET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	e.category1 as bus_source,a.cc_code,a.region_id,"
                + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from       ins_policies a "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + "       left join ent_master e on e.ent_id = a.entity_id   "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCreditID != null) {
            sqa.addClause("a.kreasi_type_id = ?");
            sqa.addPar(stCreditID);
        }

        String sql = "select z.cc_code,z.region_code2,z.desc2 as description,"
                + " sum(nd_comm1) as nd_comm1,sum(nd_comm2) as nd_comm2,"
                + " sum(nd_comm3) as nd_comm3,sum(nd_comm4) as nd_comm4,"
                + " sum(premi_total_adisc) as premi_total_adisc,sum(amount) as amount from ( "
                + " select e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2,"
                + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + " from s_region e "
                + " left join ( "
                + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id "
                + " ) z on z.region_id = e.region_id "
                + " where e.active_flag = 'Y' "
                + " group by e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2 "
                + " ) z left join ins_statistic_product_cab a on a.region_id = z.region_id ";

        sql = sql + " where a.years = ? ";
        sqa.addPar(DateUtil.getYear(policyDateFrom));

        sql = sql + " group by z.cc_code,z.desc2,z.region_code2 "
                + " order by z.cc_code,z.region_code2";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_CABOUTLET_TARGET() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal sisa = null;
        BigDecimal dbpersen = null;
        String persen = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("outlet");
            row0.createCell(2).setCellValue("description");
            row0.createCell(3).setCellValue("umum");
            row0.createCell(4).setCellValue("pemda");
            row0.createCell(5).setCellValue("perusda");
            row0.createCell(6).setCellValue("bpd");
            row0.createCell(7).setCellValue("jumlah");
            row0.createCell(8).setCellValue("target");
            row0.createCell(9).setCellValue("sisa");
            row0.createCell(10).setCellValue("persen");

            sisa = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total_adisc"), h.getFieldValueByFieldNameBD("amount"));

            if (BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("premi_total_adisc")) || BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("amount"))) {
                dbpersen = new BigDecimal(0);
            } else {
                dbpersen = BDUtil.divNR(h.getFieldValueByFieldNameBD("premi_total_adisc"), h.getFieldValueByFieldNameBD("amount"));
                dbpersen = BDUtil.mul(dbpersen, new BigDecimal(100));
            }

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("region_code2"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("amount") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("amount").doubleValue());
            }
            if (sisa != null) {
                row.createCell(9).setCellValue(sisa.doubleValue());
            }
            if (dbpersen != null) {
                row.createCell(10).setCellValue(dbpersen.doubleValue() + " %");
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList REKAP_CAB_TARGET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.cc_code,"
                + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCreditID != null) {
            sqa.addClause("a.kreasi_type_id = ?");
            sqa.addPar(stCreditID);
        }

        String sql = "select z.cc_code,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,"
                + " premi_total_adisc,sum(a.amount) as premi_base from ( "
                + " select e.cc_code,e.description,"
                + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + " from gl_cost_center e "
                + " left join ( "
                + sqa.getSQL() + " group by b.category1,a.cc_code "
                + " ) z on z.cc_code = e.cc_code "
                + " group by e.cc_code,e.description"
                + " ) z left join ins_statistic_product_cab a on a.cc_code = z.cc_code";

        sql = sql + " where a.years = ? ";
        sqa.addPar(DateUtil.getYear(policyDateFrom));

        sql = sql + " group by z.cc_code,z.description,nd_comm1,nd_comm2,nd_comm3,nd_comm4,premi_total_adisc "
                + " order by z.cc_code";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList REKAP_CABOUTLET_TARGET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {
            sqa.addSelect("	e.category1 as bus_source,a.cc_code,a.region_id,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

            sqa.addQuery(" from       ins_policies a "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                    + "       left join ent_master e on e.ent_id = a.entity_id   "
                    + "       left join ent_master f on f.ent_id = a.prod_id  ");

            sqa.addClause("a.active_flag='Y'");
            sqa.addClause("a.effective_flag='Y'");
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
            sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= ?");
                sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= ?");
                sqa.addPar(policyDateTo);
            }

            if (appDateFrom != null) {
                sqa.addClause("date_trunc('day',a.approved_date) >= ?");
                sqa.addPar(appDateFrom);
            }

            if (appDateTo != null) {
                sqa.addClause("date_trunc('day',a.approved_date) <= ?");
                sqa.addPar(appDateTo);
            }

            if (stFltCoverType != null) {
                sqa.addClause("a.cover_type_code = ?");
                sqa.addPar(stFltCoverType);
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("e.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = ?");
                sqa.addPar(stMarketerID);
            }

            if (stCompanyProdID != null) {
                sqa.addClause("f.ref2 = ?");
                sqa.addPar(stCompanyProdID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            sql = "select z.cc_code,z.region_code2,z.desc2 as description,"
                    + " sum(nd_comm1) as nd_comm1,sum(nd_comm2) as nd_comm2,"
                    + " sum(nd_comm3) as nd_comm3,sum(nd_comm4) as nd_comm4,"
                    + " sum(premi_total_adisc) as premi_total_adisc,sum(a.amount) as premi_base from ( "
                    + " select e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2,"
                    + " coalesce(sum(getkoas(bus_source='1',(premi-diskon))),0) as nd_comm1,"
                    + " coalesce(sum(getkoas(bus_source='2',(premi-diskon))),0) as nd_comm2,"
                    + " coalesce(sum(getkoas(bus_source='3',(premi-diskon))),0) as nd_comm3,"
                    + " coalesce(sum(getkoas(bus_source='4',(premi-diskon))),0) as nd_comm4,"
                    + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                    + " from s_region e "
                    + " left join ( "
                    + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id "
                    + " ) z on z.region_id = e.region_id "
                    + " where e.active_flag = 'Y' "
                    + " group by e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2 "
                    + " ) z left join ins_statistic_product_cab a on a.region_id = z.region_id ";

            sql = sql + " where a.years = ? ";
            sqa.addPar(DateUtil.getYear(policyDateFrom));

            sql = sql + " group by z.cc_code,z.desc2,z.region_code2 "
                    + " order by z.cc_code,z.region_code2";

            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select sumbis as catsumbis,cc_code,cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source ";

                currentMonth = "select bus_source,a.cc_code,a.cc_code_source,sum(premi-diskon) as preminett from ( "
                        + "select b.category1 as bus_source,a.cc_code,a.cc_code_source,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                        + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                        + "from ins_policies a "
                        + " left join ent_master b on b.ent_id = a.entity_id "
                        + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                        + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

                if (policyDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (policyDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }

                if (appDateFrom != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (appDateTo != null) {
                    currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
                }

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    currentMonth = currentMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    currentMonth = currentMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }
            }//current month
            else {
                beforeMonth = "select sumbis as catsumbis,a.cc_code,a.cc_code_source,sum(premi) as premi "
                        + "from ins_rekap_produksi_det a "
                        + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                /*if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                if (stBranchSource != null) {
                beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                }
                if (stRegionSource != null) {
                beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                }
                } else {
                beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
                }

                if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }*/

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source ";
            }


            sqa.addSelect(" catsumbis,a.cc_code,a.cc_code_source,sum(premi) as premi ");


            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.cc_code_source ) a group by a.bus_source,a.cc_code,a.cc_code_source ";
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            String inward = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                    + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                    + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

            if (getPolicyDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            if (getAppDateFrom() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
            }

            if (getAppDateTo() != null) {
                inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
            }

            /*if (getStBranch() != null) {
            inward = inward + " and c.cc_code = '" + stBranch + "'";
            }*/

            if (getStPolicyTypeID() != null) {
                inward = inward + " and c.attr_pol_type_id = '" + stPolicyTypeID + "'";
            }

            if (getStBussinessPolType() != null) {
                if (getStBussinessPolType().equalsIgnoreCase("1")) {
                    inward = inward + " and c.cc_code = '80'";
                } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                    inward = inward + " and c.cc_code <> '80'";
                }
            }

            if (getStBussinessPolTypeCob() != null) {
                if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            if (stBussinessPolType == null) {
                sql = "select e.cc_code,"
                        + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                        + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                        + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                        + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                        + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                        + "from gl_cost_center e "
                        + "left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + ") z on z.cc_code = e.cc_code "
                        + "group by e.cc_code order by e.cc_code";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sql = "select e.cc_code as cc_code,"
                            + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                            + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                            + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                            + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                            + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                            + "group by e.cc_code order by e.cc_code";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sql = "select e.cc_code,"
                            + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                            + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                            + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                            + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                            + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                            + "from gl_cost_center e "
                            + "left join ( "
                            + sqa.getSQL() + " group by 1,2,3 "
                            + ") z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                            + "group by e.cc_code order by e.cc_code";
                }
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStCostCenterCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    /**
     * @return the stFFac
     */
    public String getStFFac() {
        return stFFac;
    }

    /**
     * @param stFFac the stFFac to set
     */
    public void setStFFac(String stFFac) {
        this.stFFac = stFFac;
    }

    public InsurancePolicyTypeGroupView getPolGroup() {
        final InsurancePolicyTypeGroupView polgroup = (InsurancePolicyTypeGroupView) DTOPool.getInstance().getDTO(InsurancePolicyTypeGroupView.class, stPolicyTypeGroupID);

        return polgroup;
    }

    public InsurancePolicyTypeView getPolType() {
        final InsurancePolicyTypeView poltype = (InsurancePolicyTypeView) DTOPool.getInstance().getDTO(InsurancePolicyTypeView.class, stPolicyTypeID);

        return poltype;
    }

    public DTOList EQUAKE_ZONE() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " c.description,sum(b.insured_amount*a.ccy_rate) as insured_amount ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ins_risk_cat c on c.ins_risk_cat_id::text = b.ref2 ");

        sqa.addClause(" a.status IN ('POLICY','RENEWAL')");
        sqa.addClause(" a.active_flag = 'Y'");
        sqa.addClause(" c.poltype_id = '99'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(periodEndTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stZoneEquake != null) {
            sqa.addClause("c.ins_risk_cat_code = ?");
            sqa.addPar(stZoneEquake);
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.effective_flag = 'Y'");
        }

        if (Tools.isNo(stIndex)) {
            sqa.addClause("a.effective_flag = 'N'");
        }

        String sql = sqa.getSQL() + " group by c.ins_risk_cat_code,c.description order by c.description ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_REKAP_CABOUTLET100_TARGET() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	e.category1 as bus_source,a.cc_code,a.region_id,"
                + "sum((a.premi_total*a.ccy_rate)) as premi,"
                + "sum((a.nd_disc1*a.ccy_rate)) as diskon ");

        sqa.addQuery(" from       ins_policies a "
                + "       left join ent_master e on e.ent_id = a.entity_id   "
                + "       left join ent_master f on f.ent_id = a.prod_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stCreditID != null) {
            sqa.addClause("a.kreasi_type_id = ?");
            sqa.addPar(stCreditID);
        }

        String sql = "select z.cc_code,z.region_code2,z.desc2 as description,"
                + " sum(nd_comm1) as nd_comm1,sum(nd_comm2) as nd_comm2,"
                + " sum(nd_comm3) as nd_comm3,sum(nd_comm4) as nd_comm4,"
                + " sum(z.premi_total_adisc) as premi,sum(a.amount) as amount from ( "
                + " select e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2,"
                + " coalesce(sum(getkoas(bus_source='1',premi-diskon)),0) as nd_comm1,"
                + " coalesce(sum(getkoas(bus_source='2',premi-diskon)),0) as nd_comm2,"
                + " coalesce(sum(getkoas(bus_source='3',premi-diskon)),0) as nd_comm3,"
                + " coalesce(sum(getkoas(bus_source='4',premi-diskon)),0) as nd_comm4,"
                + " coalesce(sum(premi),0) as premi, coalesce(sum(diskon),0) as diskon, "
                + " coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + " from s_region e "
                + " left join ( "
                + sqa.getSQL() + " group by e.category1,a.cc_code,a.region_id "
                + " ) z on z.region_id = e.region_id "
                + " where e.active_flag = 'Y' "
                + " group by e.cc_code,e.region_id,e.region_code,e.desc2,e.region_code2 "
                + " ) z left join ins_statistic_product_cab a on a.region_id = z.region_id ";

        sql = sql + " where a.years = ? ";
        sqa.addPar(DateUtil.getYear(policyDateFrom));

        sql = sql + " group by z.cc_code,z.desc2,z.region_code2 "
                + " order by z.cc_code,z.region_code2";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_CABOUTLET100_TARGET() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal sisa = null;
        BigDecimal dbpersen = null;
        String persen = null;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            HSSFRow row1 = sheet.createRow(0);
            row1.createCell(0).setCellValue(DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));

            HSSFRow row2 = sheet.createRow(1);
            if (stPolicyTypeGroupID != null) {
                row2.createCell(0).setCellValue(getStPolicyTypeGroupDesc().toUpperCase() + " -- " + getStPolicyTypeDesc().toUpperCase());
            }

            //bikin header
            HSSFRow row0 = sheet.createRow(2);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("outlet");
            row0.createCell(2).setCellValue("description");
            row0.createCell(3).setCellValue("umum");
            row0.createCell(4).setCellValue("pemda");
            row0.createCell(5).setCellValue("perusda");
            row0.createCell(6).setCellValue("bpd");
            row0.createCell(7).setCellValue("jumlah");
            row0.createCell(8).setCellValue("target");
            row0.createCell(9).setCellValue("sisa");
            row0.createCell(10).setCellValue("persen");

            sisa = BDUtil.sub(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("amount"));

            if (BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("premi")) || BDUtil.isZeroOrNull(h.getFieldValueByFieldNameBD("amount"))) {
                dbpersen = new BigDecimal(0);
            } else {
                dbpersen = BDUtil.divNR(h.getFieldValueByFieldNameBD("premi"), h.getFieldValueByFieldNameBD("amount"));
                dbpersen = BDUtil.mul(dbpersen, new BigDecimal(100));
            }

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("region_code2"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("description"));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("amount") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("amount").doubleValue());
            }
            if (sisa != null) {
                row.createCell(9).setCellValue(sisa.doubleValue());
            }
            if (dbpersen != null) {
                row.createCell(10).setCellValue(dbpersen.doubleValue() + " %");
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList RPP_REKAPTAHUNNETTO() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" tahun,bulan,jenas,count(pol_no) as pol_no,status,sum(premi-diskon) as premi from ( "
                + " select substr(a.policy_date::text,1,4) as tahun,substr(a.policy_date::text,6,2) as bulan,a.pol_type_id as jenas,a.pol_no,a.status,"
                + " sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(d.premi_amt*a.ccy_rate,0)*-1)) as premi,"
                + " sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),coalesce(d.disc_amount*a.ccy_rate,0)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a "
                + " inner join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id "
                + " inner join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        //sqa.addClause("a.cc_code = '15' ");
        //sqa.addClause("a.pol_type_id in (21,59)");
        //sqa.addClause("b.category1 = '4'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("b.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = "select tahun as ref1,bulan as ref2,jenas as pol_type_id,"
                + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as refn1,"
                + "sum(premi) as refn2 from ( " + sqa.getSQL()
                + " group by substr(a.policy_date::text,1,4),substr(a.policy_date::text,6,2),substr(a.pol_no,2,1),a.pol_type_id,a.pol_no,a.status "
                + " order by substr(a.policy_date::text,1,4),substr(a.policy_date::text,6,2) "
                + " ) a group by tahun,bulan,jenas,status "
                + " ) a group by tahun,bulan,jenas order by tahun,bulan,jenas ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPPTAHUNNETTO() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.period_start as tglawal,a.period_end as tglakhir,a.create_date as tglentry,d.short_desc as jenis,"
                + "a.policy_date as tglpolis,a.pol_id as polid,a.ref1 as pp,';'||a.pol_no as polno,"
                + "b.entity_id as kodeko,getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as nama,"
                + "getpremiend(b.entity_id,coalesce(a.premi_total,0)*a.ccy_rate,coalesce(b.premi_amt,0)*a.ccy_rate*-1) as premi,"
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as biapol,"
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as biamat,"
                + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + coalesce(a.nd_disc2*a.ccy_rate,0)),(coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as komisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as komisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as komisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as feebase1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as feebase2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as bfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as taxkomisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as taxkomisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as taxkomisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as taxkomisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as taxbfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as taxbfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as taxhfee,"
                + "a.prod_id as relasi,a.create_who as kde ");
        /*
        sqa.addSelect(
        "a.pol_id::text,a.create_date,a.policy_date,a.create_who,a.prod_id,a.pol_no,b.entity_id as entity_id,a.ref1, "
        + "getname(a.ins_policy_type_grp_id in (7,8),c.ent_name,e.ent_name) as cust_name, "
        + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi_total,"
        + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as nd_pcost, "
        + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as nd_sfee, "
        + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + (coalesce(a.nd_disc2*a.ccy_rate,0))),(((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as nd_disc1,"
        + "getpremiend(b.entity_id,(coalesce(a.nd_comm1*a.ccy_rate,0)),((coalesce(b.comm_amount*a.ccy_rate,0))*-1)) as nd_comm1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as nd_comm2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as nd_comm3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as nd_comm4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as nd_feebase1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as nd_feebase2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as nd_hfee,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1) as nd_brok1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as nd_brok2, "
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as nd_taxcomm1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as nd_taxcomm2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as nd_taxcomm3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as nd_taxcomm4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as nd_taxbrok1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as nd_taxbrok2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as nd_taxhfee ");*/

        sqa.addQuery(" from ins_policy a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " left join ent_master c on c.ent_id::text = a.ref5"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        String sql = " select tglawal,tglakhir,tglentry,tglpolis,polid,pp,polno,kodeko,nama,"
                + "premi,biapol,biamat,diskon,hfee,bfee1,bfee2,taxbfee1,taxbfee2,taxhfee,"
                + "komisi1,komisi2,komisi3,komisi4,feebase1,feebase2,taxkomisi1,taxkomisi2,taxkomisi3,taxkomisi4,relasi,kde "
                + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno,a.kodeko ";

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rppnetto_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList RPP_REKAPTAHUNBRUTO() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" tahun,bulan,jenas,count(pol_no) as pol_no,status,sum(premi) as premi from ( "
                + " select substr(a.policy_date::text,1,4) as tahun,substr(a.policy_date::text,6,2) as bulan,a.pol_type_id as jenas,a.pol_no,a.status,"
                + " sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi,"
                + " sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as diskon ");

        sqa.addQuery(" from ins_policies a "
                + " inner join ent_master b on b.ent_id = a.entity_id "
                + " inner join ent_master f on f.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        //sqa.addClause("a.cc_code = '15' ");
        //sqa.addClause("a.pol_type_id in (21,59)");
        //sqa.addClause("b.category1 = '4'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("b.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        final String sql = "select tahun as ref1,bulan as ref2,jenas as pol_type_id,"
                + "coalesce(sum(checkreas(status in ('POLICY','RENEWAL'),pol_no)),0) as refn1,"
                + "sum(premi) as refn2 from ( " + sqa.getSQL()
                + " group by substr(a.policy_date::text,1,4),substr(a.policy_date::text,6,2),substr(a.pol_no,2,1),a.pol_type_id,a.pol_no,a.status "
                + " order by substr(a.policy_date::text,1,4),substr(a.policy_date::text,6,2) "
                + " ) a group by tahun,bulan,jenas,status "
                + " ) a group by tahun,bulan,jenas order by tahun,bulan,jenas ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RPPTAHUNBRUTO() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code as koda,b.description as cabang,a.pol_id as polid,a.period_start as tglawal,a.period_end as tglakhir,d.short_desc as jenis,"
                + "a.create_date as tglentry,a.policy_date as tglpolis,c.user_name as createuser,a.prod_id as relasi,';'||a.pol_no as polno, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as nama,a.ccy_rate as kurs,a.payment_date as tglbayar, a.payment_note as nobuk, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref1,null) as pp, "
                + "coalesce(a.premi_total*a.ccy_rate,0) as premi,"
                + "coalesce(a.nd_pcost*a.ccy_rate,0) as biapol, "
                + "coalesce(a.nd_sfee*a.ccy_rate,0) as biamat, "
                + "coalesce(a.nd_disc1*a.ccy_rate,0) as diskon,"
                + "coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase,"
                + "coalesce(a.nd_hfee*a.ccy_rate,0) as hfee,"
                + "coalesce(a.nd_brok1*a.ccy_rate,0) as bfee,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as taxcomm21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as taxcomm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (4)) as taxbfee21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (5,6)) as taxbfee23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as taxhfee ");

        /*
        sqa.addSelect(
        "a.cc_code,b.description,a.pol_id,a.period_start,a.period_end,a.create_date,a.policy_date,c.user_name as create_who,a.prod_id,';'||a.pol_no as pol_no, "
        + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as cust_name,a.ccy_rate,a.payment_date, a.payment_note, "
        + "getname(a.ins_policy_type_grp_id in (7,8),';'||a.ref1,null) as ref1, "
        + "coalesce(a.premi_total*a.ccy_rate,0) as premi_total,"
        + "coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost, "
        + "coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee, "
        + "coalesce(a.nd_disc1*a.ccy_rate,0) as nd_disc1,"
        + "coalesce(a.nd_feebase1*a.ccy_rate,0) as nd_feebase1,"
        + "coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee,"
        + "coalesce(a.nd_brok1*a.ccy_rate,0) as nd_brok1,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as tax_comm21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as tax_comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (4)) as tax_bfee21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (5,6)) as tax_bfee23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as tax_hfee ");*/

        sqa.addQuery(" from ins_policies a "
                + " inner join ent_master e on e.ent_id = a.entity_id "
                + " left join gl_cost_center b on b.cc_code = a.cc_code "
                + " left join s_users c on c.user_id = a.create_who "
                + " inner join ent_master f on f.ent_id = a.prod_id "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        String sql = " select koda,cabang,tglawal,tglakhir,tglentry,"
                + " polid,tglpolis,createuser,polno,nama,kurs,tglbayar,nobuk,"
                + " pp,premi,biapol,biamat,diskon,hfee,bfee,taxbfee21,taxbfee23,taxhfee,feebase,comm21,comm23,taxcomm21,taxcomm23 "
                + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno ";

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rppbruto_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXCEL_REKAPNETTO15() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.period_start as tglawal,a.period_end as tglakhir,a.create_date as tglentry,d.short_desc as jenis,e.ent_name as bank, "
                + "a.policy_date as tglpolis,a.pol_id as polid,a.ref1 as pp,';'||a.pol_no as polno,"
                + "b.entity_id as kodeko,getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as nama,"
                + "getpremiend(b.entity_id,coalesce(a.premi_total,0)*a.ccy_rate,coalesce(b.premi_amt,0)*a.ccy_rate*-1) as premi,"
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as biapol,"
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as biamat,"
                + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + coalesce(a.nd_disc2*a.ccy_rate,0)),(coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as komisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as komisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as komisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as feebase1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as feebase2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as bfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as taxkomisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as taxkomisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as taxkomisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as taxkomisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as taxbfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as taxbfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as taxhfee,"
                + "a.prod_id as relasi,a.create_who as kde ");
        /*
        sqa.addSelect(
        "a.pol_id::text,a.create_date,a.policy_date,a.create_who,a.prod_id,a.pol_no,b.entity_id as entity_id,a.ref1, "
        + "getname(a.ins_policy_type_grp_id in (7,8),c.ent_name,e.ent_name) as cust_name, "
        + "getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) as premi_total,"
        + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as nd_pcost, "
        + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as nd_sfee, "
        + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + (coalesce(a.nd_disc2*a.ccy_rate,0))),(((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as nd_disc1,"
        + "getpremiend(b.entity_id,(coalesce(a.nd_comm1*a.ccy_rate,0)),((coalesce(b.comm_amount*a.ccy_rate,0))*-1)) as nd_comm1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as nd_comm2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as nd_comm3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as nd_comm4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as nd_feebase1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as nd_feebase2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),coalesce(b.hfee_amount*a.ccy_rate,0)*-1) as nd_hfee,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),coalesce(b.broker_amount*a.ccy_rate,0)*-1) as nd_brok1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as nd_brok2, "
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as nd_taxcomm1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as nd_taxcomm2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as nd_taxcomm3,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as nd_taxcomm4,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as nd_taxbrok1,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as nd_taxbrok2,"
        + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as nd_taxhfee ");*/

        sqa.addQuery(" from ins_policy a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " left join ent_master c on c.ent_id::text = a.ref5"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','RENEWAL')");
        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

        String sql = null;

        if (SessionManager.getInstance().getSession().getStBranch() != null) {
            if (SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("15")
                    || SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("18")
                    || SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("22")) {
                sql = " select jenis,tglpolis,polno,premi,diskon,feebase1+feebase2 as feebase,bank ";
            } else {
                sql = " select tglawal,tglakhir,tglentry,tglpolis,polid,pp,polno,kodeko,nama,"
                        + "premi,biapol,biamat,diskon,hfee,bfee1,bfee2,taxbfee1,taxbfee2,taxhfee,"
                        + "komisi1,komisi2,komisi3,komisi4,feebase1,feebase2,taxkomisi1,taxkomisi2,taxkomisi3,taxkomisi4,relasi,kde ";
            }
        } else {
            sql = " select tglawal,tglakhir,tglentry,tglpolis,polid,pp,polno,kodeko,nama,"
                    + "premi,biapol,biamat,diskon,hfee,bfee1,bfee2,taxbfee1,taxbfee2,taxhfee,"
                    + "komisi1,komisi2,komisi3,komisi4,feebase1,feebase2,taxkomisi1,taxkomisi2,taxkomisi3,taxkomisi4,relasi,kde ";
        }
        sql = sql + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno,a.kodeko ";

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";

        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpprekapnetto_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public void EXCEL_REKAPBRUTO15() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code as koda,b.description as cabang,a.pol_id as polid,a.period_start as tglawal,a.period_end as tglakhir,d.short_desc as jenis,e.ent_name as bank,"
                + "a.create_date as tglentry,a.policy_date as tglpolis,c.user_name as createuser,a.prod_id as relasi,';'||a.pol_no as polno, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as nama,a.ccy_rate as kurs,a.payment_date as tglbayar, a.payment_note as nobuk, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref1,null) as pp, "
                + "coalesce(a.premi_total*a.ccy_rate,0) as premi,"
                + "coalesce(a.nd_pcost*a.ccy_rate,0) as biapol, "
                + "coalesce(a.nd_sfee*a.ccy_rate,0) as biamat, "
                + "coalesce(a.nd_disc1*a.ccy_rate,0) as diskon,"
                + "coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase,"
                + "coalesce(a.nd_hfee*a.ccy_rate,0) as hfee,"
                + "coalesce(a.nd_brok1*a.ccy_rate,0) as bfee,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as taxcomm21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as taxcomm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (4)) as taxbfee21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (5,6)) as taxbfee23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as taxhfee ");

        /*
        sqa.addSelect(
        "a.cc_code,b.description,a.pol_id,a.period_start,a.period_end,a.create_date,a.policy_date,c.user_name as create_who,a.prod_id,';'||a.pol_no as pol_no, "
        + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as cust_name,a.ccy_rate,a.payment_date, a.payment_note, "
        + "getname(a.ins_policy_type_grp_id in (7,8),';'||a.ref1,null) as ref1, "
        + "coalesce(a.premi_total*a.ccy_rate,0) as premi_total,"
        + "coalesce(a.nd_pcost*a.ccy_rate,0) as nd_pcost, "
        + "coalesce(a.nd_sfee*a.ccy_rate,0) as nd_sfee, "
        + "coalesce(a.nd_disc1*a.ccy_rate,0) as nd_disc1,"
        + "coalesce(a.nd_feebase1*a.ccy_rate,0) as nd_feebase1,"
        + "coalesce(a.nd_hfee*a.ccy_rate,0) as nd_hfee,"
        + "coalesce(a.nd_brok1*a.ccy_rate,0) as nd_brok1,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
        + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as tax_comm21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as tax_comm23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (4)) as tax_bfee21,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90) and tax_code in (5,6)) as tax_bfee23,"
        + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as tax_hfee ");*/

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + "	left join gl_cost_center b on b.cc_code = a.cc_code "
                + "left join s_users c on c.user_id = a.create_who "
                + "       inner join ent_master f on f.ent_id = a.prod_id  "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = '" + stCreateID + "'");
            //sqa.addPar(stCreateID);
        }

//        String sql = "select koda,cabang,tglawal,tglakhir,tglentry,"
//                + "polid,tglpolis,createuser,polno,nama,kurs,tglbayar,nobuk,"
//                + "pp,premi,biapol,biamat,diskon,hfee,bfee,taxbfee21,taxbfee23,taxhfee ";
//        if (SessionManager.getInstance().getSession().getStBranch() != null) {
//            if (!SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("15")) {
//                sql = sql + ",feebase,comm21,comm23,taxcomm21,taxcomm23 ";
//            }
//        } else {
//            sql = sql + ",feebase,comm21,comm23,taxcomm21,taxcomm23 ";
//        }
//        sql = sql + " ,relasi from ( " + sqa.getSQL() + " ) a order by a.polno ";

        String sql = null;
        if (SessionManager.getInstance().getSession().getStBranch() != null) {
            if (SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("15")
                    || SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("18")
                    || SessionManager.getInstance().getSession().getStBranch().equalsIgnoreCase("22")) {
                sql = " select jenis,tglpolis,polno,premi,diskon,feebase,bank ";
            } else {
                sql = "select koda,cabang,tglawal,tglakhir,tglentry,"
                        + "polid,tglpolis,createuser,polno,nama,kurs,tglbayar,nobuk,"
                        + "pp,premi,biapol,biamat,diskon,hfee,bfee,taxbfee21,taxbfee23,taxhfee,feebase,comm21,comm23,taxcomm21,taxcomm23 ";
            }
        } else {
            sql = "select koda,cabang,tglawal,tglakhir,tglentry,"
                    + "polid,tglpolis,createuser,polno,nama,kurs,tglbayar,nobuk,"
                    + "pp,premi,biapol,biamat,diskon,hfee,bfee,taxbfee21,taxbfee23,taxhfee,feebase,comm21,comm23,taxcomm21,taxcomm23 ";
        }

        sql = sql + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno ";

        /*
        String sql = sqa.getSQL() + "   order by a.cc_code,a.pol_no";
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpprekapbruto_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    /**
     * @return the stMarketerOffID
     */
    public String getStMarketerOffID() {
        return stMarketerOffID;
    }

    /**
     * @param stMarketerOffID the stMarketerOffID to set
     */
    public void setStMarketerOffID(String stMarketerOffID) {
        this.stMarketerOffID = stMarketerOffID;
    }

    /**
     * @return the stMarketerOffName
     */
    public String getStMarketerOffName() {
        return stMarketerOffName;
    }

    /**
     * @param stMarketerOffName the stMarketerOffName to set
     */
    public void setStMarketerOffName(String stMarketerOffName) {
        this.stMarketerOffName = stMarketerOffName;
    }

    public DTOList LOSS_RATIO() throws Exception {
        final String KODA = (String) refPropMap.get("KODA");
        final String JENIS = (String) refPropMap.get("JENIS");
        final String SUMBIS = (String) refPropMap.get("SUMBIS");
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {

            String ccCode = null;
            if (stBussinessPolType == null) {
                ccCode = "a.cc_code";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    ccCode = "a.cc_code_source";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    ccCode = "a.cc_code";
                }
            }

            String description = null;
            if (KODA != null) {
                description = ccCode + " as cc_code,d.description as cabang,";
            }
            if (JENIS != null) {
                description = "a.pol_type_id,e.description as jenis,";
            }
            if (SUMBIS != null) {
                description = "a.entity_id,c.ent_name as sumbis,";
            }

            String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                    + "sum(case when a.status in ('ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                    + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

            sqa.addSelect(query);

            sqa.addQuery(" from ins_policy a "
                    + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + "inner join ent_master c on c.ent_id = a.entity_id "
                    + "inner join gl_cost_center d on d.cc_code = " + ccCode + " and d.mv_zone is not null "
                    + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id ");

            sqa.addClause("(a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))");
            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stProfileID != null) {
                if (stProfileID.equalsIgnoreCase("1")) {
                    sqa.addClause("c.category1 in ('2','3','4')");
                } else if (stProfileID.equalsIgnoreCase("2")) {
                    sqa.addClause("c.category1 in ('1')");
                }
            }

            if (stGroupJenisID != null) {
                if (stGroupJenisID.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
                } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
                } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                    sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
                }
            }

            if (stCustCategory1 != null) {
                sqa.addClause("c.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            if (stCompTypeID != null) {
                String type = null;
                if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                    type = "('93','98')";
                } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                    type = "('89','97')";
                } else {
                    type = "('" + stCompTypeID + "')";
                }
                sqa.addClause("c.ref1 in " + type);
//            sqa.addPar(type);
            }

            if (stEntityID != null) {
                sqa.addClause("c.ent_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("c.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            String choice = null;
            if (KODA != null) {
                choice = "a.cc_code,a.cabang as ref1,";
            }
            if (JENIS != null) {
                choice = "a.pol_type_id,a.jenis as ref1,";
            }
            if (SUMBIS != null) {
                choice = "a.entity_id,a.sumbis as ref1,";
            }

            sql = " select " + choice + " sum(a.tsi+a.tsi_e) as insured_amount,"
                    + "sum(a.premi) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,"
                    + "sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,"
                    + "sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount from ( " + sqa.getSQL() + " group by 1,2 order by 1 "
                    + " ) a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by 1,2 order by 1 ";
            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            String ccCode = null;
            String kolom1 = null;
            if (stBussinessPolType == null) {
                ccCode = "a.cc_code";
                kolom1 = " a.cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    ccCode = "a.cc_code";
                    kolom1 = " a.cc_code_source ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    ccCode = "a.cc_code";
                    kolom1 = " a.cc_code ";
                }
            }

            String description = null;
            String description2 = null;
            String leftjoin = null;
            String table = null;
            String kolom = null;
            String rekap = null;
            if (KODA != null) {
                description = ccCode + " as cc_code,d.description as ref1,";
                description2 = ccCode + " as cc_code,a.description as ref1,";
                leftjoin = "cc_code = a.cc_code ";
                table = " gl_cost_center a ";
                kolom = kolom1 + " as cc_code";
                rekap = " a.cc_code ";
            }
            if (JENIS != null) {
                description = "a.pol_type_id,e.description as ref1,";
                description2 = "a.pol_type_id,a.description as ref1,";
                leftjoin = "pol_type_id = a.pol_type_id ";
                table = " ins_policy_types a ";
                kolom = " a.pol_type_id ";
                rekap = " a.pol_type_id ";
            }
            if (SUMBIS != null) {
                description = "a.entity_id,c.ent_name as ref1,";
                description2 = "a.entity_id,c.ent_name as ref1,";
                leftjoin = "cc_code = a.cc_code ";
                table = " gl_cost_center a ";
                kolom = kolom1 + " as cc_code";
                rekap = " a.cc_code ";
            }

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select " + description2 + " b.tsi as insured_amount,b.premi_total,b.nd_disc1,b.nd_comm1,b.nd_brok1,b.nd_hfee,b.nd_feebase1,b.nd_ppn,c.claim_amount "
                        + "from " + table
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,"
                        + "sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as claim_amount from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) c on c." + leftjoin;

                /*current Month*/
                String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                        + "sum(case when a.status in ('ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                        + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

                query = query + " from ins_policy a "
                        + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                        + "inner join ent_master c on c.ent_id = a.entity_id "
                        + "inner join gl_cost_center d on d.cc_code = " + ccCode + " and d.mv_zone is not null "
                        + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id ";

                query = query + " and (a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))";
                query = query + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')";
                query = query + " and a.active_flag='Y' and a.effective_flag='Y'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        query = query + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            query = query + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            query = query + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        query = query + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    query = query + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    query = query + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    query = query + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        query = query + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        query = query + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        query = query + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                currentMonth = "select " + rekap + ",a.ref1,sum(a.tsi+a.tsi_e) as insured_amount,sum(a.premi) as premi_total,"
                        + "sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,"
                        + "sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount from ( select " + query + " group by 1,2 order by 1 "
                        + ") a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by 1,2 ";

            }//current month
            else {
                beforeMonth = "select " + description2 + " b.tsi as insured_amount,b.premi_total,b.nd_disc1,b.nd_comm1,b.nd_brok1,b.nd_hfee,b.nd_feebase1,b.nd_ppn,c.claim_amount "
                        + "from " + table
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,"
                        + "sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as claim_amount from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) c on c." + leftjoin;
            }

            sqa.addSelect(rekap + ",a.ref1,sum(a.insured_amount) as insured_amount,sum(a.premi_total) as premi_total,sum(a.nd_disc1) as nd_disc1,"
                    + "sum(a.nd_comm1) as nd_comm1,sum(a.nd_brok1) as nd_brok1,sum(a.nd_hfee) as nd_hfee,sum(a.nd_feebase1) as nd_feebase1,"
                    + "sum(a.nd_ppn) as nd_ppn,sum(a.claim_amount) as claim_amount ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth;
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            sql = sqa.getSQL() + " group by 1,2 order by 1 ";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    /**
     * @return the stProfileID
     */
    public String getStProfileID() {
        return stProfileID;
    }

    /**
     * @param stProfileID the stProfileID to set
     */
    public void setStProfileID(String stProfileID) {
        this.stProfileID = stProfileID;
    }

    /**
     * @return the stProfileName
     */
    public String getStProfileName() {
        return stProfileName;
    }

    /**
     * @param stProfileName the stProfileName to set
     */
    public void setStProfileName(String stProfileName) {
        this.stProfileName = stProfileName;
    }

    /**
     * @return the stGroupJenisID
     */
    public String getStGroupJenisID() {
        return stGroupJenisID;
    }

    /**
     * @param stGroupJenisID the stGroupJenisID to set
     */
    public void setStGroupJenisID(String stGroupJenisID) {
        this.stGroupJenisID = stGroupJenisID;
    }

    /**
     * @return the stGroupJenisName
     */
    public String getStGroupJenisName() {
        return stGroupJenisName;
    }

    /**
     * @param stGroupJenisName the stGroupJenisName to set
     */
    public void setStGroupJenisName(String stGroupJenisName) {
        this.stGroupJenisName = stGroupJenisName;
    }

    public void EXCEL_RPP_RECEIPT() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code,a.pol_id,';'||a.pol_no as pol_no,a.insured_amount,a.premi_total,nd_pcost,nd_sfee,nd_disc1,(nd_comm1-nd_taxcomm1) as nd_comm1,nd_taxcomm1,"
                + "(nd_brok1-nd_taxbrok1) as nd_brok1,nd_taxbrok1,(nd_hfee-nd_taxhfee) as nd_hfee,nd_taxhfee,nd_feebase1,nd_ppn,"
                + "sum(getpremi2(d.ar_settlement_id in (1,25,38,41) and f.category = 'PREMIG',round(e.amount_settled,0))) as premi_p,"
                + "sum(getpremi2(d.ar_settlement_id in (1,25,38,41) and f.category = 'STAMPDUTY',round(e.amount_settled,0))) as ap_sfee_p,"
                + "sum(getpremi2(d.ar_settlement_id in (1,25,38,41) and f.category = 'PCOST',round(e.amount_settled,0))) as ap_pcost_p,"
                + "sum(getpremi2(d.ar_settlement_id in (1,25,38,41) and f.category = 'DISC',round(e.amount_settled,0))) as ap_disc_p,"
                + "sum(getpremi2(d.ar_settlement_id in (2,33,39) and f.category = 'COMMISSION' and f.item_class is null and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_comis_p,"
                + "sum(getpremi2(d.ar_settlement_id in (2,33,39) and f.category = 'BROKERAGE' and f.item_desc <> 'PPN' and f.item_class is null and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_bfee_p,"
                + "sum(getpremi2(d.ar_settlement_id in (2,33,39) and f.category = 'HFEE' and f.item_class is null and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_hfee_p,"
                + "sum(getpremi2(d.ar_settlement_id in (2,33,39) and f.category = 'BROKERAGE' and f.item_desc = 'PPN' and f.item_class is null and e.f_comission is null,round(e.amount_settled,0))) as ap_ppn_p,"
                + "sum(getpremi2(d.ar_settlement_id in (2,33,39) and f.category = 'COMMISSION' and f.item_class = 'FEEBASE' and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_fbase_p,"
                + "sum(getpremi2(d.ar_settlement_id in (8) and f.category = 'TAXCOMM' and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_taxcomm_p,"
                + "sum(getpremi2(d.ar_settlement_id in (8) and f.category = 'TAXBFEE' and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_taxbfee_p,"
                + "sum(getpremi2(d.ar_settlement_id in (8) and f.category = 'TAXHFEE' and e.f_comission = 'Y',round(e.amount_settled,0))) as ap_taxhfee_p ");

        sqa.addQuery(" from ins_policies a "
                + "left join ar_receipt_lines b on b.pol_id = a.pol_id and b.line_type = 'INVOC' "
                + "left join ar_receipt c on c.ar_receipt_id = b.receipt_id "
                + "left join ar_settlement d on d.ar_settlement_id = c.ar_settlement_id "
                + "left join ar_invoice_details e on e.ar_invoice_id = b.ar_invoice_id "
                + "left join ar_trx_line f on f.ar_trx_line_id = e.ar_trx_line_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (stStatus != null) {
            sqa.addClause("a.status = '" + stStatus + "'");
            //sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + expirePeriodFrom + "'");
            //sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + expirePeriodTo + "'");
            //sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= '" + appDateFrom + "'");
            //sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= '" + appDateTo + "'");
            //sqa.addPar(appDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = '" + stFltCoverType + "'");
            //sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stMarketerOffID != null) {
            sqa.addClause("a.marketing_officer_who = '" + stMarketerOffID + "'");
            //sqa.addPar(stMarketerID);
        }

        String sql = "select a.cc_code,a.pol_id,a.pol_no,a.insured_amount,a.premi_total,nd_pcost,nd_sfee,nd_disc1,nd_comm1,nd_taxcomm1,nd_brok1,nd_taxbrok1,nd_hfee,nd_taxhfee,nd_feebase1,nd_ppn,"
                + "(select string_agg(x.receipt_no,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (1,25,38,41) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as bukti_a,"
                + "(select string_agg(x.receipt_date::text,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (1,25,38,41) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as tglbayar_a,"
                + "(select string_agg(q.description,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "inner join ar_settlement q on q.ar_settlement_id = y.ar_settlement_id "
                + "where y.ar_settlement_id in (1,25,38,41) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as jenis_a, "
                + "(premi_p+(ap_sfee_p+ap_pcost_p)) as tag_bruto_p,ap_disc_p as diskon_p,"
                + "(select string_agg(x.receipt_no,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (2,33,39) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as bukti_b,"
                + "(select string_agg(x.receipt_date::text,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (2,33,39) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as tglbayar_b,"
                + "(select string_agg(q.description,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "inner join ar_settlement q on q.ar_settlement_id = y.ar_settlement_id "
                + "where y.ar_settlement_id in (2,33,39) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as jenis_b, "
                + "(((ap_comis_p+ap_fbase_p)+(ap_bfee_p+ap_hfee_p))+ap_ppn_p) as komisi_p,"
                + "(select string_agg(x.receipt_no,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (8) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as bukti_c,"
                + "(select string_agg(x.receipt_date::text,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "where y.ar_settlement_id in (8) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as tglbayar_c,"
                + "(select string_agg(q.description,',') from ar_receipt_lines x "
                + "inner join ar_receipt y on y.ar_receipt_id = x.receipt_id "
                + "inner join ar_settlement q on q.ar_settlement_id = y.ar_settlement_id "
                + "where y.ar_settlement_id in (8) and x.line_type = 'INVOC' and x.pol_id = a.pol_id ) as jenis_c, "
                + "(ap_taxcomm_p+(ap_taxbfee_p+ap_taxhfee_p)) as pajak_p from ( " + sqa.getSQL()
                + "group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 order by 1,3 ) a ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;*/

        SQLUtil S = new SQLUtil();

        String nama_file = "rpp_produksireceipt_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public DTOList PRINCIPAL2() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("a.pol_no,a.pol_type_id,b.short_desc as ref1,a.period_start,a.period_end,"
                + "case when a.pol_type_id in (46,47,48,55,56,57,58,45,51,52,53,54) then c.ref1d else c.ref3d end as ref2,"
                + "case when a.pol_type_id in (46,47,48,55,56,57,58) then c.ref5 else case when a.pol_type_id in (45,51,52,53,54) then c.ref6d else c.ref7d end end as ref3,"
                + "case when a.pol_type_id in (46,47,48,55,56,57,58) then c.ref6 else "
                + "	case when a.pol_type_id in (45,51,53,54) then c.ref11 else "
                + "		case when a.pol_type_id in (52) then c.ref12 else "
                + "		c.ref19 end "
                + "	end "
                + "end as ref4,getpremi(a.status = 'ENDORSE',a.insured_amount_e*a.ccy_rate,a.insured_amount*a.ccy_rate) as insured_amount,(c.premi_total*a.ccy_rate) as premi_total,"
                + "round(sum(checkreas(j.treaty_type='OR',i.premi_amount*a.ccy_rate)),2) as nd_comm1, "
                + "round(sum(checkreas(j.treaty_type='OR',i.ricomm_amt*a.ccy_rate)),2) as nd_comm2, "
                + "round(sum(checkreas(j.treaty_type='KSCBI',i.premi_amount*a.ccy_rate)),2) as nd_comm3, "
                + "round(sum(checkreas(j.treaty_type='KSCBI',i.ricomm_amt*a.ccy_rate)),2) as nd_comm4, "
                + "round(sum(checkreas(j.treaty_type='QS',i.premi_amount*a.ccy_rate)),2) as nd_premi1, "
                + "round(sum(checkreas(j.treaty_type='QS',i.ricomm_amt*a.ccy_rate)),2) as nd_premi2, "
                + "round(sum(checkreas(j.treaty_type='FAC',i.premi_amount*a.ccy_rate)),2) as nd_premi3, "
                + "round(sum(checkreas(j.treaty_type='FAC',i.ricomm_amt*a.ccy_rate)),2) as nd_premi4, "
                + "round(sum(checkreas(j.treaty_type='FACO',i.premi_amount*a.ccy_rate)),2) as nd_premirate1, "
                + "round(sum(checkreas(j.treaty_type='FACO',i.ricomm_amt*a.ccy_rate)),2) as nd_premirate2, "
                + "round(sum(checkreas(j.treaty_type='FACO1',i.premi_amount*a.ccy_rate)),2) as nd_premirate3, "
                + "round(sum(checkreas(j.treaty_type='FACO1',i.ricomm_amt*a.ccy_rate)),2) as nd_premirate4, "
                + "round(sum(checkreas(j.treaty_type='FACO2',i.premi_amount*a.ccy_rate)),2) as nd_taxcomm1, "
                + "round(sum(checkreas(j.treaty_type='FACO2',i.ricomm_amt*a.ccy_rate)),2) as nd_taxcomm2, "
                + "round(sum(checkreas(j.treaty_type='FACO3',i.premi_amount*a.ccy_rate)),2) as nd_taxcomm3, "
                + "round(sum(checkreas(j.treaty_type='FACO3',i.ricomm_amt*a.ccy_rate)),2) as nd_taxcomm4 ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_policy_types b on b.pol_type_id = a.pol_type_id "
                + "inner join ins_pol_obj c on c.pol_id = a.pol_id "
                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = c.ins_pol_obj_id "
                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL') and a.active_flag='Y' and a.effective_flag = 'Y'");
        sqa.addClause("a.ins_policy_type_grp_id in (7,8,30)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) > ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) < ?");
            sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) > ?");
            sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) < ?");
            sqa.addPar(periodEndTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        String sql = "select * from ( " + sqa.getSQL()
                + " group by 1,2,3,4,5,6,7,8,9,10 "
                + "order by 2,1 "
                + " ) a ";

        if (getStEntityID() != null) {
            sql = sql + " where a.ref2 = '" + stEntityName + "'";
        }

        sql = sql + " order by 2,1 ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_LOSS_RATIO_now() throws Exception {
        final String KODA = (String) refPropMap.get("KODA");
        final String JENIS = (String) refPropMap.get("JENIS");
        final String SUMBIS = (String) refPropMap.get("SUMBIS");
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.isYes(stFilterAdd)) {

            String ccCode = null;
            if (stBussinessPolType == null) {
                ccCode = "a.cc_code";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    ccCode = "a.cc_code_source";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    ccCode = "a.cc_code";
                }
            }

            String description = null;
            if (KODA != null) {
                description = ccCode + " as cc_code,d.description as cabang,";
            }
            if (JENIS != null) {
                description = "a.pol_type_id,e.description as jenis,";
            }
            if (SUMBIS != null) {
                description = ccCode + ",d.description as cabang,a.entity_id,c.ent_name as sumbis,";
            }

            String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                    + "sum(case when a.status in ('ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                    + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

            sqa.addSelect(query);

            sqa.addQuery(" from ins_policy a "
                    + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + "inner join ent_master c on c.ent_id = a.entity_id "
                    + "inner join gl_cost_center d on d.cc_code = " + ccCode + " and d.mv_zone is not null "
                    + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id ");

            sqa.addClause("(a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))");
            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stProfileID != null) {
                if (stProfileID.equalsIgnoreCase("1")) {
                    sqa.addClause("c.category1 in ('2','3','4')");
                } else if (stProfileID.equalsIgnoreCase("2")) {
                    sqa.addClause("c.category1 in ('1')");
                }
            }

            if (stCustCategory1 != null) {
                sqa.addClause("c.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stGroupJenisID != null) {
                if (stGroupJenisID.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
                } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
                } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                    sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
                }
            }

            if (stEntityID != null) {
                sqa.addClause("c.ent_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("c.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            if (stCompTypeID != null) {
                String type = null;
                if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                    type = "('93','98')";
                } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                    type = "('89','97')";
                } else {
                    type = "('" + stCompTypeID + "')";
                }
                sqa.addClause("c.ref1 in " + type);
//            sqa.addPar(type);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            String choice = null;
            String groupby = null;
            if (KODA != null) {
                choice = "a.cc_code,a.cabang as ref1,";
                groupby = "1,2";
            }
            if (JENIS != null) {
                choice = "a.pol_type_id,a.jenis as ref1,";
                groupby = "1,2";
            }
            if (SUMBIS != null) {
                choice = "a.cc_code,a.cabang as koda,a.entity_id,a.sumbis as ref1,";
                groupby = "1,2,3,4";
            }

            sql = " select " + choice + " sum(a.tsi+a.tsi_e) as insured_amount,"
                    + "sum(a.premi) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,"
                    + "sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,"
                    + "sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount  from ( " + sqa.getSQL() + " group by " + groupby + " order by 1 "
                    + " ) a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by " + groupby + " order by 1 ";

            /*FILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

            String ccCode = null;
            String kolom1 = null;
            if (stBussinessPolType == null) {
                ccCode = "a.cc_code";
                kolom1 = " a.cc_code ";
            } else {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    ccCode = "a.cc_code";
                    kolom1 = " a.cc_code_source ";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    ccCode = "a.cc_code";
                    kolom1 = " a.cc_code ";
                }
            }

            String description = null;
            String description2 = null;
            String leftjoin = null;
            String table = null;
            String kolom = null;
            String rekap = null;
            if (KODA != null) {
                description = ccCode + " as cc_code,d.description as ref1,";
                description2 = ccCode + " as cc_code,a.description as ref1,";
                leftjoin = "cc_code = a.cc_code ";
                table = " gl_cost_center a ";
                kolom = kolom1 + " as cc_code";
                rekap = " a.cc_code ";
            }
            if (JENIS != null) {
                description = "a.pol_type_id,e.description as ref1,";
                description2 = "a.pol_type_id,a.description as ref1,";
                leftjoin = "pol_type_id = a.pol_type_id ";
                table = " ins_policy_types a ";
                kolom = " a.pol_type_id ";
                rekap = " a.pol_type_id ";
            }
            if (SUMBIS != null) {
                description = "a.entity_id,c.ent_name as ref1,";
                description2 = "a.entity_id,c.ent_name as ref1,";
                leftjoin = "cc_code = a.cc_code ";
                table = " gl_cost_center a ";
                kolom = kolom1 + " as cc_code";
                rekap = " a.cc_code ";
            }

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = "select " + description2 + " b.tsi as insured_amount,b.premi_total,b.nd_disc1,b.nd_comm1,b.nd_brok1,b.nd_hfee,b.nd_feebase1,b.nd_ppn,c.claim_amount "
                        + "from " + table
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,"
                        + "sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as claim_amount from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) c on c." + leftjoin;

                /*current Month*/
                String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                        + "sum(case when a.status in ('ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                        + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

                query = query + " from ins_policy a "
                        + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                        + "inner join ent_master c on c.ent_id = a.entity_id "
                        + "inner join gl_cost_center d on d.cc_code = " + ccCode + " and d.mv_zone is not null "
                        + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id ";

                query = query + " and (a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))";
                query = query + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')";
                query = query + " and a.active_flag='Y' and a.effective_flag='Y'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        query = query + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            query = query + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            query = query + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        query = query + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    query = query + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    query = query + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    query = query + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        query = query + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        query = query + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        query = query + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                currentMonth = "select " + rekap + ",a.ref1,sum(a.tsi+a.tsi_e) as insured_amount,sum(a.premi) as premi_total,"
                        + "sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,"
                        + "sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount from ( select " + query + " group by 1,2 order by 1 "
                        + ") a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by 1,2 ";

            }//current month
            else {
                beforeMonth = "select " + description2 + " b.tsi as insured_amount,b.premi_total,b.nd_disc1,b.nd_comm1,b.nd_brok1,b.nd_hfee,b.nd_feebase1,b.nd_ppn,c.claim_amount "
                        + "from " + table
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,"
                        + "sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as claim_amount from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by 1 order by 1 ) c on c." + leftjoin;
            }

            sqa.addSelect(rekap + ",a.ref1,sum(coalesce(a.insured_amount,0)) as insured_amount,sum(coalesce(a.premi_total,0)) as premi_total,"
                    + "sum(coalesce(a.nd_disc1,0)) as nd_disc1,sum(coalesce(a.nd_comm1,0)) as nd_comm1,sum(coalesce(a.nd_brok1,0)) as nd_brok1,"
                    + "sum(coalesce(a.nd_hfee,0)) as nd_hfee,sum(coalesce(a.nd_feebase1,0)) as nd_feebase1,sum(coalesce(a.nd_ppn,0)) as nd_ppn,"
                    + "sum(coalesce(a.claim_amount,0)) as claim_amount ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth;
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            sql = sqa.getSQL() + " group by 1,2 order by 1 ";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_LOSS_RATIO_now() throws Exception {
        final String KODA = (String) refPropMap.get("KODA");
        final String JENIS = (String) refPropMap.get("JENIS");
        final String SUMBIS = (String) refPropMap.get("SUMBIS");

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal premibruto = new BigDecimal(0);
        BigDecimal preminetto = new BigDecimal(0);
        BigDecimal lrnetto = new BigDecimal(0);
//        int norut = 0;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow rowH = sheet.createRow(0);
//            if (JENIS != null) {
//                rowH.createCell(0).setCellValue("CABANG : " + getStBranchName().toUpperCase());
//            }

            //bikin header
            XSSFRow row0 = sheet.createRow(1);
            if (KODA != null) {
                row0.createCell(0).setCellValue("KODA");
                row0.createCell(1).setCellValue("CABANG");
            }
            if (JENIS != null) {
                row0.createCell(0).setCellValue("JENID");
                row0.createCell(1).setCellValue("JENIS");
            }
            if (SUMBIS != null) {
                row0.createCell(0).setCellValue("ENTID");
                row0.createCell(1).setCellValue("SUMBIS");
            }
            row0.createCell(2).setCellValue("TSI");
            row0.createCell(3).setCellValue("PREMI BRUTO");
            row0.createCell(4).setCellValue("PREMI NETTO");
            row0.createCell(5).setCellValue("KLAIM");
            row0.createCell(6).setCellValue("LR NETTO");
            if (SUMBIS != null) {
                row0.createCell(7).setCellValue("KODA");
                row0.createCell(8).setCellValue("CABANG");
            }

            premibruto = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total"), h.getFieldValueByFieldNameBD("nd_disc1"));

            preminetto = BDUtil.sub(premibruto, h.getFieldValueByFieldNameBD("nd_comm1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_brok1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_hfee"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_feebase1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_ppn"));

            lrnetto = BDUtil.div(h.getFieldValueByFieldNameBD("claim_amount"), preminetto, 5);

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 2);
            if (KODA != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (JENIS != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
                row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1")));
            }
            if (SUMBIS != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(3).setCellValue(premibruto.doubleValue());
            row.createCell(4).setCellValue(preminetto.doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("claim_amount").doubleValue());
            if (lrnetto != null) {
                row.createCell(6).setCellValue(lrnetto.doubleValue() + "%");
            }
            if (SUMBIS != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("koda"));
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_LOSS_RATIO() throws Exception {
        final String KODA = (String) refPropMap.get("KODA");
        final String JENIS = (String) refPropMap.get("JENIS");
        final String SUMBIS = (String) refPropMap.get("SUMBIS");
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;
        String sql2 = null;

        if (Tools.isYes(stFilterAdd)) {

//            String ccCode = null;
//            if (stBussinessPolType == null) {
//                ccCode = "a.cc_code";
//            } else {
//                if (stBussinessPolType.equalsIgnoreCase("1")) {
//                    ccCode = "a.cc_code_source";
//                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
//                    ccCode = "a.cc_code";
//                }
//            }

            String description = "a.cc_code,a.cc_code_source,d.description as cabang,f.description as cabang_source,a.pol_type_id,e.description as jenis,a.entity_id,c.ent_name as sumbis,";
//            String description = null;
//            if (KODA != null) {
//                description = ccCode + " as cc_code,d.description as cabang,";
//            }
//            if (JENIS != null) {
//                description = "a.pol_type_id,e.description as jenis,";
//            }
//            if (SUMBIS != null) {
//                description = ccCode + ",d.description as cabang,a.entity_id,c.ent_name as sumbis,";
//            }

            String query = description + " sum(case when a.status in ('POLICY','RENEWAL') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                    + "sum(case when a.status in ('ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                    + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,"
                    + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                    + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                    + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
            if (getPolicyDateFrom() != null) {
                query = query + " and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
            }

            if (getPolicyDateTo() != null) {
                query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
            }
            query = query
                    + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

            sqa.addSelect(query);

            sqa.addQuery(" from ins_policy a "
                    + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                    + "inner join ent_master c on c.ent_id = a.entity_id "
                    + "inner join gl_cost_center d on d.cc_code = a.cc_code and d.mv_zone is not null "
                    + "left join gl_cost_center f on f.cc_code = a.cc_code_source "
                    + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id ");

            sqa.addClause("(a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))");
            sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
            sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = ?");
                sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }

            if (stProfileID != null) {
                if (stProfileID.equalsIgnoreCase("1")) {
                    sqa.addClause("c.category1 in ('2','3','4')");
                } else if (stProfileID.equalsIgnoreCase("2")) {
                    sqa.addClause("c.category1 in ('1')");
                }
            }

            if (stCustCategory1 != null) {
                sqa.addClause("c.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            if (stCreditID != null) {
                sqa.addClause("a.kreasi_type_id = ?");
                sqa.addPar(stCreditID);
            }

            if (stGroupJenisID != null) {
                if (stGroupJenisID.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,41,42,43,44,45,46,48,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96)");
                } else if (stGroupJenisID.equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (4,21,31,32,33,59,97)");
                } else if (stGroupJenisID.equalsIgnoreCase("3")) {
                    sqa.addClause("a.pol_type_id in (47,51,52,53,54,55,56,57,58,60,73,74,75,80)");
                }
            }

            if (stEntityID != null) {
                sqa.addClause("c.ent_id = ?");
                sqa.addPar(stEntityID);
            }

            if (stCompanyID != null) {
                sqa.addClause("c.ref2 = ?");
                sqa.addPar(stCompanyID);
            }

            if (stCreateID != null) {
                sqa.addClause("a.create_who = ?");
                sqa.addPar(stCreateID);
            }

            if (stCompTypeID != null) {
                String type = null;
                if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                    type = "('93','98')";
                } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                    type = "('89','97')";
                } else {
                    type = "('" + stCompTypeID + "')";
                }
                sqa.addClause("c.ref1 in " + type);
//            sqa.addPar(type);
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    sqa.addClause("a.cc_code = ?");
                    sqa.addPar(stBranch);

                    if (stBranchSource != null) {
                        sqa.addClause("a.cc_code_source = ?");
                        sqa.addPar(stBranchSource);
                    }
                    if (stRegionSource != null) {
                        sqa.addClause("a.region_id_source = ?");
                        sqa.addPar(stRegionSource);
                    }
                } else {
                    sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                    sqa.addPar(stBranch);
                    sqa.addPar(stBranch);
                }
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = ?");
                sqa.addPar(stRegion);
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
                } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
                } else {
                    sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
                }
            }

            String choice = null;
            String choice2 = null;
            String groupby = null;
            String groupby2 = null;
            String orderby2 = null;
            if (KODA != null) {
                choice = "a.cc_code,a.cabang as ref1,";
                groupby = "1,2";
                orderby2 = "1,2";
            }
            if (JENIS != null) {
                choice = "a.pol_type_id,a.jenis as ref1,";
                choice2 = "a.cc_code,a.cabang as koda,(case when a.cc_code = '80' then a.cc_code_source end) as cc_code_source,(case when a.cc_code = '80' then a.cabang_source end) as cabang_source,a.pol_type_id,a.jenis as ref1,";
                groupby = "1,2";
                groupby2 = "1,2,3,4,5,6";
                orderby2 = "1,3,5";
            }
            if (SUMBIS != null) {
                choice = "a.cc_code,a.cabang,a.entity_id,a.sumbis as ref1,";
                groupby = "1,2,3,4";
                orderby2 = "1,2";
            }

            sql = " select " + choice + " sum(a.tsi+a.tsi_e) as insured_amount,"
                    + "sum(a.premi) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,"
                    + "sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,"
                    + "sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount  from ( " + sqa.getSQL() + " group by 1,2,3,4,5,6,7,8 order by 1 "
                    + " ) a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by " + groupby + " order by 1 ";

            if (JENIS != null) {
                sql2 = " select " + choice2 + " sum(a.tsi+a.tsi_e) as insured_amount,"
                        + "sum(a.premi) as premi_total,sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,"
                        + "sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,sum(a.feebase) as nd_feebase1,"
                        + "sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount  from ( " + sqa.getSQL() + " group by 1,2,3,4,5,6,7,8 order by 1 "
                        + " ) a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by " + groupby2 + " order by " + orderby2;

            }

            /*stFILTERADD*/
        } else {

            Date tglPolisFrom = null;
            if (getPolicyDateFrom() != null) {
                tglPolisFrom = getPolicyDateFrom();
            } else if (getAppDateFrom() != null) {
                tglPolisFrom = getAppDateFrom();
            }

            Date tglPolisTo = null;
            if (getPolicyDateTo() != null) {
                tglPolisTo = getPolicyDateTo();
            } else if (getAppDateTo() != null) {
                tglPolisTo = getAppDateTo();
            }

            String tahun = DateUtil.getYear(tglPolisTo);
            String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
            String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

            System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
            System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

            String beforeMonth = null;
            String currentMonth = null;
            String addQuery = null;

//            String ccCode = null;
//            String kolom1 = null;
//            if (stBussinessPolType == null) {
//                ccCode = "a.cc_code";
//                kolom1 = " a.cc_code ";
//            } else {
//                if (stBussinessPolType.equalsIgnoreCase("1")) {
//                    ccCode = "a.cc_code";
//                    kolom1 = " a.cc_code_source ";
//                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
//                    ccCode = "a.cc_code";
//                    kolom1 = " a.cc_code ";
//                }
//            }

            String tableInduk = "select a.cc_code,d.description as koda,a.cc_code_source,f.description as koda_source,a.pol_type_id,e.description as ref1,"
                    + "b.tsi as insured_amount,b.preto as premi_total,b.diskon as nd_disc1,b.komisi as nd_comm1,b.bfee as nd_brok1,"
                    + "b.hfee as nd_hfee,b.feebase as nd_feebase1,b.ppn as nd_ppn,c.klaim as claim_amount from ( select a.* from ( "
                    + "select a.cc_code,a.cc_code_source,a.pol_type_id "
                    + "from ins_rekap_produksi_det a where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' group by 1,2,3 union all "
                    + "select a.cc_code,a.cc_code_source,a.pol_type_id "
                    + "from ins_rekap_klaim a where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' group by 1,2,3 "
                    + ") a group by 1,2,3 order by 1,2 ) a ";

            String description2 = null;
            String leftjoin = null;
            String leftjoin2 = null;
            String table2 = null;
            String kolom = null;
            String rekap2 = null;
            String groupby = null;
            String groupby2 = null;
            leftjoin = "pol_type_id = a.pol_type_id and b.cc_code = a.cc_code and b.cc_code_source = a.cc_code_source ";
            leftjoin2 = "pol_type_id = a.pol_type_id and c.cc_code = a.cc_code and c.cc_code_source = a.cc_code_source ";
            description2 = "a.cc_code,d.description as koda,a.cc_code_source,f.description as koda_source,a.pol_type_id,e.description as ref1,";
            table2 = " inner join gl_cost_center d on d.cc_code = a.cc_code "
                    + " inner join ins_policy_types e on e.pol_type_id = a.pol_type_id "
                    + " left join gl_cost_center f on f.cc_code = a.cc_code_source ";
            kolom = " a.cc_code,a.cc_code_source,a.pol_type_id ";
            rekap2 = " a.cc_code,a.koda,(case when a.cc_code = '80' then a.cc_code_source end) as cc_code_source,(case when a.cc_code = '80' then a.koda_source end) as cabang_source,a.pol_type_id,a.ref1 ";
            groupby = " 1,2,3 ";
            groupby2 = " 1,2,3,4,5,6 ";

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

                beforeMonth = tableInduk
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as preto,sum(a.diskon) as diskon,sum(a.komisi) as komisi,sum(a.bfee) as bfee,"
                        + "sum(a.hfee) as hfee,sum(a.feebase) as feebase,sum(a.ppn) as ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by " + groupby + " order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as klaim from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by " + groupby + " order by 1 ) c on c." + leftjoin2
                        + table2;

                /*current Month*/
                String query = description2 + " sum(case when a.status in ('POLICY','RENEWAL') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi, "
                        + "sum(case when a.status in ('ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.insured_amount_e*a.ccy_rate,0),coalesce(b.amount*a.ccy_rate,0)*-1) else 0 end) as tsi_e, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),coalesce(b.premi_amt*a.ccy_rate,0)*-1) else 0 end) as premi, "
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.disc_amount*a.ccy_rate,0)*-1) else 0 end) as diskon,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.comm_amount*a.ccy_rate,0)*-1) else 0 end) as komisi,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.broker_amount*a.ccy_rate,0)*-1) else 0 end) as bfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0),"
                        + "coalesce(b.hfee_amount*a.ccy_rate,0)*-1) else 0 end) as hfee,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,"
                        + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0),0) else 0 end) as feebase,"
                        + "sum(case when a.status in ('POLICY','RENEWAL','ENDORSE') ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x where x.ins_item_id in (57,58,59,71,76,78,85,86,87,91,101) and a.pol_id = x.pol_id),0),0) else 0 end) as ppn,"
                        + "sum(case when a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA' ";
                if (getPolicyDateFrom() != null) {
                    query = query + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
                }

                if (getPolicyDateTo() != null) {
                    query = query + " and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
                }
                query = query
                        + "then getpremiend(b.entity_id,coalesce(a.claim_amount*a.ccy_rate_claim,0),0) else 0 end) as claim ";

                query = query + " from ins_policy a "
                        + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                        + "inner join ent_master c on c.ent_id = a.entity_id "
                        + "inner join gl_cost_center d on d.cc_code = a.cc_code and d.mv_zone is not null "
                        + "inner join ins_policy_types e on e.pol_type_id = a.pol_type_id "
                        + "left join gl_cost_center f on f.cc_code = a.cc_code_source ";

                query = query + " and (a.status in ('POLICY','RENEWAL','ENDORSE') or (a.status in ('CLAIM','CLAIM ENDORSE') and a.claim_status ='DLA'))";
                query = query + " and (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')";
                query = query + " and a.active_flag='Y' and a.effective_flag='Y'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        query = query + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            query = query + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            query = query + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        query = query + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    query = query + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    query = query + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    query = query + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        query = query + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        query = query + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        query = query + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        query = query + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                currentMonth = "select " + rekap2 + ",sum(a.tsi+a.tsi_e) as insured_amount,sum(a.premi) as premi_total,"
                        + "sum(a.diskon) as nd_disc1,sum(a.komisi) as nd_comm1,sum(a.bfee) as nd_brok1,sum(a.hfee) as nd_hfee,"
                        + "sum(a.feebase) as nd_feebase1,sum(a.ppn) as nd_ppn,sum(a.claim) as claim_amount from ( select " + query + " group by " + groupby2 + " order by 1 "
                        + ") a where (tsi <> 0 or tsi_e <> 0 or premi <> 0 or diskon <> 0 or claim <> 0) group by " + groupby2;

            }//current month
            else {
                beforeMonth = tableInduk
                        + "left join ( select " + kolom + ",sum(tsi) as tsi,sum(preto) as preto,sum(a.diskon) as diskon,sum(a.komisi) as komisi,sum(a.bfee) as bfee,"
                        + "sum(a.hfee) as hfee,sum(a.feebase) as feebase,sum(a.ppn) as ppn from ins_rekap_produksi_det a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by " + groupby + " order by 1 ) b on b." + leftjoin
                        + "left join ( select " + kolom + ",sum(klaim) as klaim from ins_rekap_klaim a "
                        + "where a.tahun = '" + tahun + "' and a.bulan between '" + bulanAwal + "' and '" + bulanAkhir + "'"; //where a.sub_code <> '00'";

                if (stBranch != null) {
                    if (stBranch.equalsIgnoreCase("80")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                        if (stBranchSource != null) {
                            beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                        }
                        if (stRegionSource != null) {
                            beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                        }
                    } else {
                        beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                    }
                }

                if (stRegion != null) {
                    beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
                }

                if (stPolicyTypeGroupID != null) {
                    beforeMonth = beforeMonth + " and a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'";
                }

                if (stPolicyTypeID != null) {
                    beforeMonth = beforeMonth + " and a.pol_type_id = '" + stPolicyTypeID + "'";
                }

                if (stBussinessPolType != null) {
                    if (stBussinessPolType.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.cc_code = '80'";
                    } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                    }
                }

                if (stBussinessPolTypeCob != null) {
                    if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                    } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                    } else {
                        beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                    }
                }

                beforeMonth = beforeMonth + " group by " + groupby + " order by 1 ) c on c." + leftjoin2
                        + table2;
            }

            sqa.addSelect(rekap2 + ",sum(coalesce(a.insured_amount,0)) as insured_amount,sum(coalesce(a.premi_total,0)) as premi_total,"
                    + "sum(coalesce(a.nd_disc1,0)) as nd_disc1,sum(coalesce(a.nd_comm1,0)) as nd_comm1,sum(coalesce(a.nd_brok1,0)) as nd_brok1,"
                    + "sum(coalesce(a.nd_hfee,0)) as nd_hfee,sum(coalesce(a.nd_feebase1,0)) as nd_feebase1,sum(coalesce(a.nd_ppn,0)) as nd_ppn,"
                    + "sum(coalesce(a.claim_amount,0)) as claim_amount ");

            if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
                addQuery = beforeMonth + " union all " + currentMonth;
            } else {
                addQuery = beforeMonth;
            }

            sqa.addQuery(" from (" + addQuery + ") a ");

            if (KODA != null) {
                sql = "select a.cc_code,a.description as koda,sum(coalesce(a.insured_amount,0)) as insured_amount,sum(coalesce(a.premi_total,0)) as premi_total,"
                        + "sum(coalesce(a.nd_disc1,0)) as nd_disc1,sum(coalesce(a.nd_comm1,0)) as nd_comm1,sum(coalesce(a.nd_brok1,0)) as nd_brok1,"
                        + "sum(coalesce(a.nd_hfee,0)) as nd_hfee,sum(coalesce(a.nd_feebase1,0)) as nd_feebase1,sum(coalesce(a.nd_ppn,0)) as nd_ppn,"
                        + "sum(coalesce(a.claim_amount,0)) as claim_amount from ( " + sqa.getSQL() + " group by " + groupby2 + " order by 1,3 ) a group by " + groupby + " order by 1,3 ";
            }

            if (JENIS != null) {
//                sql = "select a.cc_code,a.koda,a.cc_code_source,a.cabang_source,a.pol_type_id,a.ref1,"
                sql = "select a.pol_type_id,a.ref1,"
                        + "sum(coalesce(a.insured_amount,0)) as insured_amount,sum(coalesce(a.premi_total,0)) as premi_total,"
                        + "sum(coalesce(a.nd_disc1,0)) as nd_disc1,sum(coalesce(a.nd_comm1,0)) as nd_comm1,sum(coalesce(a.nd_brok1,0)) as nd_brok1,"
                        + "sum(coalesce(a.nd_hfee,0)) as nd_hfee,sum(coalesce(a.nd_feebase1,0)) as nd_feebase1,sum(coalesce(a.nd_ppn,0)) as nd_ppn,"
                        + "sum(coalesce(a.claim_amount,0)) as claim_amount from ( " + sqa.getSQL() + " group by " + groupby2 + " order by 1,3 ) a group by 1,2 order by 1 ";
            }

            sql2 = sqa.getSQL() + " group by " + groupby2 + " order by 1,3,5 ";
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        if (JENIS != null) {
            final DTOList l2 = ListUtil.getDTOListFromQuery(
                    sql2,
                    sqa.getPar(),
                    HashDTO.class);

            SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);
        }

        return l;
    }

    public void EXPORT_LOSS_RATIO() throws Exception {
        final String KODA = (String) refPropMap.get("KODA");
        final String JENIS = (String) refPropMap.get("JENIS");
        final String SUMBIS = (String) refPropMap.get("SUMBIS");

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("rekap");
        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal premibruto = new BigDecimal(0);
        BigDecimal preminetto = new BigDecimal(0);
        BigDecimal lrnetto = new BigDecimal(0);
//        int norut = 0;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            XSSFRow rowH = sheet.createRow(0);
//            if (JENIS != null) {
//                rowH.createCell(0).setCellValue("CABANG : " + getStBranchName().toUpperCase());
//            }

            //bikin header
            XSSFRow row0 = sheet.createRow(1);
            if (KODA != null) {
                row0.createCell(0).setCellValue("KODA");
                row0.createCell(1).setCellValue("CABANG");
            }
            if (JENIS != null) {
                row0.createCell(0).setCellValue("JENID");
                row0.createCell(1).setCellValue("JENIS");
            }
            if (SUMBIS != null) {
                row0.createCell(0).setCellValue("ENTID");
                row0.createCell(1).setCellValue("SUMBIS");
            }
            row0.createCell(2).setCellValue("TSI");
            row0.createCell(3).setCellValue("PREMI BRUTO");
            row0.createCell(4).setCellValue("PREMI NETTO");
            row0.createCell(5).setCellValue("KLAIM");
            row0.createCell(6).setCellValue("LR NETTO");
            if (SUMBIS != null) {
                row0.createCell(7).setCellValue("KODA");
                row0.createCell(8).setCellValue("CABANG");
            }

            premibruto = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total"), h.getFieldValueByFieldNameBD("nd_disc1"));

            preminetto = BDUtil.sub(premibruto, h.getFieldValueByFieldNameBD("nd_comm1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_brok1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_hfee"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_feebase1"));
            preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_ppn"));

            lrnetto = BDUtil.div(h.getFieldValueByFieldNameBD("claim_amount"), preminetto, 5);

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 2);
            if (KODA != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (JENIS != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
                row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1")));
            }
            if (SUMBIS != null) {
                row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
                row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(3).setCellValue(premibruto.doubleValue());
            row.createCell(4).setCellValue(preminetto.doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("claim_amount").doubleValue());
            if (lrnetto != null) {
                row.createCell(6).setCellValue(lrnetto.doubleValue() + "%");
            }
            if (SUMBIS != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("koda"));
            }
        }

        if (JENIS != null) {
            XSSFSheet sheet2 = wb.createSheet("detil");
            final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");
            for (int i = 0; i < list2.size(); i++) {
                HashDTO h = (HashDTO) list2.get(i);

                XSSFRow rowH = sheet2.createRow(0);
//            if (JENIS != null) {
//                rowH.createCell(0).setCellValue("CABANG : " + getStBranchName().toUpperCase());
//            }

                //bikin header
                XSSFRow row0 = sheet2.createRow(1);
                if (KODA != null) {
                    row0.createCell(0).setCellValue("KODA");
                    row0.createCell(1).setCellValue("CABANG");
                }
                if (JENIS != null) {
                    row0.createCell(0).setCellValue("JENID");
                    row0.createCell(1).setCellValue("JENIS");
                }
                if (SUMBIS != null) {
                    row0.createCell(0).setCellValue("ENTID");
                    row0.createCell(1).setCellValue("SUMBIS");
                }
                row0.createCell(2).setCellValue("TSI");
                row0.createCell(3).setCellValue("PREMI BRUTO");
                row0.createCell(4).setCellValue("PREMI NETTO");
                row0.createCell(5).setCellValue("KLAIM");
                row0.createCell(6).setCellValue("LR NETTO");
                if (SUMBIS != null || JENIS != null) {
                    row0.createCell(7).setCellValue("KODA");
                    row0.createCell(8).setCellValue("CABANG");
                    row0.createCell(9).setCellValue("KODA SOURCE");
                    row0.createCell(10).setCellValue("CABANG SOURCE");
                }

                premibruto = BDUtil.sub(h.getFieldValueByFieldNameBD("premi_total"), h.getFieldValueByFieldNameBD("nd_disc1"));

                preminetto = BDUtil.sub(premibruto, h.getFieldValueByFieldNameBD("nd_comm1"));
                preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_brok1"));
                preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_hfee"));
                preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_feebase1"));
                preminetto = BDUtil.sub(preminetto, h.getFieldValueByFieldNameBD("nd_ppn"));

                lrnetto = BDUtil.div(h.getFieldValueByFieldNameBD("claim_amount"), preminetto, 5);

                //bikin isi cell
                XSSFRow row = sheet2.createRow(i + 2);
                if (KODA != null) {
                    row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                    row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
                }
                if (JENIS != null) {
                    row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
                    row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1")));
                }
                if (SUMBIS != null) {
                    row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
                    row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("ref1"));
                }
                row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
                row.createCell(3).setCellValue(premibruto.doubleValue());
                row.createCell(4).setCellValue(preminetto.doubleValue());
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("claim_amount").doubleValue());
                if (lrnetto != null) {
                    row.createCell(6).setCellValue(lrnetto.doubleValue() + "%");
                }
                if (SUMBIS != null || JENIS != null) {
                    row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
                    row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("koda"));
                    row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("cc_code_source"));
                    row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("cabang_source"));
                }
            }
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_RPP_OJK() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code as koda,c.description as cabang,d.ins_policy_type_grp_id2 as ins_policy_type_grp_id,a.pol_type_id,"
                + "a.pol_id,a.pol_no,e.ent_id,e.ent_name,e.category1 as sumbis,"
                + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as peserta,"
                //                + "sum(a.premi_total*a.ccy_rate) as premi, "
                + "sum(getpremiend(b.entity_id,coalesce(a.insured_amount*a.ccy_rate,0),0)) as insured,"
                + "sum(getpremiend(b.entity_id,coalesce(a.premi_total*a.ccy_rate,0),b.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(b.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(b.disc_amount,0))*a.ccy_rate)*-1)) as diskon, "
                + "(select f.sub_region_name from ent_address f where f.ent_id = e.ent_id limit 1) as kabupaten ");

        sqa.addQuery("from ins_policies a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + "inner join gl_cost_center c on c.cc_code = a.cc_code "
                + "inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + "inner join ent_master e on e.ent_id = a.entity_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        final String sql = " select koda,cabang,ent_name,"
                + "sum(getpremi2(ins_policy_type_grp_id = 16,insured)) as insured1,"
                + "sum(getpremi2(ins_policy_type_grp_id = 16,premi)) as premi1,"
                + "sum(getpremi2(ins_policy_type_grp_id = 16,polno)) as polno1,"
                + "sum(getpremi2(ins_policy_type_grp_id = 16,peserta)) as peserta1,"
                + "sum(getpremi2(ins_policy_type_grp_id = 17,insured)) as insured2,"
                + "sum(getpremi2(ins_policy_type_grp_id = 17,premi)) as premi2,"
                + "sum(getpremi2(ins_policy_type_grp_id = 17,polno)) as polno2,"
                + "sum(getpremi2(ins_policy_type_grp_id = 17,peserta)) as peserta2,"
                + "sum(getpremi2(ins_policy_type_grp_id = 18,insured)) as insured3,"
                + "sum(getpremi2(ins_policy_type_grp_id = 18,premi)) as premi3,"
                + "sum(getpremi2(ins_policy_type_grp_id = 18,polno)) as polno3,"
                + "sum(getpremi2(ins_policy_type_grp_id = 18,peserta)) as peserta3,"
                + "sum(getpremi2(ins_policy_type_grp_id = 19,insured)) as insured4,"
                + "sum(getpremi2(ins_policy_type_grp_id = 19,premi)) as premi4,"
                + "sum(getpremi2(ins_policy_type_grp_id = 19,polno)) as polno4,"
                + "sum(getpremi2(ins_policy_type_grp_id = 19,peserta)) as peserta4,"
                + "sum(getpremi2(ins_policy_type_grp_id = 21,insured)) as insured5,"
                + "sum(getpremi2(ins_policy_type_grp_id = 21,premi)) as premi5,"
                + "sum(getpremi2(ins_policy_type_grp_id = 21,polno)) as polno5,"
                + "sum(getpremi2(ins_policy_type_grp_id = 21,peserta)) as peserta5,"
                + "sum(getpremi2(ins_policy_type_grp_id = 22,insured)) as insured6,"
                + "sum(getpremi2(ins_policy_type_grp_id = 22,premi)) as premi6,"
                + "sum(getpremi2(ins_policy_type_grp_id = 22,polno)) as polno6,"
                + "sum(getpremi2(ins_policy_type_grp_id = 22,peserta)) as peserta6,"
                + "sum(getpremi2(ins_policy_type_grp_id = 23,insured)) as insured7,"
                + "sum(getpremi2(ins_policy_type_grp_id = 23,premi)) as premi7,"
                + "sum(getpremi2(ins_policy_type_grp_id = 23,polno)) as polno7,"
                + "sum(getpremi2(ins_policy_type_grp_id = 23,peserta)) as peserta7,"
                + "sum(getpremi2(ins_policy_type_grp_id = 24,insured)) as insured8,"
                + "sum(getpremi2(ins_policy_type_grp_id = 24,premi)) as premi8,"
                + "sum(getpremi2(ins_policy_type_grp_id = 24,polno)) as polno8,"
                + "sum(getpremi2(ins_policy_type_grp_id = 24,peserta)) as peserta8,"
                + "sum(getpremi2(ins_policy_type_grp_id = 25,insured)) as insured9,"
                + "sum(getpremi2(ins_policy_type_grp_id = 25,premi)) as premi9,"
                + "sum(getpremi2(ins_policy_type_grp_id = 25,polno)) as polno9,"
                + "sum(getpremi2(ins_policy_type_grp_id = 25,peserta)) as peserta9,"
                + "sum(getpremi2(ins_policy_type_grp_id = 26,insured)) as insured10,"
                + "sum(getpremi2(ins_policy_type_grp_id = 26,premi)) as premi10,"
                + "sum(getpremi2(ins_policy_type_grp_id = 26,polno)) as polno10,"
                + "sum(getpremi2(ins_policy_type_grp_id = 26,peserta)) as peserta10,"
                + "sum(getpremi2(ins_policy_type_grp_id = 27,insured)) as insured11,"
                + "sum(getpremi2(ins_policy_type_grp_id = 27,premi)) as premi11,"
                + "sum(getpremi2(ins_policy_type_grp_id = 27,polno)) as polno11,"
                + "sum(getpremi2(ins_policy_type_grp_id = 27,peserta)) as peserta11,"
                + "sum(getpremi2(ins_policy_type_grp_id = 28,insured)) as insured12,"
                + "sum(getpremi2(ins_policy_type_grp_id = 28,premi)) as premi12,"
                + "sum(getpremi2(ins_policy_type_grp_id = 28,polno)) as polno12,"
                + "sum(getpremi2(ins_policy_type_grp_id = 28,peserta)) as peserta12,"
                + "sum(getpremi2(ins_policy_type_grp_id = 31,insured)) as insured13,"
                + "sum(getpremi2(ins_policy_type_grp_id = 31,premi)) as premi13,"
                + "sum(getpremi2(ins_policy_type_grp_id = 31,polno)) as polno13,"
                + "sum(getpremi2(ins_policy_type_grp_id = 31,peserta)) as peserta13,"
                + "sum(getpremi2(ins_policy_type_grp_id = 33,insured)) as insured14,"
                + "sum(getpremi2(ins_policy_type_grp_id = 33,premi)) as premi14,"
                + "sum(getpremi2(ins_policy_type_grp_id = 33,polno)) as polno14,"
                + "sum(getpremi2(ins_policy_type_grp_id = 33,peserta)) as peserta14,"
                + "sum(polno) as polno,sum(peserta) as peserta,sum(insured) as insured,sum(premi) as premi "
                + "from ( select koda,cabang,ins_policy_type_grp_id,coalesce(kabupaten,ent_name) as ent_name, "
                + "count(pol_no) as polno,sum(peserta) as peserta,sum(insured) as insured,sum((premi-diskon)) as premi "
                + "from ( " + sqa.getSQL()
                + " group by a.cc_code,c.description,d.ins_policy_type_grp_id2,a.pol_type_id,"
                + "a.pol_id,a.pol_no,e.ent_id,e.ent_name,e.category1 "
                + ") a group by koda,cabang,ins_policy_type_grp_id,kabupaten,ent_name "
                + "order by koda,ins_policy_type_grp_id ) a "
                + "group by koda,cabang,ent_name order by koda,ent_name ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_RPP_OJK() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("detail");
        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        BigDecimal[] t = new BigDecimal[60];
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            /*row0.createCell(1).setCellValue("Koda");
            row0.createCell(2).setCellValue("Provinsi");
            row0.createCell(3).setCellValue("Kabupaten/Kota");
            row0.createCell(4).setCellValue("Harta Benda");
            row0.createCell(7).setCellValue("Kendaraan Bermotor");
            row0.createCell(10).setCellValue("Pengangkutan");
            row0.createCell(13).setCellValue("Rangka Kapal");
            row0.createCell(16).setCellValue("Satelit");
            row0.createCell(19).setCellValue("Energi Darat");
            row0.createCell(22).setCellValue("Energi Offshore");
            row0.createCell(25).setCellValue("Rekayasa");
            row0.createCell(28).setCellValue("Tanggung Gugat");
            row0.createCell(31).setCellValue("Kecelakaan Diri");
            row0.createCell(34).setCellValue("Kredit");
            row0.createCell(37).setCellValue("Penjaminan");
            row0.createCell(40).setCellValue("Aneka");
            row0.createCell(43).setCellValue("Kesehatan");
            row0.createCell(46).setCellValue("Total");*/

            row0.createCell(1).setCellValue("Koda");
            row0.createCell(2).setCellValue("Provinsi");
            row0.createCell(3).setCellValue("Kabupaten/Kota");
            row0.createCell(4).setCellValue("Harta Benda");
            row0.createCell(8).setCellValue("Kendaraan Bermotor");
            row0.createCell(12).setCellValue("Pengangkutan");
            row0.createCell(16).setCellValue("Rangka Kapal");
            row0.createCell(20).setCellValue("Satelit");
            row0.createCell(24).setCellValue("Energi Darat");
            row0.createCell(28).setCellValue("Energi Offshore");
            row0.createCell(32).setCellValue("Rekayasa");
            row0.createCell(36).setCellValue("Tanggung Gugat");
            row0.createCell(40).setCellValue("Kecelakaan Diri");
            row0.createCell(44).setCellValue("Kredit");
            row0.createCell(48).setCellValue("Penjaminan");
            row0.createCell(52).setCellValue("Aneka");
            row0.createCell(56).setCellValue("Kesehatan");
            row0.createCell(60).setCellValue("Total");

            /*sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 0));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 1, 1));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 2, 2));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 3, 3));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 4, 6));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 7, 9));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 10, 12));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 13, 15));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 16, 18));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 19, 21));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 22, 24));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 25, 27));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 28, 30));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 31, 33));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 34, 36));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 37, 39));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 40, 42));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 43, 45));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 46, 48));*/

            sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 0));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 1, 1));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 2, 2));
            sheet.addMergedRegion(new CellRangeAddress(0, 2, 3, 3));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 4, 7));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 8, 11));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 12, 15));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 16, 19));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 20, 23));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 24, 27));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 28, 31));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 32, 35));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 36, 39));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 40, 43));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 44, 47));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 48, 51));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 52, 55));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 56, 59));
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 60, 63));

            //bikin header
            HSSFRow row1 = sheet.createRow(1);
            row1.createCell(4).setCellValue("tsi");
            row1.createCell(5).setCellValue("premi");
            row1.createCell(6).setCellValue("jumlah");
            row1.createCell(7).setCellValue("jumlah");
            row1.createCell(8).setCellValue("tsi");
            row1.createCell(9).setCellValue("premi");
            row1.createCell(10).setCellValue("jumlah");
            row1.createCell(11).setCellValue("jumlah");
            row1.createCell(12).setCellValue("tsi");
            row1.createCell(13).setCellValue("premi");
            row1.createCell(14).setCellValue("jumlah");
            row1.createCell(15).setCellValue("jumlah");
            row1.createCell(16).setCellValue("tsi");
            row1.createCell(17).setCellValue("premi");
            row1.createCell(18).setCellValue("jumlah");
            row1.createCell(19).setCellValue("jumlah");
            row1.createCell(20).setCellValue("tsi");
            row1.createCell(21).setCellValue("premi");
            row1.createCell(22).setCellValue("jumlah");
            row1.createCell(23).setCellValue("jumlah");
            row1.createCell(24).setCellValue("tsi");
            row1.createCell(25).setCellValue("premi");
            row1.createCell(26).setCellValue("jumlah");
            row1.createCell(27).setCellValue("jumlah");
            row1.createCell(28).setCellValue("tsi");
            row1.createCell(29).setCellValue("premi");
            row1.createCell(30).setCellValue("jumlah");
            row1.createCell(31).setCellValue("jumlah");
            row1.createCell(32).setCellValue("tsi");
            row1.createCell(33).setCellValue("premi");
            row1.createCell(34).setCellValue("jumlah");
            row1.createCell(35).setCellValue("jumlah");
            row1.createCell(36).setCellValue("tsi");
            row1.createCell(37).setCellValue("premi");
            row1.createCell(38).setCellValue("jumlah");
            row1.createCell(39).setCellValue("jumlah");
            row1.createCell(40).setCellValue("tsi");
            row1.createCell(41).setCellValue("premi");
            row1.createCell(42).setCellValue("jumlah");
            row1.createCell(43).setCellValue("jumlah");
            row1.createCell(44).setCellValue("tsi");
            row1.createCell(45).setCellValue("premi");
            row1.createCell(46).setCellValue("jumlah");
            row1.createCell(47).setCellValue("jumlah");
            row1.createCell(48).setCellValue("tsi");
            row1.createCell(49).setCellValue("premi");
            row1.createCell(50).setCellValue("jumlah");
            row1.createCell(51).setCellValue("jumlah");
            row1.createCell(52).setCellValue("tsi");
            row1.createCell(53).setCellValue("premi");
            row1.createCell(54).setCellValue("jumlah");
            row1.createCell(55).setCellValue("jumlah");
            row1.createCell(56).setCellValue("tsi");
            row1.createCell(57).setCellValue("premi");
            row1.createCell(58).setCellValue("jumlah");
            row1.createCell(59).setCellValue("jumlah");
            row1.createCell(60).setCellValue("tsi");
            row1.createCell(61).setCellValue("premi");
            row1.createCell(62).setCellValue("jumlah");
            row1.createCell(63).setCellValue("jumlah");

            HSSFRow row2 = sheet.createRow(2);
            row2.createCell(4).setCellValue("(Rupiah)");
            row2.createCell(5).setCellValue("(Rupiah)");
            row2.createCell(6).setCellValue("polis");
            row2.createCell(7).setCellValue("peserta");
            row2.createCell(8).setCellValue("(Rupiah)");
            row2.createCell(9).setCellValue("(Rupiah)");
            row2.createCell(10).setCellValue("polis");
            row2.createCell(11).setCellValue("peserta");
            row2.createCell(12).setCellValue("(Rupiah)");
            row2.createCell(13).setCellValue("(Rupiah)");
            row2.createCell(14).setCellValue("polis");
            row2.createCell(15).setCellValue("peserta");
            row2.createCell(16).setCellValue("(Rupiah)");
            row2.createCell(17).setCellValue("(Rupiah)");
            row2.createCell(18).setCellValue("polis");
            row2.createCell(19).setCellValue("peserta");
            row2.createCell(20).setCellValue("(Rupiah)");
            row2.createCell(21).setCellValue("(Rupiah)");
            row2.createCell(22).setCellValue("polis");
            row2.createCell(23).setCellValue("peserta");
            row2.createCell(24).setCellValue("(Rupiah)");
            row2.createCell(25).setCellValue("(Rupiah)");
            row2.createCell(26).setCellValue("polis");
            row2.createCell(27).setCellValue("peserta");
            row2.createCell(28).setCellValue("(Rupiah)");
            row2.createCell(29).setCellValue("(Rupiah)");
            row2.createCell(30).setCellValue("polis");
            row2.createCell(31).setCellValue("peserta");
            row2.createCell(32).setCellValue("(Rupiah)");
            row2.createCell(33).setCellValue("(Rupiah)");
            row2.createCell(34).setCellValue("polis");
            row2.createCell(35).setCellValue("peserta");
            row2.createCell(36).setCellValue("(Rupiah)");
            row2.createCell(37).setCellValue("(Rupiah)");
            row2.createCell(38).setCellValue("polis");
            row2.createCell(39).setCellValue("peserta");
            row2.createCell(40).setCellValue("(Rupiah)");
            row2.createCell(41).setCellValue("(Rupiah)");
            row2.createCell(42).setCellValue("polis");
            row2.createCell(43).setCellValue("peserta");
            row2.createCell(44).setCellValue("(Rupiah)");
            row2.createCell(45).setCellValue("(Rupiah)");
            row2.createCell(46).setCellValue("polis");
            row2.createCell(47).setCellValue("peserta");
            row2.createCell(48).setCellValue("(Rupiah)");
            row2.createCell(49).setCellValue("(Rupiah)");
            row2.createCell(50).setCellValue("polis");
            row2.createCell(51).setCellValue("peserta");
            row2.createCell(52).setCellValue("(Rupiah)");
            row2.createCell(53).setCellValue("(Rupiah)");
            row2.createCell(54).setCellValue("polis");
            row2.createCell(55).setCellValue("peserta");
            row2.createCell(56).setCellValue("(Rupiah)");
            row2.createCell(57).setCellValue("(Rupiah)");
            row2.createCell(58).setCellValue("polis");
            row2.createCell(59).setCellValue("peserta");
            row2.createCell(60).setCellValue("(Rupiah)");
            row2.createCell(61).setCellValue("(Rupiah)");
            row2.createCell(62).setCellValue("polis");
            row2.createCell(63).setCellValue("peserta");

            int n = 0;
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured1"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi1"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno1"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta1"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured2"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi2"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno2"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta2"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured3"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi3"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno3"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta3"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured4"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi4"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno4"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta4"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured5"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi5"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno5"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta5"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured6"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi6"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno6"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta6"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured7"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi7"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno7"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta7"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured8"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi8"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno8"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta8"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured9"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi9"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno9"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta9"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured10"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi10"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno10"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta10"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured11"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi11"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno11"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta11"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured12"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi12"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno12"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta12"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured13"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi13"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno13"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta13"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured14"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi14"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno14"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta14"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("insured"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("premi"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("polno"));
            t[n] = BDUtil.add(t[n++], h.getFieldValueByFieldNameBD("peserta"));

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 3);
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("koda"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured1").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi1").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("polno1").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("peserta1").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured2").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi2").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("polno2").doubleValue());
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("peserta2").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("insured3").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("premi3").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("polno3").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("peserta3").doubleValue());
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("insured4").doubleValue());
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("premi4").doubleValue());
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("polno4").doubleValue());
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("peserta4").doubleValue());
            row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("insured5").doubleValue());
            row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("premi5").doubleValue());
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("polno5").doubleValue());
            row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("peserta5").doubleValue());
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("insured6").doubleValue());
            row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("premi6").doubleValue());
            row.createCell(26).setCellValue(h.getFieldValueByFieldNameBD("polno6").doubleValue());
            row.createCell(27).setCellValue(h.getFieldValueByFieldNameBD("peserta6").doubleValue());
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameBD("insured7").doubleValue());
            row.createCell(29).setCellValue(h.getFieldValueByFieldNameBD("premi7").doubleValue());
            row.createCell(30).setCellValue(h.getFieldValueByFieldNameBD("polno7").doubleValue());
            row.createCell(31).setCellValue(h.getFieldValueByFieldNameBD("peserta7").doubleValue());
            row.createCell(32).setCellValue(h.getFieldValueByFieldNameBD("insured8").doubleValue());
            row.createCell(33).setCellValue(h.getFieldValueByFieldNameBD("premi8").doubleValue());
            row.createCell(34).setCellValue(h.getFieldValueByFieldNameBD("polno8").doubleValue());
            row.createCell(35).setCellValue(h.getFieldValueByFieldNameBD("peserta8").doubleValue());
            row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("insured9").doubleValue());
            row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("premi9").doubleValue());
            row.createCell(38).setCellValue(h.getFieldValueByFieldNameBD("polno9").doubleValue());
            row.createCell(39).setCellValue(h.getFieldValueByFieldNameBD("peserta9").doubleValue());
            row.createCell(40).setCellValue(h.getFieldValueByFieldNameBD("insured10").doubleValue());
            row.createCell(41).setCellValue(h.getFieldValueByFieldNameBD("premi10").doubleValue());
            row.createCell(42).setCellValue(h.getFieldValueByFieldNameBD("polno10").doubleValue());
            row.createCell(43).setCellValue(h.getFieldValueByFieldNameBD("peserta10").doubleValue());
            row.createCell(44).setCellValue(h.getFieldValueByFieldNameBD("insured11").doubleValue());
            row.createCell(45).setCellValue(h.getFieldValueByFieldNameBD("premi11").doubleValue());
            row.createCell(46).setCellValue(h.getFieldValueByFieldNameBD("polno11").doubleValue());
            row.createCell(47).setCellValue(h.getFieldValueByFieldNameBD("peserta11").doubleValue());
            row.createCell(48).setCellValue(h.getFieldValueByFieldNameBD("insured12").doubleValue());
            row.createCell(49).setCellValue(h.getFieldValueByFieldNameBD("premi12").doubleValue());
            row.createCell(50).setCellValue(h.getFieldValueByFieldNameBD("polno12").doubleValue());
            row.createCell(51).setCellValue(h.getFieldValueByFieldNameBD("peserta12").doubleValue());
            row.createCell(52).setCellValue(h.getFieldValueByFieldNameBD("insured13").doubleValue());
            row.createCell(53).setCellValue(h.getFieldValueByFieldNameBD("premi13").doubleValue());
            row.createCell(54).setCellValue(h.getFieldValueByFieldNameBD("polno13").doubleValue());
            row.createCell(55).setCellValue(h.getFieldValueByFieldNameBD("peserta13").doubleValue());
            row.createCell(56).setCellValue(h.getFieldValueByFieldNameBD("insured14").doubleValue());
            row.createCell(57).setCellValue(h.getFieldValueByFieldNameBD("premi14").doubleValue());
            row.createCell(58).setCellValue(h.getFieldValueByFieldNameBD("polno14").doubleValue());
            row.createCell(59).setCellValue(h.getFieldValueByFieldNameBD("peserta14").doubleValue());
            row.createCell(60).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            row.createCell(61).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(62).setCellValue(h.getFieldValueByFieldNameBD("polno").doubleValue());
            row.createCell(63).setCellValue(h.getFieldValueByFieldNameBD("peserta").doubleValue());

        }

        HSSFRow rowE = sheet.createRow(list.size() + 3);
        rowE.createCell(1).setCellValue("TOTAL");
        rowE.createCell(4).setCellValue(t[0].doubleValue());
        rowE.createCell(5).setCellValue(t[1].doubleValue());
        rowE.createCell(6).setCellValue(t[2].doubleValue());
        rowE.createCell(7).setCellValue(t[3].doubleValue());
        rowE.createCell(8).setCellValue(t[4].doubleValue());
        rowE.createCell(9).setCellValue(t[5].doubleValue());
        rowE.createCell(10).setCellValue(t[6].doubleValue());
        rowE.createCell(11).setCellValue(t[7].doubleValue());
        rowE.createCell(12).setCellValue(t[8].doubleValue());
        rowE.createCell(13).setCellValue(t[9].doubleValue());
        rowE.createCell(14).setCellValue(t[10].doubleValue());
        rowE.createCell(15).setCellValue(t[11].doubleValue());
        rowE.createCell(16).setCellValue(t[12].doubleValue());
        rowE.createCell(17).setCellValue(t[13].doubleValue());
        rowE.createCell(18).setCellValue(t[14].doubleValue());
        rowE.createCell(19).setCellValue(t[15].doubleValue());
        rowE.createCell(20).setCellValue(t[16].doubleValue());
        rowE.createCell(21).setCellValue(t[17].doubleValue());
        rowE.createCell(22).setCellValue(t[18].doubleValue());
        rowE.createCell(23).setCellValue(t[19].doubleValue());
        rowE.createCell(24).setCellValue(t[20].doubleValue());
        rowE.createCell(25).setCellValue(t[21].doubleValue());
        rowE.createCell(26).setCellValue(t[22].doubleValue());
        rowE.createCell(27).setCellValue(t[23].doubleValue());
        rowE.createCell(28).setCellValue(t[24].doubleValue());
        rowE.createCell(29).setCellValue(t[25].doubleValue());
        rowE.createCell(30).setCellValue(t[26].doubleValue());
        rowE.createCell(31).setCellValue(t[27].doubleValue());
        rowE.createCell(32).setCellValue(t[28].doubleValue());
        rowE.createCell(33).setCellValue(t[29].doubleValue());
        rowE.createCell(34).setCellValue(t[30].doubleValue());
        rowE.createCell(35).setCellValue(t[31].doubleValue());
        rowE.createCell(36).setCellValue(t[32].doubleValue());
        rowE.createCell(37).setCellValue(t[33].doubleValue());
        rowE.createCell(38).setCellValue(t[34].doubleValue());
        rowE.createCell(39).setCellValue(t[35].doubleValue());
        rowE.createCell(40).setCellValue(t[36].doubleValue());
        rowE.createCell(41).setCellValue(t[37].doubleValue());
        rowE.createCell(42).setCellValue(t[38].doubleValue());
        rowE.createCell(43).setCellValue(t[39].doubleValue());
        rowE.createCell(44).setCellValue(t[40].doubleValue());
        rowE.createCell(45).setCellValue(t[41].doubleValue());
        rowE.createCell(46).setCellValue(t[42].doubleValue());
        rowE.createCell(47).setCellValue(t[43].doubleValue());
        rowE.createCell(48).setCellValue(t[44].doubleValue());
        rowE.createCell(49).setCellValue(t[45].doubleValue());
        rowE.createCell(50).setCellValue(t[46].doubleValue());
        rowE.createCell(51).setCellValue(t[47].doubleValue());
        rowE.createCell(52).setCellValue(t[48].doubleValue());
        rowE.createCell(53).setCellValue(t[49].doubleValue());
        rowE.createCell(54).setCellValue(t[50].doubleValue());
        rowE.createCell(55).setCellValue(t[51].doubleValue());
        rowE.createCell(56).setCellValue(t[52].doubleValue());
        rowE.createCell(57).setCellValue(t[53].doubleValue());
        rowE.createCell(58).setCellValue(t[54].doubleValue());
        rowE.createCell(59).setCellValue(t[55].doubleValue());
        rowE.createCell(60).setCellValue(t[56].doubleValue());
        rowE.createCell(61).setCellValue(t[57].doubleValue());
        rowE.createCell(62).setCellValue(t[58].doubleValue());
        rowE.createCell(63).setCellValue(t[59].doubleValue());

        //bikin sheet
        HSSFSheet sheetRekap = wb.createSheet("rekap");
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

//bikin header
            HSSFRow row0 = sheetRekap.createRow(0);
            row0.createCell(1).setCellValue("Koda");
            row0.createCell(2).setCellValue("Provinsi");
            row0.createCell(3).setCellValue("Kabupaten/Kota");
            row0.createCell(4).setCellValue("Total Insured");
            row0.createCell(5).setCellValue("Total Premi");
            row0.createCell(6).setCellValue("Total Polis");
            row0.createCell(7).setCellValue("Total Peserta");

            //bikin isi cell
            HSSFRow row = sheetRekap.createRow(i + 1);
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("koda"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("polno").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("peserta").doubleValue());
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + "_" + System.currentTimeMillis() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList REKAPNETTO15() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.period_start as tglawal,a.period_end as tglakhir,a.create_date as tglentry,d.short_desc as jenis,e.ent_name as bank, "
                + "a.policy_date as tglpolis,a.pol_id as polid,a.ref1 as pp,a.pol_no as polno,"
                + "b.entity_id as kodeko,getname(a.ins_policy_type_grp_id in (7,8),a.ref5,a.cust_name) as nama,"
                + "getpremiend(b.entity_id,coalesce(a.premi_total,0)*a.ccy_rate,coalesce(b.premi_amt,0)*a.ccy_rate*-1) as premi,"
                + "getpremiend(b.entity_id,coalesce(a.nd_pcost*a.ccy_rate,0),0) as biapol,"
                + "getpremiend(b.entity_id,coalesce(a.nd_sfee*a.ccy_rate,0),0) as biamat,"
                + "getpremiend(b.entity_id,(coalesce(a.nd_disc1*a.ccy_rate,0) + coalesce(a.nd_disc2*a.ccy_rate,0)),(coalesce(b.disc_amount*a.ccy_rate,0)*-1)) as diskon,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm1*a.ccy_rate,0),(coalesce(b.comm_amount*a.ccy_rate,0)*-1)) as komisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm2*a.ccy_rate,0),0) as komisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm3*a.ccy_rate,0),0) as komisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_comm4*a.ccy_rate,0),0) as komisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase1*a.ccy_rate,0),0) as feebase1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_feebase2*a.ccy_rate,0),0) as feebase2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_hfee*a.ccy_rate,0),(coalesce(b.hfee_amount*a.ccy_rate,0)*-1)) as hfee,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok1*a.ccy_rate,0),(coalesce(b.broker_amount*a.ccy_rate,0)*-1)) as bfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_brok2*a.ccy_rate,0),0) as bfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm1*a.ccy_rate,0),0) as taxkomisi1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm2*a.ccy_rate,0),0) as taxkomisi2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm3*a.ccy_rate,0),0) as taxkomisi3,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxcomm4*a.ccy_rate,0),0) as taxkomisi4,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok1*a.ccy_rate,0),0) as taxbfee1,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxbrok2*a.ccy_rate,0),0) as taxbfee2,"
                + "getpremiend(b.entity_id,coalesce(a.nd_taxhfee*a.ccy_rate,0),0) as taxhfee,"
                + "a.prod_id as relasi,a.create_who as kde ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ent_master e on e.ent_id = a.entity_id"
                + " left join ent_master c on c.ent_id::text = a.ref5"
                + " inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + " inner join ent_master f on f.ent_id = a.prod_id  "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','RENEWAL')");
        sqa.addClause("(b.entity_id <> 1 or b.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        String sql = " select jenis as ref1,tglawal as period_start,tglakhir as period_end,tglentry as create_date,tglpolis as policy_date,polid as pol_id,pp as ref3,polno as pol_no,kodeko as entity_id,nama as ref2,bank as cust_name,"
                + "premi as premi_total,biapol as nd_pcost,biamat as nd_sfee,diskon as nd_disc1,hfee as nd_hfee,bfee1 as nd_brok1,bfee2 as nd_brok2,taxbfee1 as nd_taxbrok1,taxbfee2 as nd_taxbrok2,taxhfee as nd_taxhfee,"
                + "komisi1 as nd_comm1,komisi2 as nd_comm2,komisi3 as nd_comm3,komisi4 as nd_comm4,feebase1 as nd_feebase1,feebase2 as nd_feebase2,taxkomisi1 as nd_taxcomm1,taxkomisi2 as nd_taxcomm2,taxkomisi3 as nd_taxcomm3,taxkomisi4 as nd_taxcomm4";

        sql = sql + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno,a.kodeko ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList REKAPBRUTO15() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(
                " a.cc_code as koda,b.description as cabang,a.pol_id as polid,a.period_start as tglawal,a.period_end as tglakhir,d.short_desc as jenis,e.ent_name as bank,"
                + "a.create_date as tglentry,a.policy_date as tglpolis,c.user_name as createuser,a.prod_id as relasi,a.pol_no as polno, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref5,e.ent_name) as nama,a.ccy_rate as kurs,a.payment_date as tglbayar, a.payment_note as nobuk, "
                + "getname(a.ins_policy_type_grp_id in (7,8),a.ref1,null) as pp, "
                + "coalesce(a.premi_total*a.ccy_rate,0) as premi,"
                + "coalesce(a.nd_pcost*a.ccy_rate,0) as biapol, "
                + "coalesce(a.nd_sfee*a.ccy_rate,0) as biamat, "
                + "coalesce(a.nd_disc1*a.ccy_rate,0) as diskon,"
                + "coalesce(a.nd_feebase1*a.ccy_rate,0) as feebase,"
                + "coalesce(a.nd_hfee*a.ccy_rate,0) as hfee,"
                + "coalesce(a.nd_brok1*a.ccy_rate,0) as bfee,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as comm21,"
                + "(select coalesce(sum(x.amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as comm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (1)) as taxcomm21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (11,18,25,32) and tax_code in (2)) as taxcomm23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (4)) as taxbfee21,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (12,19,26,33,88,89,90,100,105,106,107,108) and tax_code in (5,6)) as taxbfee23,"
                + "(select coalesce(sum(x.tax_amount*a.ccy_rate),0) from ins_pol_items x where a.pol_id = x.pol_id and x.ins_item_id in (13,20,27,34) and tax_code in (9)) as taxhfee ");

        sqa.addQuery("   from       ins_policies a "
                + "	inner join ent_master e on e.ent_id = a.entity_id "
                + "	left join gl_cost_center b on b.cc_code = a.cc_code "
                + "left join s_users c on c.user_id = a.create_who "
                + "       inner join ent_master f on f.ent_id = a.prod_id  "
                + " inner join ins_policy_types d on d.pol_type_id = a.pol_type_id ");

        sqa.addClause("a.status in ('POLICY','RENEWAL')");
        sqa.addClause("a.effective_flag='Y'");

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= ?");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= ?");
            sqa.addPar(expirePeriodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("e.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        String sql = "select jenis as ref1,koda as cc_code,cabang as ref4,tglawal as period_start,tglakhir as period_end,tglentry as create_date,bank as cust_name,"
                + "polid as pol_id,tglpolis as policy_date,createuser as create_who,polno as pol_no,nama as ref2,kurs as ccy_rate,tglbayar as payment_date,nobuk as receipt_no,"
                + "pp as ref3,premi as premi_total,biapol as nd_pcost,biamat as nd_sfee,diskon as nd_disc1,hfee as nd_hfee,bfee as nd_brok1,taxbfee21 as nd_taxbrok1,taxbfee23 as nd_taxbrok2,taxhfee as nd_taxhfee,feebase as nd_feebase1,comm21 as nd_comm1,comm23 as nd_comm2,taxcomm21 as nd_taxcomm1,taxcomm23 as nd_taxcomm2";

        sql = sql + " from ( " + sqa.getSQL() + " ) a order by a.tglpolis,a.polno ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_REKAP_OUTGO() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" b.category1 as bus_source,a.pol_type_id,"
                + "sum(coalesce(a.premi_total*a.ccy_rate,0)) as premi,"
                + "sum(coalesce(a.nd_disc1*a.ccy_rate,0)) as nd_disc1,"
                + "sum(coalesce(a.nd_comm1*a.ccy_rate,0)) as nd_comm1,"
                + "sum(coalesce(a.nd_brok1*a.ccy_rate,0)) as nd_brok1,"
                + "sum(coalesce(a.nd_hfee*a.ccy_rate,0)) as nd_hfee,"
                + "sum(coalesce(a.nd_feebase1*a.ccy_rate,0)) as nd_feebase1,"
                + "sum(coalesce(a.nd_ppn*a.ccy_rate,0)) as nd_ppn ");

        sqa.addQuery(" from ins_policies a "
                + "left join ent_master b on b.ent_id = a.entity_id ");

        sqa.addClause(" a.active_flag='Y' and a.effective_flag='Y' ");
        sqa.addClause(" a.status in('POLICY','ENDORSE','RENEWAL') ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        String choicefilter = null;
        if (stGroupOutgoID != null) {
            if (stGroupOutgoID.equalsIgnoreCase("1")) {
                choicefilter = "nd_comm1";
            } else if (stGroupOutgoID.equalsIgnoreCase("2")) {
                choicefilter = "nd_brok1";
            } else if (stGroupOutgoID.equalsIgnoreCase("3")) {
                choicefilter = "nd_hfee";
            } else if (stGroupOutgoID.equalsIgnoreCase("4")) {
                choicefilter = "nd_feebase1";
            } else if (stGroupOutgoID.equalsIgnoreCase("5")) {
                choicefilter = "nd_disc1";
            } else if (stGroupOutgoID.equalsIgnoreCase("6")) {
                choicefilter = "nd_ppn";
            }
        } else {
            choicefilter = "(nd_disc1+nd_comm1+nd_brok1+nd_hfee+nd_feebase1+nd_ppn)";
        }

        final String sql = "select b.pol_type_id,b.description,"
                + "sum(getkoas(bus_source='1'," + choicefilter + ")) as nd_comm1,"
                + "sum(getkoas(bus_source='2'," + choicefilter + ")) as nd_comm2,"
                + "sum(getkoas(bus_source='3'," + choicefilter + ")) as nd_comm3,"
                + "sum(getkoas(bus_source='4'," + choicefilter + ")) as nd_comm4 "
                + "from ins_policy_types b left join ("
                + sqa.getSQL() + " group by b.category1,a.pol_type_id ) "
                + "a on a.pol_type_id = b.pol_type_id "
                + "group by b.pol_type_id,b.description order by b.pol_type_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_OUTGO() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("Jenid");
            row0.createCell(1).setCellValue("Jenas");
            row0.createCell(2).setCellValue("UMUM");
            row0.createCell(3).setCellValue("PEMDA");
            row0.createCell(4).setCellValue("PERUSDA");
            row0.createCell(5).setCellValue("BPD");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(1).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    /**
     * @return the stGroupOutgoID
     */
    public String getStGroupOutgoID() {
        return stGroupOutgoID;
    }

    /**
     * @param stGroupOutgoID the stGroupOutgoID to set
     */
    public void setStGroupOutgoID(String stGroupOutgoID) {
        this.stGroupOutgoID = stGroupOutgoID;
    }

    /**
     * @return the stGroupOutgoName
     */
    public String getStGroupOutgoName() {
        return stGroupOutgoName;
    }

    /**
     * @param stGroupOutgoName the stGroupOutgoName to set
     */
    public void setStGroupOutgoName(String stGroupOutgoName) {
        this.stGroupOutgoName = stGroupOutgoName;
    }

    public void copyWithFTP(String filePath, String uploadPath) {
        String host = "192.168.200.19";
        String user = "dinal";
        String pass = "askrida00";
        int port = 21;

        FTPClient ftpClient = new FTPClient();
        try {

            ftpClient.connect(host, port);
            ftpClient.login(user, pass);
            ftpClient.enterLocalPassiveMode();

            ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

            // APPROACH #1: uploads first file using an InputStream
            File firstLocalFile = new File(filePath);

            String firstRemoteFile = uploadPath;
            InputStream inputStream = new FileInputStream(firstLocalFile);

//            String fileToDelete = "/repository/video/cool.mp4";

            boolean deleted = ftpClient.deleteFile(uploadPath);
            if (deleted) {
                System.out.println("The file was deleted successfully.");
            } else {
                System.out.println("Could not delete the  file, it may not exist.");
            }

            System.out.println("Start uploading first file");
            ftpClient.storeFile(firstRemoteFile, inputStream);
            inputStream.close();
//            boolean done = ftpClient.storeFile(firstRemoteFile, inputStream);
//            if (done) {
            System.out.println("The first file is uploaded successfully.");
//            }

        } catch (IOException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            try {
                if (ftpClient.isConnected()) {
                    ftpClient.logout();
                    ftpClient.disconnect();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    public boolean isClosed() throws Exception {
        String month = null;
        String years = null;

        if (policyDateFrom != null) {
            month = DateUtil.getMonth2Digit(policyDateFrom);
            years = DateUtil.getYear(policyDateFrom);
        }

        if (appDateFrom != null) {
            month = DateUtil.getMonth2Digit(appDateFrom);
            years = DateUtil.getYear(appDateFrom);
        }

        SQLUtil S = new SQLUtil();

        boolean isClosed = false;

        try {
            String cek = "select gl_post_id from ins_closing where months = ? and years = ? and posted_flag = 'Y' ";

            PreparedStatement PS = S.setQuery(cek);
            PS.setString(1, month);
            PS.setString(2, years);

            ResultSet RS = PS.executeQuery();

            if (RS.next()) {
                isClosed = true;
            }

        } finally {
            S.release();
        }

        return isClosed;
    }

    public DTOList EXCEL_CREATE_RESTITUSI() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.pol_id,a.pol_no,a.cust_name,b.ins_pol_obj_id,b.ref1 as nama,"
                + "getname(a.pol_type_id = 21,b.ref6,b.ref11) as jw,b.refd1 as tgllhr,"
                + "b.refd2 as tglawal,b.refd3 as tglakhir,b.refd5 as tglres,"
                + "(b.insured_amount*-1) as insured_amount,"
                + "getname(a.pol_type_id = 21,b.ref15,b.ref9) as sisa_jw,"
                + "getpremi(a.pol_type_id = 21,b.refn6,b.premi_total) as premires,"
                + "c.user_name,a.receipt_no,a.payment_date,d.ent_name as sumbis ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join s_users c on c.user_id = a.create_who "
                + "inner join ent_master d on d.ent_id = a.entity_id ");

        sqa.addClause(" a.status = 'ENDORSE'");
        sqa.addClause(" a.active_flag='Y' ");
        sqa.addClause(" a.effective_flag='Y' ");
        sqa.addClause(" a.pol_type_id in (21,59,87,88) ");
        sqa.addClause(" b.refd5 is not null ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = ?");
//            sqa.addPar(stBranch);
//        }

        if (stCreateID != null) {
            sqa.addClause("a.create_who = ?");
            sqa.addPar(stCreateID);
        }

        if (stProfileID != null) {
            if (stProfileID.equalsIgnoreCase("1")) {
                sqa.addClause("d.category1 in ('2','3','4')");
            } else if (stProfileID.equalsIgnoreCase("2")) {
                sqa.addClause("d.category1 in ('1')");
            }
        }

        final String sql = sqa.getSQL() + " order by a.pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_CREATE_RESTITUSI() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("polis");
            row0.createCell(1).setCellValue("tertanggung");
            row0.createCell(2).setCellValue("nama");
            row0.createCell(3).setCellValue("jwaktu");
            row0.createCell(4).setCellValue("tgllahir");
            row0.createCell(5).setCellValue("tglawal");
            row0.createCell(6).setCellValue("tglakhir");
            row0.createCell(7).setCellValue("tglrestitusi");
            row0.createCell(8).setCellValue("insured");
            row0.createCell(9).setCellValue("sisa_bulan");
            row0.createCell(10).setCellValue("restitusi");
            row0.createCell(11).setCellValue("nobuk");
            row0.createCell(12).setCellValue("tglbayar");
            row0.createCell(13).setCellValue("create");
            row0.createCell(14).setCellValue("sumbis");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("nama"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("jw"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("tgllhr"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tglawal"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("tglakhir"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("tglres"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("sisa_jw"));
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("premires").doubleValue());
            if (h.getFieldValueByFieldNameST("receipt_no") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("receipt_no"));
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameDT("payment_date"));
            }
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("user_name"));
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameST("sumbis"));
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();

    }

    public DTOList MANDIRIH2H() {
        DTOList dto = new DTOList();

        String policydateFrom = "";
        String policydateTo = "";
        String cabangall = "";
        String cabang = "";

        if (policyDateFrom != null) {
            policydateFrom = DateUtil.getDateStr(policyDateFrom, "yyyy-MM-dd");
        }
//        System.out.print("@@@@@@@@@@@@@ " + policydateFrom);
//        System.out.print("############# " + policyDateFrom);

        if (policyDateTo != null) {
            policydateTo = DateUtil.getDateStr(policyDateTo, "yyyy-MM-dd");
        }

        if (stBranch != null) {
            cabang = stBranch;
        }
//        else {
//            cabang = cabangall;
//        }
//        System.out.print("$$$$$$$$$$$$$ " + cabang);

        try {

            URL url = new URL("http://192.168.250.56/TimeScheduler/service/RequestRekapH2HMandiri");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setDoOutput(true);
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Content-Type", "application/json");
            String input = "{\"tglPolisAwal\":\"" + policydateFrom + "\",\"tglPolisAkhir\":\"" + policydateTo + "\",\"kode_cabang\":\"" + cabang + "\" }";
            System.out.println("%%%%%%%%%%%%%%%%% " + input);
            OutputStream os = conn.getOutputStream();
            os.write(input.getBytes());
            os.flush();

            if (conn.getResponseCode() != 200) {
                throw new RuntimeException("Failed : HTTP Error code : "
                        + conn.getResponseCode());
            }

            JSONParser parser = new JSONParser();
            BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));
            Object obj = parser.parse(br);
            JSONObject jsonObject = (JSONObject) obj;
            dto.setAttribute("data", (JSONArray) jsonObject.get("data"));
//            for (Object object : msg) {
//                JSONObject objx = (JSONObject) object;
//                String str = (String) objx.get("no_aplikasi") + ";'" + objx.get("no_polis") + ";" + objx.get("nama_debitur") + ";" + objx.get("plafond_kredit") + ";" + objx.get("premi") + ";" + new SimpleDateFormat("dd-MM-yyyy").format(objx.get("tgl_awal_kredit")) + ";" + new SimpleDateFormat("dd-MM-yyyy").format(objx.get("tgl_akhir_kredit")) + ";" + objx.get("kd_uker") + ";" + objx.get("losname");
//                System.out.println(str);
//            }

            conn.disconnect();

        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return dto;

    }

    public void EXPORT_MANDIRIH2H() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("H2H");

//        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        DTOList dto = MANDIRIH2H();

        JSONArray msg = (JSONArray) dto.getAttribute("data");
        for (int i = 0; i < msg.size(); i++) {
            JSONObject objx = (JSONObject) msg.get(i);

//        for (int i = 0; i < list.size(); i++) {
//            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("No. Aplikasi");
            row0.createCell(1).setCellValue("No. Polis");
            row0.createCell(2).setCellValue("Nama Debitur");
            row0.createCell(3).setCellValue("Plafond Kredit");
            row0.createCell(4).setCellValue("Premi");
            row0.createCell(5).setCellValue("Tanggal Awal");
            row0.createCell(6).setCellValue("Tanggal Akhir");
            row0.createCell(7).setCellValue("Kd Uker");
            row0.createCell(8).setCellValue("Lossname");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(objx.get("no_aplikasi").toString());
            row.createCell(1).setCellValue(objx.get("no_polis").toString());
            row.createCell(2).setCellValue(objx.get("nama_debitur").toString());
            row.createCell(3).setCellValue(new Double(objx.get("plafond_kredit").toString()));
            row.createCell(4).setCellValue(new Double(objx.get("premi").toString()));
            row.createCell(5).setCellValue(objx.get("tgl_awal_kredit").toString());
            row.createCell(6).setCellValue(objx.get("tgl_akhir_kredit").toString());
            row.createCell(7).setCellValue(objx.get("kd_uker").toString());
            row.createCell(8).setCellValue(objx.get("losname").toString());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList KREASI5() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	a.pol_id,a.pol_no,b.ref1,b.ref2,b.refd1,b.refd2,b.refd3,b.ref6 as ref3,"
                + "b.insured_amount,b.premi_total,b.refn2 as premi_base,b.order_no as ref4,b.rekap_kreasi,b.ref8d as ref5 ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id ");

        sqa.addClause("a.pol_type_id = '21'");

//        if (policyDateFrom != null) {
//            sqa.addClause("date_trunc('day',a.mutation_date) >= ?");
//            sqa.addPar(policyDateFrom);
//        }
//
//        if (policyDateTo != null) {
//            sqa.addClause("date_trunc('day',a.mutation_date) <= ?");
//            sqa.addPar(policyDateTo);
//        }

        if (stKreasiName != null) {
            sqa.addClause("b.rekap_kreasi = ?");
            sqa.addPar(stKreasiName);
        }

        if (stStatus != null) {
            sqa.addClause("a.status = ?");
            sqa.addPar(stStatus);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no = ?");
            sqa.addPar(stPolicyNo);
        }

//        if (stWilayahID != null) {
//            if (stWilayahID.equalsIgnoreCase("1")) {
//                sqa.addClause("a.cc_code in ('10','13','17','20','21','22','40','43','70')");
//            } else {
//                sqa.addClause("a.cc_code not in ('10','13','17','20','21','22','40','43','70')");
//            }
//        }

        final String sql = sqa.getSQL() + " order by a.cc_code,a.pol_no,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXCEL_RISK_CONTROL_NEW() throws Exception {
        final boolean NON_EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("NON_EFFECTIVE"));
        final boolean EFFECTIVE = "Y".equalsIgnoreCase((String) refPropMap.get("EFFECTIVE"));

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.period_start,a.period_end,a.policy_date,a.status,a.pol_id,"
                + "quote_ident(pol_no) as pol_no,a.ref1 as nomor_pp,a.entity_id::text,a.cust_name,b.ins_pol_obj_id,"
                + "b.ref1,b.ref2,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9,b.ref10,"
                + "b.refd1,b.refd2,b.refd3,b.refd4,b.refd5,b.refd6,a.cover_type_code,a.share_pct,"
                + "a.ccy,a.insured_amount,a.premi_total,b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,"
                + "b.premi_total_bcoins as premi_total_e, "
                + "( select sum(getkoas(z.ins_tsi_cat_id in (6,105),z.insured_amount))  "
                + "from ins_pol_tsi z  "
                + "where z.ins_pol_obj_id=b.ins_pol_obj_id) as building, "
                + "( select sum(getkoas(z.ins_tsi_cat_id in (39,40,106),z.insured_amount))  "
                + "from ins_pol_tsi z  "
                + "where z.ins_pol_obj_id=b.ins_pol_obj_id) as machine, "
                + "( select sum(getkoas(z.ins_tsi_cat_id in (56,57,58,90,91,92,107),z.insured_amount))  "
                + "from ins_pol_tsi z  "
                + "where z.ins_pol_obj_id=b.ins_pol_obj_id) as stock, "
                + "( select sum(getkoas(z.ins_tsi_cat_id in (2,12,21,23,25,27,29,30,33,34,35,44,79,95,97,98,103,108,109),z.insured_amount))  "
                + "from ins_pol_tsi z  "
                + "where z.ins_pol_obj_id=b.ins_pol_obj_id) as other, "
                + " round(sum(checkreas(j.treaty_type='OR',i.tsi_amount)),2) as tsi_or, "
                + " round(sum(checkreas(j.treaty_type='OR',i.premi_amount)),2) as premi_or, "
                + " round(sum(checkreas(j.treaty_type='OR',i.ricomm_amt)),2) as komisi_or, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.tsi_amount)),2) as tsi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.premi_amount)),2) as premi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='BPDAN',i.ricomm_amt)),2) as komisi_bppdan, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.tsi_amount)),2) as tsi_spl, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.premi_amount)),2) as premi_spl, "
                + " round(sum(checkreas(j.treaty_type='SPL',i.ricomm_amt)),2) as komisi_spl, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.tsi_amount)),2) as tsi_fac, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.premi_amount)),2) as premi_fac, "
                + " round(sum(checkreas(j.treaty_type='FAC',i.ricomm_amt)),2) as komisi_fac, "
                + " round(sum(checkreas(j.treaty_type='QS',i.tsi_amount)),2) as tsi_qs, "
                + " round(sum(checkreas(j.treaty_type='QS',i.premi_amount)),2) as premi_qs, "
                + " round(sum(checkreas(j.treaty_type='QS',i.ricomm_amt)),2) as komisi_qs, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.tsi_amount)),2) as tsi_park, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.premi_amount)),2) as premi_park, "
                + " round(sum(checkreas(j.treaty_type='PARK',i.ricomm_amt)),2) as komisi_park, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.tsi_amount)),2) as tsi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.premi_amount)),2) as premi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO',i.ricomm_amt)),2) as komisi_faco, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.tsi_amount)),2) as tsi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.premi_amount)),2) as premi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO1',i.ricomm_amt)),2) as komisi_faco1, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.tsi_amount)),2) as tsi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.premi_amount)),2) as premi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO2',i.ricomm_amt)),2) as komisi_faco2, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.tsi_amount)),2) as tsi_faco3, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.premi_amount)),2) as premi_faco3, "
                + " round(sum(checkreas(j.treaty_type='FACO3',i.ricomm_amt)),2) as komisi_faco3, "
                + " round(sum(checkreas(j.treaty_type='JP',i.tsi_amount)),2) as tsi_jp, "
                + " round(sum(checkreas(j.treaty_type='JP',i.premi_amount)),2) as premi_jp, "
                + " round(sum(checkreas(j.treaty_type='JP',i.ricomm_amt)),2) as komisi_jp, "
                + " b.order_no,b.void_flag,a.endorse_notes ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
                + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = h.ins_treaty_detail_id "
                + "inner join ent_master k on k.ent_id = a.entity_id "
                + "left join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause(" a.status IN ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause(" a.active_flag = 'Y'");
        sqa.addClause(" b.premi_total <> 0 ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= '" + periodFrom + "'");
            //sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= '" + periodTo + "'");
            //sqa.addPar(periodTo);
        }

        if (periodEndFrom != null) {
            sqa.addClause("date_trunc('day',a.period_end) >= '" + periodEndFrom + "'");
            //sqa.addPar(periodEndFrom);
        }

        if (periodEndTo != null) {
            sqa.addClause("date_trunc('day',a.period_end) <= '" + periodEndTo + "'");
            //sqa.addPar(periodEndTo);
        }

//        if (stBranch != null) {
//            sqa.addClause("a.cc_code = '" + stBranch + "'");
//            //sqa.addPar(stBranch);
//        }
//
//        if (stRegion != null) {
//            sqa.addClause("a.region_id = '" + stRegion + "'");
//            //sqa.addPar(stRegion);
//        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
            //sqa.addPar('%'+stPolicyNo+'%');
        }

        if (stPostCode != null) {
            sqa.addClause("b.ref9 = '" + stPostCode + "'");
            //sqa.addPar(stPostCode);
        }

        if (stPostCodeDesc2 != null) {
            sqa.addClause("b.ref9d = '" + stPostCodeDesc2 + "'");
            //sqa.addPar(stPostCodeDesc2);
        }

        if (stZoneCode != null) {
            sqa.addClause("d.zone_id = '" + stZoneCode + "'");
            //sqa.addPar(stZoneCode);
        }

        if (stZoneEquakeName != null) {
            sqa.addClause("b.ref2d = '" + stZoneEquakeName + "'");
            //sqa.addPar(stZoneEquakeName);
        }

        if (stFltTreatyType != null) {
            sqa.addClause("j.treaty_type = '" + stFltTreatyType + "'");
            //sqa.addPar(stFltTreatyType);
        }

        if (stYearTreaty != null) {
            sqa.addClause("substr(i.valid_ri_date::text,1,4) = '" + stYearTreaty + "'");
            //sqa.addPar(stYearTreaty);
        }

        if (Tools.isYes(stIndex)) {
            sqa.addClause("a.effective_flag = 'Y'");
        }

        if (Tools.isNo(stIndex)) {
            sqa.addClause("coalesce(a.effective_flag,'') <> 'Y'");
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("k.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        String sql = "select * from ( " + sqa.getSQL() + " group by  a.period_start,a.period_end,a.policy_date,a.status,a.pol_id,a.pol_no,a.ref1,a.entity_id,a.cust_name,a.ccy_rate,"
                + "b.ins_pol_obj_id,b.ref1,b.ref2,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9,b.ref10,b.refd1,b.refd2,b.refd3,b.refd4,b.refd5,b.refd6,a.cover_type_code,a.share_pct,"
                + "a.ccy,a.insured_amount,a.premi_total,b.insured_amount,b.premi_total,b.premi_total_bcoins "
                + //" ,i.valid_ri_date having count(a.pol_no)>1 " +
                ") x ";

        if (getStTime() != null) {
            sql = sql + " where years > '1' ";
        }

        sql = sql + "order by pol_no,ins_pol_obj_id";


        SQLUtil S = new SQLUtil();

        String nama_file = "risk_acc_control_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

    }

    public void EXCEL_LIABILITY() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();
        String sql = null;

        if (Tools.compare(DateUtil.getYear(policyDateFrom), "2019") < 0) {
            sqa.addSelect(" a.policy_date,a.status,a.pol_id,quote_ident(a.pol_no) as pol_no,b.ins_pol_obj_id,"
                    + "a.cust_name,a.ccy,a.ccy_rate,b.ref1,"
                    + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                    + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                    + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end, "
                    + "b.insured_amount as insured_amount_obj,b.premi_total as premi_total_obj,"
                    + "round(a.share_pct,2) as rate_method, "
                    + "round(sum(checkreas(j.treaty_type='OR',i.tsi_amount)),2) as tsi_or,  "
                    + "round(sum(checkreas(j.treaty_type='OR',i.premi_amount)),2) as premi_or,  "
                    + "round(sum(checkreas(j.treaty_type='OR',i.ricomm_amt)),2) as komisi_or,  "
                    + "round(sum(checkreas(j.treaty_type='BPDAN',i.tsi_amount)),2) as tsi_bppdan,  "
                    + "round(sum(checkreas(j.treaty_type='BPDAN',i.premi_amount)),2) as premi_bppdan,"
                    + "round(sum(checkreas(j.treaty_type='BPDAN',i.ricomm_amt)),2) as komisi_bppdan,  "
                    + "round(sum(checkreas(j.treaty_type='SPL',i.tsi_amount)),2) as tsi_spl,  "
                    + "round(sum(checkreas(j.treaty_type='SPL',i.premi_amount)),2) as premi_spl,  "
                    + "round(sum(checkreas(j.treaty_type='SPL',i.ricomm_amt)),2) as komisi_spl,  "
                    + "round(sum(checkreas(j.treaty_type='FAC',i.tsi_amount)),2) as tsi_fac,  "
                    + "round(sum(checkreas(j.treaty_type='FAC',i.premi_amount)),2) as premi_fac,  "
                    + "round(sum(checkreas(j.treaty_type='FAC',i.ricomm_amt)),2) as komisi_fac,  "
                    + "round(sum(checkreas(j.treaty_type='QS',i.tsi_amount)),2) as tsi_qs,  "
                    + "round(sum(checkreas(j.treaty_type='QS',i.premi_amount)),2) as premi_qs,"
                    + "round(sum(checkreas(j.treaty_type='QS',i.ricomm_amt)),2) as komisi_qs,  "
                    + "round(sum(checkreas(j.treaty_type='PARK',i.tsi_amount)),2) as tsi_park,  "
                    + "round(sum(checkreas(j.treaty_type='PARK',i.premi_amount)),2) as premi_park,  "
                    + "round(sum(checkreas(j.treaty_type='PARK',i.ricomm_amt)),2) as komisi_park,  "
                    + "round(sum(checkreas(j.treaty_type='FACO',i.tsi_amount)),2) as tsi_faco,  "
                    + "round(sum(checkreas(j.treaty_type='FACO',i.premi_amount)),2) as premi_faco,  "
                    + "round(sum(checkreas(j.treaty_type='FACO',i.ricomm_amt)),2) as komisi_faco,  "
                    + "round(sum(checkreas(j.treaty_type='FACO1',i.tsi_amount)),2) as tsi_faco1,  "
                    + "round(sum(checkreas(j.treaty_type='FACO1',i.premi_amount)),2) as premi_faco1,  "
                    + "round(sum(checkreas(j.treaty_type='FACO1',i.ricomm_amt)),2) as komisi_faco1,  "
                    + "round(sum(checkreas(j.treaty_type='FACO2',i.tsi_amount)),2) as tsi_faco2,  "
                    + "round(sum(checkreas(j.treaty_type='FACO2',i.premi_amount)),2) as premi_faco2,  "
                    + "round(sum(checkreas(j.treaty_type='FACO2',i.ricomm_amt)),2) as komisi_faco2,  "
                    + "round(sum(checkreas(j.treaty_type='FACO3',i.tsi_amount)),2) as tsi_faco3,  "
                    + "round(sum(checkreas(j.treaty_type='FACO3',i.premi_amount)),2) as premi_faco3,  "
                    + "round(sum(checkreas(j.treaty_type='FACO3',i.ricomm_amt)),2) as komisi_faco3,  "
                    + "round(sum(checkreas(j.treaty_type='JP',i.tsi_amount)),2) as tsi_jp,  "
                    + "round(sum(checkreas(j.treaty_type='JP',i.premi_amount)),2) as premi_jp,  "
                    + "round(sum(checkreas(j.treaty_type='JP',i.ricomm_amt)),2) as komisi_jp, "
                    + "a.cover_type_code,a.endorse_notes, "
                    + "coalesce((SELECT SUM(rate)  FROM INS_POL_ITEMS y  WHERE y.pol_id = a.pol_id "
                    + "and y.ins_item_id in (select ins_item_id from ins_items where (item_type = 'COMIS' or ins_item_cat = 'PPN'))),0) as total_komisi_pct, "
                    + "coalesce((SELECT SUM(amount)  FROM INS_POL_ITEMS y  WHERE y.pol_id = a.pol_id "
                    + "and y.ins_item_id in (select ins_item_id from ins_items where (item_type = 'COMIS' or ins_item_cat = 'PPN'))),0) as total_komisi, "
                    + "(select p.pol_no from ins_policy p "
                    + "inner join ins_pol_obj q on p.pol_id = q.pol_id "
                    + "where p.status = 'ENDORSE' and p.endorse_mode in ('TOTAL','RESTITUTION') "
                    + "and p.active_flag = 'Y' and p.effective_flag = 'Y' "
                    + "and date_trunc('day',p.approved_date) >= '" + policyDateFrom + "' "
                    + "and substr(p.pol_no,0,17) = substr(a.pol_no,0,17) and btrim(upper(q.ref1)) = btrim(upper(b.ref1)) "
                    + "and CASE WHEN p.pol_type_id in (21,59) THEN q.refd1 = b.refd1 ELSE btrim(upper(q.ref1)) = btrim(upper(b.ref1)) END limit 1) as restitusi,"
                    + "(select p.dla_no from ins_policy p "
                    + "inner join ins_pol_obj q on p.pol_id = q.pol_id "
                    + "where p.claim_status = 'DLA' and p.effective_flag = 'Y' "
                    + "and date_trunc('day',p.approved_date) >= '" + policyDateFrom + "' "
                    + "and substr(p.pol_no,0,17) = substr(a.pol_no,0,17) and btrim(upper(q.ref1)) = btrim(upper(b.ref1)) "
                    + "and CASE WHEN p.pol_type_id in (21,59) THEN q.refd1 = b.refd1 ELSE btrim(upper(q.ref1)) = btrim(upper(b.ref1)) END limit 1) as no_lkp ");

            sqa.addQuery(" from ins_policy a "
                    + "inner join ins_pol_obj b on b.pol_id = a.pol_id and b.ins_pol_obj_id > 9999 and a.policy_date >= '" + policyDateFrom + "' "
                    + "inner join ent_master c on c.ent_id = a.entity_id "
                    + "inner join ins_pol_treaty g on g.ins_pol_obj_id = b.ins_pol_obj_id "
                    + "inner join ins_pol_treaty_detail h on g.ins_pol_treaty_id = h.ins_pol_treaty_id "
                    + "inner join ins_pol_ri i on i.ins_pol_tre_det_id = h.ins_pol_tre_det_id "
                    + "inner join ins_treaty_detail j on j.ins_treaty_detail_id = i.ins_treaty_detail_id ");

//        sqa.addClause(" ((a.status IN ('POLICY','RENEWAL')) or (a.status = 'ENDORSE' and a.endorse_mode not in ('TOTAL','RESTITUTION')))");
            sqa.addClause(" a.status IN ('POLICY','RENEWAL','ENDORSE')");
            sqa.addClause(" a.active_flag = 'Y'");
            sqa.addClause(" (b.insured_amount <> 0 or b.premi_total <> 0)");

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
                //sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
                //sqa.addPar(policyDateTo);
            }

            if (stBranch != null) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = '" + stRegion + "'");
                //sqa.addPar(stRegion);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
                //sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
                //sqa.addPar(stPolicyTypeID);
            }

            if (stPolicyNo != null) {
                sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
                //sqa.addPar('%'+stPolicyNo+'%');
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.effective_flag = 'Y'");
            }

            if (Tools.isNo(stIndex)) {
                sqa.addClause("coalesce(a.effective_flag,'') <> 'Y'");
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = '" + stEntityID + "'");
                //sqa.addPar(stEntityID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = '" + stMarketerID + "'");
                //sqa.addPar(stMarketerID);
            }

            if (stCustCategory1 != null) {
                sqa.addClause("c.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            sql = "select * from ( " + sqa.getSQL() + " group by a.endorse_notes,a.ref1,a.pol_id,a.status,a.pol_no,a.entity_id,a.cust_name,"
                    + "a.period_start,a.period_end,a.policy_date,b.ref1,b.ref2,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref8,b.ref9d,b.ref10,a.create_who,"
                    + "a.ccy,a.ccy_rate,a.insured_amount,a.premi_total,b.insured_amount,b.premi_total,a.cover_type_code,a.share_pct,b.ins_pol_obj_id,"
                    + "b.ref1d,b.ref2d,b.ref3d,b.ref4d,b.ref5d,b.ref6d,b.risk_class,b.order_no,b.void_flag ) x "
                    + "where x.premi_total_obj <> 0 and x.restitusi is null and x.no_lkp is null "
                    + "and date_trunc('day',x.period_end) > '" + periodTo + "' ";

            sql = sql + "order by policy_date,pol_no,ins_pol_obj_id";
        }

        if (Tools.compare(DateUtil.getYear(policyDateFrom), "2019") >= 0) {
            sqa.addSelect(" a.policy_date,a.status,a.pol_id,pol_no,a.ins_pol_obj_id,a.cust_name,a.ccy,a.ccy_rate,"
                    + "a.ref1,a.tgl_lahir,a.period_start,a.period_end,a.insured_amount_obj,a.premi_total_obj,"
                    + "round(sum(checkreas(a.treaty_type='OR',a.tsi_amount)),2) as tsi_or, "
                    + "round(sum(checkreas(a.treaty_type='OR',a.premi_amount)),2) as premi_or, "
                    + "round(sum(checkreas(a.treaty_type='OR',a.ricomm_amt)),2) as komisi_or, "
                    + "round(sum(checkreas(a.treaty_type='BPDAN',a.tsi_amount)),2) as tsi_bppdan, "
                    + "round(sum(checkreas(a.treaty_type='BPDAN',a.premi_amount)),2) as premi_bppdan, "
                    + "round(sum(checkreas(a.treaty_type='BPDAN',a.ricomm_amt)),2) as komisi_bppdan, "
                    + "round(sum(checkreas(a.treaty_type='SPL',a.tsi_amount)),2) as tsi_spl, "
                    + "round(sum(checkreas(a.treaty_type='SPL',a.premi_amount)),2) as premi_spl, "
                    + "round(sum(checkreas(a.treaty_type='SPL',a.ricomm_amt)),2) as komisi_spl, "
                    + "round(sum(checkreas(a.treaty_type='FAC',a.tsi_amount)),2) as tsi_fac, "
                    + "round(sum(checkreas(a.treaty_type='FAC',a.premi_amount)),2) as premi_fac, "
                    + "round(sum(checkreas(a.treaty_type='FAC',a.ricomm_amt)),2) as komisi_fac, "
                    + "round(sum(checkreas(a.treaty_type='QS',a.tsi_amount)),2) as tsi_qs, "
                    + "round(sum(checkreas(a.treaty_type='QS',a.premi_amount)),2) as premi_qs, "
                    + "round(sum(checkreas(a.treaty_type='QS',a.ricomm_amt)),2) as komisi_qs, "
                    + "round(sum(checkreas(a.treaty_type='PARK',a.tsi_amount)),2) as tsi_park, "
                    + "round(sum(checkreas(a.treaty_type='PARK',a.premi_amount)),2) as premi_park, "
                    + "round(sum(checkreas(a.treaty_type='PARK',a.ricomm_amt)),2) as komisi_park, "
                    + "round(sum(checkreas(a.treaty_type='FACO',a.tsi_amount)),2) as tsi_faco, "
                    + "round(sum(checkreas(a.treaty_type='FACO',a.premi_amount)),2) as premi_faco, "
                    + "round(sum(checkreas(a.treaty_type='FACO',a.ricomm_amt)),2) as komisi_faco, "
                    + "round(sum(checkreas(a.treaty_type='FACO1',a.tsi_amount)),2) as tsi_faco1, "
                    + "round(sum(checkreas(a.treaty_type='FACO1',a.premi_amount)),2) as premi_faco1, "
                    + "round(sum(checkreas(a.treaty_type='FACO1',a.ricomm_amt)),2) as komisi_faco1, "
                    + "round(sum(checkreas(a.treaty_type='FACO2',a.tsi_amount)),2) as tsi_faco2, "
                    + "round(sum(checkreas(a.treaty_type='FACO2',a.premi_amount)),2) as premi_faco2, "
                    + "round(sum(checkreas(a.treaty_type='FACO2',a.ricomm_amt)),2) as komisi_faco2, "
                    + "round(sum(checkreas(a.treaty_type='FACO3',a.tsi_amount)),2) as tsi_faco3, "
                    + "round(sum(checkreas(a.treaty_type='FACO3',a.premi_amount)),2) as premi_faco3, "
                    + "round(sum(checkreas(a.treaty_type='FACO3',a.ricomm_amt)),2) as komisi_faco3, "
                    + "round(sum(checkreas(a.treaty_type='JP',a.tsi_amount)),2) as tsi_jp, "
                    + "round(sum(checkreas(a.treaty_type='JP',a.premi_amount)),2) as premi_jp, "
                    + "round(sum(checkreas(a.treaty_type='JP',a.ricomm_amt)),2) as komisi_jp, "
                    + "a.total_komisi_pct,a.total_komisi,a.endorse_notes,"
                    + "(select p.pol_no from ins_policy p inner join ins_pol_obj q on p.pol_id = q.pol_id "
                    + "where p.status = 'ENDORSE' and p.endorse_mode in ('TOTAL','RESTITUTION') "
                    + "and p.active_flag = 'Y' and p.effective_flag = 'Y' "
                    + "and date_trunc('day',p.approved_date) >= '" + periodTo + "' "
                    + "and substr(p.pol_no,0,17) = substr(a.pol_no,0,17) and btrim(upper(q.ref1)) = btrim(upper(a.ref1)) "
                    + "and CASE WHEN p.pol_type_id in (21,59) THEN q.refd1::date = a.tgl_lahir ELSE btrim(upper(q.ref1)) = btrim(upper(a.ref1)) END limit 1) as restitusi,"
                    + "(select p.dla_no from ins_policy p inner join ins_pol_obj q on p.pol_id = q.pol_id "
                    + "where p.claim_status = 'DLA' and p.effective_flag = 'Y' "
                    + "and date_trunc('day',p.approved_date) >= '" + periodTo + "' "
                    + "and substr(p.pol_no,0,17) = substr(a.pol_no,0,17) and btrim(upper(q.ref1)) = btrim(upper(a.ref1)) "
                    + "and CASE WHEN p.pol_type_id in (21,59) THEN q.refd1::date = a.tgl_lahir ELSE btrim(upper(q.ref1)) = btrim(upper(a.ref1)) END limit 1) as no_lkp ");

            sqa.addQuery(" from ins_rekap_produksi_ri a ");

            if (policyDateFrom != null) {
                sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
                //sqa.addPar(policyDateFrom);
            }

            if (policyDateTo != null) {
                sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
                //sqa.addPar(policyDateTo);
            }

            if (stBranch != null) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");
                //sqa.addPar(stBranch);
            }

            if (stRegion != null) {
                sqa.addClause("a.region_id = '" + stRegion + "'");
                //sqa.addPar(stRegion);
            }

            if (stPolicyTypeGroupID != null) {
                sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
                //sqa.addPar(stPolicyTypeGroupID);
            }

            if (stPolicyTypeID != null) {
                sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
                //sqa.addPar(stPolicyTypeID);
            }

            if (stPolicyNo != null) {
                sqa.addClause("a.pol_no like '%" + stPolicyNo + "%'");
                //sqa.addPar('%'+stPolicyNo+'%');
            }

            if (Tools.isYes(stIndex)) {
                sqa.addClause("a.effective_flag = 'Y'");
            }

            if (Tools.isNo(stIndex)) {
                sqa.addClause("coalesce(a.effective_flag,'') <> 'Y'");
            }

            if (stEntityID != null) {
                sqa.addClause("a.entity_id = '" + stEntityID + "'");
                //sqa.addPar(stEntityID);
            }

            if (stMarketerID != null) {
                sqa.addClause("a.prod_id = '" + stMarketerID + "'");
                //sqa.addPar(stMarketerID);
            }

            if (stCustCategory1 != null) {
                sqa.addClause("a.category1 = ?");
                sqa.addPar(stCustCategory1);
            }

            sql = "select * from ( " + sqa.getSQL() + " group by policy_date,a.status,a.pol_id,pol_no,a.ins_pol_obj_id,a.cust_name,a.ccy,a.ccy_rate,"
                    + "a.ref1,a.tgl_lahir,a.period_start,a.period_end,a.insured_amount_obj,a.premi_total_obj,"
                    + "a.total_komisi_pct,a.total_komisi,a.endorse_notes ) x "
                    + "where x.premi_total_obj <> 0 and x.restitusi is null and x.no_lkp is null "
                    + "and date_trunc('day',x.period_end) > '" + periodTo + "' ";

            sql = sql + "order by policy_date,pol_no,ins_pol_obj_id";
        }

        SQLUtil S = new SQLUtil();

        String nama_file = "liability_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

    }
    private String year;
    private Date perDateFrom;

    public DTOList LOSSRATIO_COB() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String getpremiSQL = "select a.pol_type_id,sum(tsi_obj) as tsi_obj,sum(premi_obj) as premi_obj,"
                + "sum(a.diskon_obj) as nd_disc1,sum(a.komisi_obj) as nd_comm1,sum(a.brok_obj) as nd_brok1,"
                + "sum(a.hfee_obj) as nd_hfee,sum(a.feebase_obj) as nd_feebase1,sum(a.ppn_obj) as nd_ppn "
                + "from ( select a.pol_type_id,a.pol_id,a.pol_no,a.policy_date,tsi_obj,premi_obj,"
                + "round((premi_obj/premi_total2)*nd_disc1,2) as diskon_obj,"
                + "round((premi_obj/premi_total2)*nd_comm1,2) as komisi_obj,"
                + "round((premi_obj/premi_total2)*nd_brok1,2) as brok_obj,"
                + "round((premi_obj/premi_total2)*nd_hfee,2) as hfee_obj,"
                + "round((premi_obj/premi_total2)*nd_feebase1,2) as feebase_obj,"
                + "round((premi_obj/premi_total2)*nd_ppn,2) as ppn_obj "
                + "from ( select a.pol_type_id,a.policy_date,a.pol_id,quote_ident(pol_no) as pol_no,b.ins_pol_obj_id,"
                + "trim(b.ref1) as ref1, "
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end, "
                + "NULLIF(a.premi_total_adisc*ccy_rate,0) as premi_total2,"
                + "( select sum(insured_amount * ccy_rate) "
                + "from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) as tsi_obj, "
                + "( select sum(premi_new * ccy_rate) from ins_pol_cover y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_obj,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0) as nd_disc1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0) as nd_comm1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0) as nd_brok1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0) as nd_hfee,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0) as nd_feebase1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (59,58,71,57,76,78,85,86,87,91) and a.pol_id = x.pol_id),0) as nd_ppn  "
                + "from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "where a.active_flag = 'Y' and a.effective_flag = 'Y' "
                + "and a.status IN ('POLICY','RENEWAL','ENDORSE') "
                + "and (b.insured_amount <> 0 or b.premi_total <> 0) ";
//        if (year != null) {
//            getpremiSQL = getpremiSQL + " and date_trunc('day',a.policy_date) >= '" + year + "-01-01 00:00:00' ";
//        }
//        if (perDateFrom != null) {
//            getpremiSQL = getpremiSQL + " and date_trunc('day',a.policy_date) <= '" + perDateFrom + "' ";
//        }

        if (policyDateFrom != null) {
            getpremiSQL = getpremiSQL + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
        }
        if (policyDateTo != null) {
            getpremiSQL = getpremiSQL + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
        }
        if (stBranch != null) {
            getpremiSQL = getpremiSQL + " and a.cc_code = '" + stBranch + "' ";
        }
        if (stRegion != null) {
            getpremiSQL = getpremiSQL + " and a.region_id = '" + stRegion + "' ";
        }
        if (stCustCategory1 != null) {
            getpremiSQL = getpremiSQL + " and c.category1 = '" + stCustCategory1 + "' ";
        }
        if (stEntityID != null) {
            getpremiSQL = getpremiSQL + " and a.prod_id = " + stEntityID;
        }
        if (stCompanyID != null) {
            getpremiSQL = getpremiSQL + " and c.ref2 = '" + stCompanyID + "' ";
        }
        if (stMarketerID != null) {
            getpremiSQL = getpremiSQL + " and a.prod_id = " + stMarketerID;
        }
        if (stCompanyProdID != null) {
            getpremiSQL = getpremiSQL + " and d.ref2 = '" + stCompanyProdID + "' ";
        }
        if (stPolicyNo != null) {
            getpremiSQL = getpremiSQL + " and a.pol_no like '%" + stPolicyNo + "%' ";
        }
        getpremiSQL = getpremiSQL + " order by 1,2,4 ) a ";

        if (year != null) {
            getpremiSQL = getpremiSQL + "where substr(a.period_start::text,1,4) = '" + year + "' ";
        }

        getpremiSQL = getpremiSQL + " order by a.pol_type_id ) a group by a.pol_type_id order by a.pol_type_id ";

        String getklaimSQL = "select a.pol_type_id,sum(claim_amount) as claim_amount from ( "
                + "select a.pol_type_id,a.pol_id,quote_ident(pol_no) as pol_no,b.ins_pol_obj_id,"
                + "trim(b.ref1) as ref1,(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end,"
                + "(a.claim_amount*a.ccy_rate_claim) as claim_amount "
                + "from ins_policy a inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "where a.active_flag = 'Y' and a.effective_flag = 'Y' "
                + "and a.status IN ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA' "
                + "and (b.insured_amount <> 0 or b.premi_total <> 0) ";
//        if (year != null) {
//            getklaimSQL = getklaimSQL + " and date_trunc('day',a.policy_date) >= '" + year + "-01-01 00:00:00' ";
//        }
//        if (perDateFrom != null) {
//            getklaimSQL = getklaimSQL + " and date_trunc('day',a.policy_date) <= '" + perDateFrom + "' ";
//            getklaimSQL = getklaimSQL + " and date_trunc('day',a.approved_date) <= '" + perDateFrom + "' ";
//        }
        if (policyDateFrom != null) {
            getklaimSQL = getklaimSQL + "and date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'";
        }
        if (policyDateTo != null) {
            getklaimSQL = getklaimSQL + "and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
        }
        if (perDateFrom != null) {
            getklaimSQL = getklaimSQL + " and date_trunc('day',a.approved_date) <= '" + perDateFrom + "' ";
        }

        if (stBranch != null) {
            getklaimSQL = getklaimSQL + " and a.cc_code = '" + stBranch + "' ";
        }
        if (stRegion != null) {
            getklaimSQL = getklaimSQL + " and a.region_id = '" + stRegion + "' ";
        }
        if (stCustCategory1 != null) {
            getklaimSQL = getklaimSQL + " and c.category1 = '" + stCustCategory1 + "' ";
        }
        if (stEntityID != null) {
            getklaimSQL = getklaimSQL + " and a.prod_id = " + stEntityID;
        }
        if (stCompanyID != null) {
            getklaimSQL = getklaimSQL + " and c.ref2 = '" + stCompanyID + "' ";
        }
        if (stMarketerID != null) {
            getklaimSQL = getklaimSQL + " and a.prod_id = " + stMarketerID;
        }
        if (stCompanyProdID != null) {
            getklaimSQL = getklaimSQL + " and d.ref2 = '" + stCompanyProdID + "' ";
        }
        if (stPolicyNo != null) {
            getklaimSQL = getklaimSQL + " and a.pol_no like '%" + stPolicyNo + "%' ";
        }
        getklaimSQL = getklaimSQL + " order by 1,2,4 ) a ";
        if (year != null) {
            getklaimSQL = getklaimSQL + "where substr(a.period_start::text,1,4) = '" + year + "' ";
        }
        getklaimSQL = getklaimSQL + "group by 1 order by 1 ";

        sqa.addSelect("x.pol_type_id,x.description,a.tsi_obj as insured_amount,a.premi_obj as premi_total,"
                + "a.nd_disc1,a.nd_comm1,a.nd_brok1,a.nd_hfee,a.nd_feebase1,a.nd_ppn,b.claim_amount ");

        sqa.addQuery(" from ins_policy_types x "
                + "left join (" + getpremiSQL + ") a on a.pol_type_id = x.pol_type_id "
                + "left join (" + getklaimSQL + ") b on b.pol_type_id = x.pol_type_id ");

        sqa.addClause("premi_obj is not null");

        String sql = sqa.getSQL() + " order by 1 ";

//        final DTOList l = ListUtil.getDTOListFromQueryDS(
//                sql,
//                sqa.getPar(),
//                InsurancePolicyView.class, "DBDUMMY");

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_LOSSRATIO_COB() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.pol_type_id,a.policy_date,a.pol_id,quote_ident(pol_no) as pol_no,b.ins_pol_obj_id,"
                + "a.entity_id,c.ent_name as sumbis,c.ref2 as grupsumbis,a.prod_id,d.ent_name as marketer,d.ref2 as grupmarketer,"
                + "trim(b.ref1) as ref1,(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end, "
                + "NULLIF(a.premi_total_adisc*ccy_rate,0) as premi_total2,"
                + "( select sum(insured_amount * ccy_rate) from ins_pol_tsi y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as tsi_obj,"
                + "( select sum(premi_new * ccy_rate) from ins_pol_cover y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_obj,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (30,23,37,16) and a.pol_id = x.pol_id),0) as nd_disc1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (25,18,32,11,112,116,117) and a.pol_id = x.pol_id),0) as nd_comm1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (26,19,33,12,88,89,90,100,105,106,107,108) and a.pol_id = x.pol_id),0) as nd_brok1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (27,20,34,13) and a.pol_id = x.pol_id),0) as nd_hfee,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0) as nd_feebase1,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (59,58,71,57,76,78,85,86,87,91) and a.pol_id = x.pol_id),0) as nd_ppn ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = '" + stRegion + "'");
            //sqa.addPar(stRegion);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("c.category1 = '" + stCustCategory1 + "'");
            //sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("c.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("d.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCreditID != null) {
            sqa.addClause("a.kreasi_type_id = '" + stCreditID + "'");
//            sqa.addPar(stCreditID);
        }

        String sql = "select a.entity_id,a.sumbis,a.grupsumbis,"
                + "a.prod_id,a.marketer,a.grupmarketer,"
                + "a.pol_type_id,a.pol_id,a.pol_no,a.policy_date,a.ref1,"
                + "a.tgl_lahir,period_start,period_end,tsi_obj,premi_obj,"
                + "round((premi_obj/premi_total2)*nd_disc1,2) as diskon_obj,"
                + "round((premi_obj/premi_total2)*nd_comm1,2) as komisi_obj,"
                + "round((premi_obj/premi_total2)*nd_brok1,2) as brok1_obj,"
                + "round((premi_obj/premi_total2)*nd_hfee,2) as hfee_obj,"
                + "round((premi_obj/premi_total2)*nd_feebase1,2) as feebase1_obj,"
                + "round((premi_obj/premi_total2)*nd_ppn,2) as ppn_obj from ( " + sqa.getSQL()
                + " order by 1,2,4 ) a ";
        if (year != null) {
            sql = sql + "where substr(a.period_start::text,1,4) = '" + year + "' ";
        }
        sql = sql + "order by a.pol_type_id,a.policy_date,a.pol_id,a.ins_pol_obj_id ";

//        final DTOList l = ListUtil.getDTOListFromQueryDS(
//                sql,
//                sqa.getPar(),
//                HashDTO.class, "DBDUMMY");
//
//        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final SQLAssembler sqa2 = new SQLAssembler();

        sqa2.addSelect(" a.pol_type_id,a.pol_id,quote_ident(pol_no) as pol_no,b.ins_pol_obj_id,"
                + "a.entity_id,c.ent_name as sumbis,c.ref2 as grupsumbis,a.prod_id,d.ent_name as marketer,d.ref2 as grupmarketer,"
                + "trim(b.ref1) as ref1,(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end,"
                + "a.policy_date as tgl_polis,a.approved_date as tgl_setujui,"
                + "(a.insured_amount*a.ccy_rate) as insured_amount, a.dla_no,"
                + "a.claim_chronology as kronologi,e.cause_desc, "
                + "(a.claim_amount*a.ccy_rate_claim) as claim_amount ");

        sqa2.addQuery(" from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "left join ins_clm_cause e on e.ins_clm_caus_id = a.claim_cause ");

        sqa2.addClause("a.status IN ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA'");
        sqa2.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa2.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa2.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa2.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa2.addPar(policyDateTo);
        }

        if (perDateFrom != null) {
            sqa2.addClause("date_trunc('day',a.approved_date) <= '" + perDateFrom + "'");
            //sqa2.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa2.addClause("a.ins_policy_type_grp_id = '" + stPolicyTypeGroupID + "'");
            //sqa2.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa2.addClause("a.pol_type_id = '" + stPolicyTypeID + "'");
            //sqa2.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa2.addClause("a.cc_code = '" + stBranch + "'");
            //sqa2.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa2.addClause("a.region_id = '" + stRegion + "'");
            //sqa2.addPar(stRegion);
        }

        if (stCustCategory1 != null) {
            sqa2.addClause("c.category1 = '" + stCustCategory1 + "'");
            //sqa2.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa2.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa2.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa2.addClause("c.ref2 = '" + stCompanyID + "'");
            //sqa2.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa2.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa2.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa2.addClause("d.ref2 = '" + stCompanyProdID + "'");
            //sqa2.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa2.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa2.addPar('%' + stPolicyNo + '%');
        }

        String sql2 = "select a.* from ( " + sqa2.getSQL() + " order by 1,2,4 ) a ";
        if (year != null) {
            sql2 = sql2 + "where substr(a.period_start::text,1,4) = '" + year + "' ";
        }
        sql2 = sql2 + " order by 1,2 ";

//        final DTOList l2 = ListUtil.getDTOListFromQueryDS(
//                sql2,
//                sqa2.getPar(),
////                HashDTO.class, "DBDUMMY");

//        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);
//
//        return l;

        SQLUtil S = new SQLUtil();
        SQLUtil S2 = new SQLUtil();

        String nama_file1 = "lossratiocob_premi_" + DateUtil.getMonth2Digit(policyDateFrom) + DateUtil.getYear(policyDateFrom) + ".csv";
        String nama_file2 = "lossratiocob_klaim_" + DateUtil.getMonth2Digit(policyDateFrom) + DateUtil.getYear(policyDateFrom) + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/uw/" + nama_file1 + "' With CSV HEADER;";

        sql2 = "Copy ("
                + sql2
                + " ) To 'D://exportdb/uw/" + nama_file2 + "' With CSV HEADER;";


        final PreparedStatement ps = S.setQuery(sql);
        final PreparedStatement ps2 = S2.setQuery(sql2);

        boolean tes = ps.execute();
        boolean tes2 = ps2.execute();

        S.release();
        S2.release();

        //COPY POLIS KE DIRECTORY
        String INPUT_FILE = "P:\\uw\\" + nama_file1;//utk core 250.53
        String COPY_FILE_TO = "W:\\uw\\" + nama_file1;
        File source = new File(INPUT_FILE);
        File target = new File(COPY_FILE_TO);

        FileTransferDirectory transfer = new FileTransferDirectory();
        transfer.copyWithStreams(source, target, false);
        System.out.println(String.valueOf(INPUT_FILE));
        System.out.println(String.valueOf(COPY_FILE_TO));
        System.out.println("Done.");

        if (source.delete()) {
            System.out.println("Deleted the file: " + source.getName());
        } else {
            System.out.println("Failed to delete the file.");
        }

        //COPY POLIS KE DIRECTORY
        String INPUT_FILE2 = "P:\\uw\\" + nama_file2;//utk core 250.53
        String COPY_FILE_TO2 = "W:\\uw\\" + nama_file2;
        File source2 = new File(INPUT_FILE2);
        File target2 = new File(COPY_FILE_TO2);

        transfer.copyWithStreams(source2, target2, false);
        System.out.println(String.valueOf(INPUT_FILE2));
        System.out.println(String.valueOf(COPY_FILE_TO2));
        System.out.println("Done.");

        if (source2.delete()) {
            System.out.println("Deleted the file: " + source2.getName());
        } else {
            System.out.println("Failed to delete the file.");
        }

        return new DTOList();
    }

    public void EXPORT_LOSSRATIO_COB() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

//        bikin sheet
//        XSSFSheet sheet = wb.createSheet("premi");
        XSSFSheet sheet2 = wb.createSheet("klaim");

//        HSSFWorkbook wb = new HSSFWorkbook();
//        HSSFSheet sheet2 = wb.createSheet("klaim");

        int page = 0;
        int baris = 0;
        int jumlahBarisPerSheet = 1000000;

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin sheet fleksibel
            if (i % jumlahBarisPerSheet == 0) {
                page = page + 1;
                XSSFSheet sheet = wb.createSheet("premi" + page);
//                HSSFSheet sheet = wb.createSheet("premi" + page);
                baris = 0;
            }

//            bikin header
            XSSFRow row2 = wb.getSheet("premi" + page).createRow(1);
//            HSSFRow row2 = wb.getSheet("premi" + page).createRow(1);
            if (getPolicyDateFrom() != null) {
                row2.createCell(0).setCellValue("Tanggal Produksi : " + DateUtil.getDateStr(getPolicyDateFrom()) + " sd " + DateUtil.getDateStr(getPolicyDateTo()));
            }

//            XSSFRow row0 = sheet.createRow(0);
            XSSFRow row0 = wb.getSheet("premi" + page).createRow(2);
            row0.createCell(0).setCellValue("entity_id");
            row0.createCell(1).setCellValue("sumbis");
            row0.createCell(2).setCellValue("grupsumbis");
            row0.createCell(3).setCellValue("prod_id");
            row0.createCell(4).setCellValue("marketer");
            row0.createCell(5).setCellValue("grupmarketer");
            row0.createCell(6).setCellValue("pol_type_id");
            row0.createCell(7).setCellValue("pol_id");
            row0.createCell(8).setCellValue("pol_no");
            row0.createCell(9).setCellValue("policy_date");
            row0.createCell(10).setCellValue("ref1");
            row0.createCell(11).setCellValue("tgl_lahir");
            row0.createCell(12).setCellValue("period_start");
            row0.createCell(13).setCellValue("period_end");
            row0.createCell(14).setCellValue("tsi_obj");
            row0.createCell(15).setCellValue("premi_obj");
            row0.createCell(16).setCellValue("diskon_obj");
            row0.createCell(17).setCellValue("komisi_obj");
            row0.createCell(18).setCellValue("brok_obj");
            row0.createCell(19).setCellValue("hfee_obj");
            row0.createCell(20).setCellValue("feebase_obj");
            row0.createCell(21).setCellValue("ppn_obj");

            //bikin isi cell
//            XSSFRow row = sheet.createRow(i + 1);
            XSSFRow row = wb.getSheet("premi" + page).createRow(baris + 3);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("sumbis"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("grupsumbis"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("prod_id").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("marketer"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("grupmarketer"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_lahir") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameDT("tgl_lahir"));
            }
            if (h.getFieldValueByFieldNameDT("period_start") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            }
            if (h.getFieldValueByFieldNameDT("period_end") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            }
            if (h.getFieldValueByFieldNameBD("tsi_obj") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("tsi_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_obj") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("premi_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("diskon_obj") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("diskon_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("komisi_obj") != null) {
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("komisi_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("brok1_obj") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("brok1_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("hfee_obj") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("hfee_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("feebase1_obj") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("feebase1_obj").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("ppn_obj") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("ppn_obj").doubleValue());
            }
            baris = baris + 1;

        }

        for (int j = 0; j < list2.size(); j++) {
            HashDTO h = (HashDTO) list2.get(j);

            //bikin header
            XSSFRow row0 = sheet2.createRow(0);
//            HSSFRow row0 = sheet2.createRow(0);
            row0.createCell(0).setCellValue("pol_type_id");
            row0.createCell(1).setCellValue("pol_id");
            row0.createCell(2).setCellValue("pol_no");
            row0.createCell(3).setCellValue("ins_pol_obj_id");
            row0.createCell(4).setCellValue("entity_id");
            row0.createCell(5).setCellValue("sumbis");
            row0.createCell(6).setCellValue("prod_id");
            row0.createCell(7).setCellValue("marketer");
            row0.createCell(8).setCellValue("ref1");
            row0.createCell(9).setCellValue("tgl_lahir");
            row0.createCell(10).setCellValue("period_start");
            row0.createCell(11).setCellValue("period_end");
            row0.createCell(12).setCellValue("tgl_polis");
            row0.createCell(13).setCellValue("tgl_setujui");
            row0.createCell(14).setCellValue("insured_amount");
            row0.createCell(15).setCellValue("dla_no");
            row0.createCell(16).setCellValue("kronologi");
            row0.createCell(17).setCellValue("cause_desc");
            row0.createCell(18).setCellValue("claim_amount");

            //bikin isi cell
            XSSFRow row = sheet2.createRow(j + 1);
//            HSSFRow row = sheet2.createRow(j + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("ins_pol_obj_id").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("entity_id").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("sumbis"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("prod_id").doubleValue());
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("marketer"));
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (h.getFieldValueByFieldNameDT("tgl_lahir") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameDT("tgl_lahir"));
            }
            if (h.getFieldValueByFieldNameDT("period_start") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            }
            if (h.getFieldValueByFieldNameDT("period_end") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            }
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameDT("tgl_polis"));
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameDT("tgl_setujui"));
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("dla_no"));
            if (h.getFieldValueByFieldNameST("kronologi") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameST("kronologi"));
            }
            if (h.getFieldValueByFieldNameST("cause_desc") != null) {
                row.createCell(17).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("cause_desc")));
            }
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("claim_amount").doubleValue());

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=lossprofile_" + System.currentTimeMillis() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    /**
     * @return the perDateFrom
     */
    public Date getPerDateFrom() {
        return perDateFrom;
    }

    /**
     * @param perDateFrom the perDateFrom to set
     */
    public void setPerDateFrom(Date perDateFrom) {
        this.perDateFrom = perDateFrom;
    }

    /**
     * @return the year
     */
    public String getYear() {
        return year;
    }

    /**
     * @param year the year to set
     */
    public void setYear(String year) {
        this.year = year;
    }
    private String stLossProfile;
    private String stLossProfileName;

    public DTOList LOSSPROFILE_KREDIT() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        String level = null;
        if (stLossProfile != null) {
            if (stLossProfile.equalsIgnoreCase("1")) {
                level = "tenor";
            } else if (stLossProfile.equalsIgnoreCase("2")) {
                level = "usia";
            } else if (stLossProfile.equalsIgnoreCase("3")) {
                level = "insured";
            }
        }

        String getpremiSQL = "select a.pol_id,a.pol_no,a.status,a.ins_pol_obj_id,a.nama,a.usia,a.tenor,"
                + "coalesce(getpremi(a.status = 'ENDORSE',a.insured_amount_obj,a.tsi_obj),0) as insured,premi_obj,"
                + "round((premi_obj/premi_total)*nd_disc1,2) as diskon_obj,round((premi_obj/premi_total)*nd_comm1,2) as komisi_obj,"
                + "round((premi_obj/premi_total)*nd_brok1,2) as brok1_obj,round((premi_obj/premi_total)*nd_hfee,2) as hfee_obj,"
                + "round((premi_obj/premi_total)*nd_feebase1,2) as feebase1_obj,round((premi_obj/premi_total)*nd_ppn,2) as ppn_obj,"
                + "round((premi_obj/premi_total)*premiko,2) as premiko,round((premi_obj/premi_total)*discko,2) as discko "
                + "from ( select a.pol_id,a.pol_no,a.status,b.ins_pol_obj_id,trim(b.ref1) as nama,"
                + "b.ref1,b.ref2 as usia,b.ref5 as tenor,coalesce(b.insured_amount*ccy_rate,0) as insured_amount_obj,"
                + "( select sum(coalesce(insured_amount*ccy_rate,0)) from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) as tsi_obj,"
                + "( select sum(coalesce(premi_new*ccy_rate,0)) from ins_pol_cover y where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_obj,"
                + "a.premi_total,a.nd_disc1,a.nd_comm1,a.nd_brok1,a.nd_hfee,a.nd_feebase1,a.nd_ppn,a.premiko,a.discko "
                + "from ( select a.pol_id,quote_ident(pol_no) as pol_no,a.status,a.ccy_rate,"
                + "NULLIF(a.premi_total*a.ccy_rate,0) as premi_total,a.nd_disc1,a.nd_comm1,a.nd_brok1,a.nd_hfee,a.nd_feebase1,a.nd_ppn,"
                + "sum(getpremiend(b.entity_id,0,coalesce(b.premi_amt*a.ccy_rate,0)*-1)) as premiko, "
                + "sum(getpremiend(b.entity_id,0,(coalesce(b.disc_amount*a.ccy_rate,0))*-1)) as discko  "
                + "from ins_policies2 a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "where a.status in ('POLICY','ENDORSE','RENEWAL') "
                + "and a.active_flag='Y' and a.effective_flag = 'Y' and a.pol_type_id = 59 "
                + "and ((a.cover_type_code = 'COINSOUTSELF' and b.entity_id <> 1 ) or (a.cover_type_code <> 'COINSOUTSELF' and b.entity_id = 1 )) ";

        if (policyDateFrom != null) {
            getpremiSQL = getpremiSQL + "and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
        }
        if (policyDateTo != null) {
            getpremiSQL = getpremiSQL + "and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
        }
        if (stBranch != null) {
            getpremiSQL = getpremiSQL + " and a.cc_code = '" + stBranch + "' ";
        }
        if (stRegion != null) {
            getpremiSQL = getpremiSQL + " and a.region_id = '" + stRegion + "' ";
        }
        if (stCustCategory1 != null) {
            getpremiSQL = getpremiSQL + " and c.category1 = '" + stCustCategory1 + "' ";
        }
        if (stEntityID != null) {
            getpremiSQL = getpremiSQL + " and a.entity_id = " + stEntityID;
        }
        if (stCompanyID != null) {
            getpremiSQL = getpremiSQL + " and c.ref2 = '" + stCompanyID + "' ";
        }
        if (stMarketerID != null) {
            getpremiSQL = getpremiSQL + " and a.prod_id = " + stMarketerID;
        }
        if (stCompanyProdID != null) {
            getpremiSQL = getpremiSQL + " and d.ref2 = '" + stCompanyProdID + "' ";
        }

        getpremiSQL = getpremiSQL + " group by a.pol_id,a.pol_no,a.status,a.premi_total,a.premi_total_adisc,a.ccy_rate,"
                + "a.nd_disc1,a.nd_comm1,a.nd_brok1,a.nd_hfee,a.nd_feebase1,a.nd_ppn ) a inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "where (b.insured_amount <> 0 or b.premi_total <> 0) order by a.pol_no,b.ins_pol_obj_id ) a order by a.pol_no,a.ins_pol_obj_id ";

        String getklaimSQL = " select a.pol_no,a.nama,a.usia,a.tenor,a.insured,count(pla_no) as kejadian,sum(claim_amount) as claim_amount "
                + "from ( select a.pol_type_id,a.pol_id,quote_ident(a.pol_no) as pol_no,b.ins_pol_obj_id,"
                + "trim(b.ref1) as nama,b.ref1,b.ref2 as usia,b.ref5 as tenor,"
                + "( select sum(insured_amount*ccy_rate) from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) as insured,"
                + "a.pla_no,(a.claim_amount*a.ccy_rate_claim) as claim_amount from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "where a.active_flag = 'Y' and a.effective_flag = 'Y' and a.pol_type_id = 59 "
                + "and a.status IN ('CLAIM','CLAIM ENDORSE') and a.claim_status = 'DLA' ";

        if (policyDateFrom != null) {
            getklaimSQL = getklaimSQL + "and date_trunc('day',a.approved_date) >= '" + policyDateFrom + "'";
        }
        if (policyDateTo != null) {
            getklaimSQL = getklaimSQL + "and date_trunc('day',a.approved_date) <= '" + policyDateTo + "'";
        }
        if (stBranch != null) {
            getklaimSQL = getklaimSQL + " and a.cc_code = '" + stBranch + "' ";
        }
        if (stRegion != null) {
            getklaimSQL = getklaimSQL + " and a.region_id = '" + stRegion + "' ";
        }
        if (stCustCategory1 != null) {
            getklaimSQL = getklaimSQL + " and c.category1 = '" + stCustCategory1 + "' ";
        }
        if (stEntityID != null) {
            getklaimSQL = getklaimSQL + " and a.entity_id = " + stEntityID;
        }
        if (stCompanyID != null) {
            getklaimSQL = getklaimSQL + " and c.ref2 = '" + stCompanyID + "' ";
        }
        if (stMarketerID != null) {
            getklaimSQL = getklaimSQL + " and a.prod_id = " + stMarketerID;
        }
        if (stCompanyProdID != null) {
            getklaimSQL = getklaimSQL + " and d.ref2 = '" + stCompanyProdID + "' ";
        }
        getklaimSQL = getklaimSQL + " ) a group by a.pol_no,a.nama,a.usia,a.tenor,a.insured order by a.tenor,a.usia ";

        sqa.addSelect("a.group_desc,a.lvl,a.ref1,a.ref2,a.ref4,a.ref5,"
                + "count(b.ins_pol_obj_id) as jumlah,sum(b.premi_obj+premiko-b.diskon_obj) as preto,"
                + "sum(b.premi_obj+premiko-b.diskon_obj-b.komisi_obj-b.brok1_obj-b.hfee_obj-b.feebase1_obj-b.ppn_obj) as prenet ");

        sqa.addQuery(" from band_level a "
                + "left join ( " + getpremiSQL + " ) b on b." + level + "::numeric between a.ref1 and a.ref2 ");

        if (stLossProfile != null) {
            sqa.addClause("a.group_desc = ? ");
            sqa.addPar("losskredit_" + level);
        }

        String sql = "select a.ref4,a.ref5,coalesce(a.jumlah,0) as premi_base,coalesce(a.preto,0) as premi_total,coalesce(a.prenet,0) as premi_netto,"
                + "sum(coalesce(c.kejadian,0)) as premi_rate,sum(coalesce(c.claim_amount,0)) as claim_amount "
                + "from ( " + sqa.getSQL() + " group by a.ref1,a.ref2,a.ref4,a.ref5,a.lvl,a.group_desc,a.lvl order by a.lvl "
                + ") a left join ( " + getklaimSQL + " ) c on c." + level + "::numeric between a.ref1 and a.ref2 ";

        if (getStLossProfile() != null) {
            sql = sql + " where a.group_desc = 'losskredit_" + level + "' ";
        }

        sql = sql + "group by a.ref4,a.ref5,a.lvl,a.jumlah,a.preto,a.prenet order by a.lvl ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    /**
     * @return the stLossProfile
     */
    public String getStLossProfile() {
        return stLossProfile;
    }

    /**
     * @param stLossProfile the stLossProfile to set
     */
    public void setStLossProfile(String stLossProfile) {
        this.stLossProfile = stLossProfile;
    }

    /**
     * @return the stLossProfileName
     */
    public String getStLossProfileName() {
        return stLossProfileName;
    }

    /**
     * @param stLossProfileName the stLossProfileName to set
     */
    public void setStLossProfileName(String stLossProfileName) {
        this.stLossProfileName = stLossProfileName;
    }

    public DTOList RPP_FEEBASE() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code,a.policy_date,a.pol_id,a.pol_no,a.cust_name,"
                + "getpremi(a.status = 'ENDORSE',a.insured_amount_e*a.ccy_rate,a.insured_amount*a.ccy_rate) as insured,"
                + "(a.premi_total*a.ccy_rate) as premi,b.ref1,b.ref3,b.order_no,"
                + "( select sum(y.insured_amount * a.ccy_rate) "
                + "from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) as insured_amount,"
                + "( select sum(y.premi_new * a.ccy_rate) from ins_pol_cover y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_total,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0) as nd_feebase1 ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            }
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("c.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("c.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("d.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("c.ref1 in " + type);
//            sqa.addPar(type);
        }

        final String sql = "select a.* from ( " + sqa.getSQL() + " order by a.policy_date,a.pol_no,b.order_no "
                + ") a where a.premi_total <> 0 order by a.pol_no,a.order_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList EXCEL_FEEBASE() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code,a.policy_date,a.pol_id,a.pol_no,a.cust_name,a.prod_name,"
                + "getpremi(a.status = 'ENDORSE',a.insured_amount_e*a.ccy_rate,a.insured_amount*a.ccy_rate) as insured,"
                + "(a.premi_total*a.ccy_rate) as premi,b.ref1,b.ref3,b.order_no,e.user_name,"
                + "( select sum(y.insured_amount * a.ccy_rate) "
                + "from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) as insured_amount,"
                + "( select sum(y.premi_new * a.ccy_rate) from ins_pol_cover y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_total,"
                + "coalesce((select sum(x.amount*a.ccy_rate) from ins_pol_items x "
                + "where x.ins_item_id in (68,67,69,66,92,93,94,95,96,97,98,99) and a.pol_id = x.pol_id),0) as nd_feebase1 ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ent_master c on c.ent_id = a.entity_id "
                + "inner join ent_master d on d.ent_id = a.prod_id "
                + "inner join s_users e on e.user_id = a.create_who ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ?");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ?");
            sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("c.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("c.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("d.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ?");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("c.ref1 in " + type);
//            sqa.addPar(type);
        }

        final String sql = "select a.* from ( " + sqa.getSQL() + " order by a.policy_date,a.pol_no,b.order_no "
                + ") a where a.premi_total <> 0 order by a.pol_no,a.order_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public void EXPORT_FEEBASE() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        int pn = 0;
        int norut = 0;
        BigDecimal subTotalInsured = null;
        BigDecimal subTotalPremi = null;
        BigDecimal subTotalFeeBase = null;
        String polisAkhir = null;
        String polisAkhir_cetak = null;

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            norut++;

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("tgl polis");
            row0.createCell(2).setCellValue("no polis");
            row0.createCell(3).setCellValue("tertanggung");
            row0.createCell(4).setCellValue("marketer");
            row0.createCell(5).setCellValue("nama");
            row0.createCell(6).setCellValue("rekening");
            row0.createCell(7).setCellValue("pembuat");
            row0.createCell(8).setCellValue("tsi_obj");
            row0.createCell(9).setCellValue("premi_obj");
            row0.createCell(10).setCellValue("feebase");

            XSSFRow row = sheet.createRow(i + 1);
            /*
            if (i > 0) {
            HashDTO h2 = (HashDTO) list.get(i - 1);
            String inward = h.getFieldValueByFieldNameST("pol_no");
            String inward2 = h2.getFieldValueByFieldNameST("pol_no");
            if (!inward.equalsIgnoreCase(inward2)) {
            pn++;
            norut = 1;

            row.createCell(7).setCellValue("SUBTOTAL " + polisAkhir_cetak);
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase1").doubleValue());

            subTotalInsured = null;
            subTotalPremi = null;
            subTotalFeeBase = null;
            }
            }*/
            //bikin isi cell
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("prod_name"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("ref3"));
            }
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("user_name"));
            if (h.getFieldValueByFieldNameBD("insured_amount") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_feebase1") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("nd_feebase1").doubleValue());
            }
//            row.createCell(10).setCellValue(BDUtil.zero.doubleValue());

            subTotalInsured = BDUtil.add(subTotalInsured, h.getFieldValueByFieldNameBD("insured_amount"));
            subTotalPremi = BDUtil.add(subTotalPremi, h.getFieldValueByFieldNameBD("premi_total"));
            subTotalFeeBase = h.getFieldValueByFieldNameBD("nd_feebase1");

            polisAkhir = h.getFieldValueByFieldNameST("pol_no");
            polisAkhir_cetak = polisAkhir.substring(0, 4) + "-" + polisAkhir.substring(4, 8) + "-" + polisAkhir.substring(8, 12) + "-" + polisAkhir.substring(12, 16) + "-" + polisAkhir.substring(16, 18);

        }
        /*
        XSSFRow row2 = sheet.createRow(list.size() + 1);
        row2.createCell(7).setCellValue("SUBTOTAL " + polisAkhir_cetak);
        row2.createCell(8).setCellValue(subTotalInsured.doubleValue());
        row2.createCell(9).setCellValue(subTotalPremi.doubleValue());
        row2.createCell(10).setCellValue(subTotalFeeBase.doubleValue());*/

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_STATISTIK_BULANAN() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code,a.pol_type_id,a.policy_date,a.pol_id,quote_ident(a.pol_no) as pol_no,a.status,a.ccy_rate,b.ins_pol_obj_id,"
                + "a.entity_id,c.ent_name as sumbis,c.ref2 as grupsumbis,a.prod_id,d.ent_name as marketer,d.ref2 as grupmarketer,"
                + "trim(b.description) as description,"
                + "(select vs_description from s_valueset where vs_group = 'INSOBJ_CREDIT_COVER_PACKAGE' "
                + "and vs_code = (case when a.pol_type_id in (21,59) then b.ref13 else null end)) as coverage, "
                + "(select count(x.ins_pol_obj_id) from ins_pol_obj x where x.pol_id = a.pol_id) as debitur,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd1,null)) as tgl_lahir,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end, "
                + "case when a.status <> 'ENDORSE' then ( select sum(insured_amount * ccy_rate) "
                + "from ins_pol_tsi y where y.ins_pol_obj_id = b.ins_pol_obj_id) else (b.insured_amount * ccy_rate) end as tsi_obj,"
                + "( select sum(premi_new * ccy_rate) from ins_pol_cover y "
                + "where y.ins_pol_obj_id = b.ins_pol_obj_id) as premi_obj,"
                + "coalesce((select sum((y.amount*-1) * ccy_rate) from ins_pol_coins y "
                + "where y.policy_id = a.pol_id and y.entity_id <> 1),0)  as tsiko_obj,"
                + "a.premi_bruto,a.premiko,a.diskon,a.hfee,a.comm1,a.bfee,a.feebase,a.ppn ");

        sqa.addQuery(" from ins_policies3 a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "left join ent_master c on c.ent_id = a.entity_id "
                + "left join ent_master d on d.ent_id = a.prod_id ");

        if (appDateFrom != null) {
            sqa.addClause(" date_trunc('day',a.approved_date) >= '" + appDateFrom + "'");
        }

        if (appDateTo != null) {
            sqa.addClause(" date_trunc('day',a.approved_date) <= '" + appDateTo + "'");
        }

        String sql = " select row_number() over(partition by 0) AS nomor,a.status,"
                + "a.entity_id,a.sumbis,a.grupsumbis,"
                + "a.prod_id,a.marketer, a.grupmarketer,"
                + "a.cc_code,a.pol_type_id,a.pol_id,a.pol_no,a.ccy_rate,a.policy_date,"
                + "a.ins_pol_obj_id,a.description,a.tgl_lahir,period_start,period_end,"
                + "tsi_obj,premi_obj,round(tsiko_obj/debitur,2) as tsiko_obj,"
                + "round(premiko/debitur,2) as premiko_obj,round(diskon/debitur,2) as diskon_obj,"
                + "round(comm1/debitur,2) as komisi_obj,round(bfee/debitur,2) as brok1_obj,"
                + "round(hfee/debitur,2) as hfee_obj,round(feebase/debitur,2) as feebase1_obj,"
                + "round(ppn/debitur,2) as ppn_obj,coverage from (  " + sqa.getSQL()
                + " ) a where (a.premi_obj <> 0 or a.premiko <> 0 or a.diskon <> 0 or a.comm1 <> 0 "
                + "or a.bfee <> 0 or a.hfee <> 0 or a.feebase <> 0  or a.ppn <> 0) "
                + "order by a.cc_code,a.pol_type_id,a.policy_date,a.pol_id ";

        SQLUtil S = new SQLUtil();

        String nama_file = "statistik_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/statistik/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        String INPUT_FILE = "P:\\statistik\\" + nama_file;//utk core 250.53
        String COPY_FILE_TO = "W:\\statistik\\" + nama_file;
        File source = new File(INPUT_FILE);
        File target = new File(COPY_FILE_TO);

        FileTransferDirectory transfer = new FileTransferDirectory();
        transfer.copyWithStreams(source, target, false);
        System.out.println(String.valueOf(INPUT_FILE));
        System.out.println(String.valueOf(COPY_FILE_TO));
        System.out.println("Done.");

        if (source.delete()) {
            System.out.println("Deleted the file: " + source.getName());
        } else {
            System.out.println("Failed to delete the file.");
        }


        return new DTOList();
    }

    public DTOList REKAP_JENIS_ALL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.pol_type_id,a.cc_code,a.cc_code_source,"
                + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        String sql = null;
        if (stBussinessPolType == null) {
            sql = "select cc_code,e.pol_type_id,e.description,"
                    + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                    + "from ins_policy_types e "
                    + "left join ( "
                    + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                    + ") z on z.pol_type_id = e.pol_type_id where premi <> 0 "
                    + "group by cc_code,e.pol_type_id,e.description order by cc_code,e.pol_type_id";
        } else {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = "select cc_code_source as cc_code,e.pol_type_id,e.description,"
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                        + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                        + "from ins_policy_types e "
                        + "left join ( "
                        + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                        + ") z on z.pol_type_id = e.pol_type_id where premi <> 0 "
                        + "group by cc_code_source,e.pol_type_id,e.description order by cc_code_source,e.pol_type_id";
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sql = "select cc_code,e.pol_type_id,e.description,"
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                        + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                        + "from ins_policy_types e "
                        + "left join ( "
                        + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                        + ") z on z.pol_type_id = e.pol_type_id where premi <> 0 "
                        + "group by cc_code,e.pol_type_id,e.description order by cc_code,e.pol_type_id";
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_REKAP_JENIS_ALL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("	b.category1 as bus_source,a.pol_type_id,a.cc_code,a.cc_code_source, "
                + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon ");

        sqa.addQuery(" from ins_policies a  "
                + " left join ent_master b on b.ent_id = a.entity_id "
                + " inner join ins_pol_coins d on d.policy_id = a.pol_id  ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("(d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')");
        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (stFltCoverType != null) {
            sqa.addClause("a.cover_type_code = ?");
            sqa.addPar(stFltCoverType);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = ?");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("b.ref2 = ?");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = ?");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("f.ref2 = ?");
            sqa.addPar(stCompanyProdID);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        String sql = null;
        if (stBussinessPolType == null) {
            sql = "select c.cc_code,c.description as cabang,e.pol_type_id,e.description,"
                    + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                    + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                    + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                    + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                    + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                    + "from ins_policy_types e "
                    + "left join ( "
                    + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                    + ") z on z.pol_type_id = e.pol_type_id "
                    + " left join gl_cost_center c on c.cc_code = z.cc_code "
                    + " where premi <> 0 group by c.cc_code,c.description,e.pol_type_id,e.description order by c.cc_code,e.pol_type_id";
        } else {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = "select c.cc_code,c.description as cabang,e.pol_type_id,e.description,"
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                        + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                        + "from ins_policy_types e "
                        + "left join ( "
                        + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                        + ") z on z.pol_type_id = e.pol_type_id "
                        + " left join gl_cost_center c on c.cc_code = z.cc_code_source "
                        + " where premi <> 0 group by c.cc_code,c.description,e.pol_type_id,e.description order by c.cc_code,e.pol_type_id";
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sql = "select c.cc_code,c.description as cabang,e.pol_type_id,e.description,"
                        + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                        + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                        + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                        + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                        + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                        + "from ins_policy_types e "
                        + "left join ( "
                        + sqa.getSQL() + " group by b.category1,a.cc_code,a.pol_type_id,a.cc_code_source "
                        + ") z on z.pol_type_id = e.pol_type_id "
                        + " left join gl_cost_center c on c.cc_code = z.cc_code "
                        + " where premi <> 0 group by c.cc_code,c.description,e.pol_type_id,e.description order by c.cc_code,e.pol_type_id";
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_REKAP_JENIS_ALL() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

//        int page = 0;
//        int baris = 0;
//        int jumlahBarisPerSheet = 40000;
        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

//            //bikin sheet fleksibel
//            if (i > 0) {
//                HashDTO s = (HashDTO) list.get(i - 1);
//                String koda = h.getFieldValueByFieldNameST("cc_code");
//                logger.logDebug("################1" + koda);
//                String koda2 = s.getFieldValueByFieldNameST("cc_code");
//                logger.logDebug("################2" + koda2);
//                if (!koda2.equalsIgnoreCase(koda)) {
//                    page = page + 1;
//                    XSSFSheet sheet = wb.createSheet("cabang" + page);
//                    baris = 0;
//                }
//            }

            //bikin header
//            XSSFRow row0 = wb.getSheet("cabang" + page).createRow(0);
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("koda");
            row0.createCell(1).setCellValue("cabang");
            row0.createCell(2).setCellValue("kode");
            row0.createCell(3).setCellValue("jenis");
            row0.createCell(4).setCellValue("umum");
            row0.createCell(5).setCellValue("pemda");
            row0.createCell(6).setCellValue("perusda");
            row0.createCell(7).setCellValue("bpd");
            row0.createCell(8).setCellValue("jumlah");

            //bikin isi cell
//            XSSFRow row = wb.getSheet("cabang" + cabang).createRow(i + 1);
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(3).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("description")));
            if (h.getFieldValueByFieldNameBD("nd_comm1") != null) {
                row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("nd_comm1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm2") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("nd_comm2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm3") != null) {
                row.createCell(6).setCellValue(h.getFieldValueByFieldNameBD("nd_comm3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("nd_comm4") != null) {
                row.createCell(7).setCellValue(h.getFieldValueByFieldNameBD("nd_comm4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("premi_total_adisc") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("premi_total_adisc").doubleValue());
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_TRIWULANOLD() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("substr(a.policy_date::text,1,4) as tahun,substr(a.policy_date::text,6,2) as bulan,"
                + "a.cc_code as koda,c.description as cabang,a.pol_type_id as jenid,"
                + "e.ent_class,d.short_desc as jenas,e.ent_id,e.ent_name as bank,"
                + "(a.premi_total*a.ccy_rate) as premibruto,"
                + "getpremiend(b.entity_id,a.premi_total*a.ccy_rate,b.premi_amt*a.ccy_rate*-1) as preminet,"
                + "getpremiend(b.entity_id,((coalesce(a.nd_disc1,0)*a.ccy_rate) + (coalesce(a.nd_disc2,0)*a.ccy_rate)),((coalesce(b.disc_amount,0))*a.ccy_rate)*-1) as diskon,"
                + "e.address,e.birth_date,f.vs_description as ident_type,e.indent_number,e.tax_file ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_coins b on b.policy_id = a.pol_id "
                + "inner join gl_cost_center c on c.cc_code = a.cc_code "
                + "inner join ins_policy_types d on d.pol_type_id = a.pol_type_id "
                + "inner join ent_master e on e.ent_id = a.entity_id and e.category1 = '1' and e.ref2 = '999' "
                + "inner join s_valueset f on f.vs_code = e.ident_type  and f.vs_group = 'ENT_ID_TYPE' ");

        sqa.addClause(" a.status in ('POLICY','ENDORSE','RENEWAL') ");
        sqa.addClause(" a.active_flag='Y' ");
        sqa.addClause(" a.effective_flag='Y' ");
        sqa.addClause(" (b.entity_id <> 1 or b.coins_type <> 'COINS_COVER') ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        final String sql = " select a.ent_class,tahun,bulan,ent_id as kdnasabah,"
                + "bank as nasabah,birth_date as tgllahir,address as alamat,"
                + "quote_ident(ident_type) as niktype,quote_ident(indent_number) as nik,"
                + "quote_ident(tax_file) as npwp,koda,sum(preminet-diskon) as netto from ( "
                + sqa.getSQL() + " order by a.entity_id ) a "
                + "group by ent_class,tahun,bulan,koda,ent_id,bank,address,birth_date,"
                + "ident_type,indent_number,tax_file order by ent_class,tahun,bulan,ent_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList EXCEL_TRIWULAN() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("distinct e.cc_code as koda,c.description as cabang,e.create_date,"
                + "e.ent_class,e.ent_id as kdnasabah,e.ent_name as nasabah,e.address as alamat,e.birth_date as tgllahir,"
                + "f.vs_description as niktype,e.indent_number as nik,e.tax_file as npwp,d.vs_description as sumbis  ");

        sqa.addQuery(" from ins_policy a "
                + "inner join ent_master e on e.ent_id = a.entity_id "
                + "inner join s_valueset f on f.vs_code = e.ident_type and f.vs_group = 'ENT_ID_TYPE' "
                + "inner join s_valueset d on d.vs_code = e.category1 and d.vs_group = 'ASK_BUS_SOURCE' "
                + "inner join gl_cost_center c on c.cc_code = a.cc_code ");

        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y' and a.status in ('POLICY','RENEWAL') ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',e.create_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',e.create_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (stCustCategory1 != null) {
            sqa.addClause("e.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        final String sql = sqa.getSQL() + " order by e.create_date,e.ent_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_TRIWULAN() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("nasabah");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
//            row0.createCell(0).setCellValue("ent_class");
//            row0.createCell(1).setCellValue("tahun");
//            row0.createCell(2).setCellValue("bulan");
//            row0.createCell(3).setCellValue("kdnasabah");
//            row0.createCell(4).setCellValue("nasabah");
//            row0.createCell(5).setCellValue("tgllahir");
//            row0.createCell(6).setCellValue("alamat");
//            row0.createCell(7).setCellValue("niktype");
//            row0.createCell(8).setCellValue("nik");
//            row0.createCell(9).setCellValue("npwp");
//            row0.createCell(10).setCellValue("koda");
//            row0.createCell(11).setCellValue("netto");

            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("tglbuat");
            row0.createCell(2).setCellValue("class");
            row0.createCell(3).setCellValue("kdnasabah");
            row0.createCell(4).setCellValue("nasabah");
            row0.createCell(5).setCellValue("tgllahir");
            row0.createCell(6).setCellValue("alamat");
            row0.createCell(7).setCellValue("niktype");
            row0.createCell(8).setCellValue("nik");
            row0.createCell(9).setCellValue("npwp");
            row0.createCell(10).setCellValue("sumbis");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cabang"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameDT("create_date"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("ent_class"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameBD("kdnasabah").doubleValue());
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameST("nasabah"));
            if (h.getFieldValueByFieldNameDT("tgllahir") != null) {
                row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tgllahir"));
            }
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("alamat"));
            if (h.getFieldValueByFieldNameST("niktype") != null) {
                row.createCell(7).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("niktype")));
            }
            if (h.getFieldValueByFieldNameST("nik") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("nik"));
            }
            if (h.getFieldValueByFieldNameST("npwp") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("npwp"));
            }
            row.createCell(10).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("sumbis")));
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_DATA_INVOICE() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("d.ent_name,a.cust_name,a.pol_id,a.pol_no,(checkstatus(a.pol_type_id = 1,b.ref11,b.ref1)) as nama,b.insured_amount,b.premi_total,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd2,getperiod(a.pol_type_id in (1,3,5,81),b.refd1,a.period_start))) as period_start,"
                + "(getperiod(a.pol_type_id in (4,21,59,64,73,74,80),b.refd3,getperiod(a.pol_type_id in (1,3,5,81),b.refd2,a.period_end))) as period_end,"
                + "sum(getpremi2(c.refid1 = 'INST/0', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst1,"
                + "sum(getpremi2(c.refid1 = 'INST/1', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst2,"
                + "sum(getpremi2(c.refid1 = 'INST/2', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst3,"
                + "sum(getpremi2(c.refid1 = 'INST/3', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst4,"
                + "sum(getpremi2(c.refid1 = 'INST/4', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst5,"
                + "sum(getpremi2(c.refid1 = 'INST/5', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst6,"
                + "sum(getpremi2(c.refid1 = 'INST/6', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst7,"
                + "sum(getpremi2(c.refid1 = 'INST/7', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst8,"
                + "sum(getpremi2(c.refid1 = 'INST/8', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst9,"
                + "sum(getpremi2(c.refid1 = 'INST/9', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst10,"
                + "sum(getpremi2(c.refid1 = 'INST/10', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst11,"
                + "sum(getpremi2(c.refid1 = 'INST/11', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst12,"
                + "sum(getpremi2(c.refid1 = 'INST/12', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst13,"
                + "sum(getpremi2(c.refid1 = 'INST/13', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst14,"
                + "sum(getpremi2(c.refid1 = 'INST/14', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst15,"
                + "sum(getpremi2(c.refid1 = 'INST/15', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst16,"
                + "sum(getpremi2(c.refid1 = 'INST/16', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst17,"
                + "sum(getpremi2(c.refid1 = 'INST/17', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst18,"
                + "sum(getpremi2(c.refid1 = 'INST/18', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst19,"
                + "sum(getpremi2(c.refid1 = 'INST/19', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst20,"
                + "sum(getpremi2(c.refid1 = 'INST/20', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst21,"
                + "sum(getpremi2(c.refid1 = 'INST/21', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst22,"
                + "sum(getpremi2(c.refid1 = 'INST/22', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst23,"
                + "sum(getpremi2(c.refid1 = 'INST/23', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst24,"
                + "sum(getpremi2(c.refid1 = 'INST/24', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst25,"
                + "sum(getpremi2(c.refid1 = 'INST/25', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst26,"
                + "sum(getpremi2(c.refid1 = 'INST/26', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst27,"
                + "sum(getpremi2(c.refid1 = 'INST/27', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst28,"
                + "sum(getpremi2(c.refid1 = 'INST/28', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst29,"
                + "sum(getpremi2(c.refid1 = 'INST/29', round((b.premi_total/a.premi_netto)*c.amount_settled,2))) as inst30 ");

        sqa.addQuery("from ins_policy a "
                + "inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ar_invoice c on c.attr_pol_id = a.pol_id and c.ar_trx_type_id in (5,6,7) "
                + "inner join ent_master d on d.ent_id = a.entity_id ");

        sqa.addClause("a.status IN ('POLICY','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        sqa.addClause("a.pol_type_id in (1,59)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = ?");
            sqa.addPar(stBranch);
        }

        if (stNama != null) {
            sqa.addClause("upper(a.cust_name) like ?");
            sqa.addPar("%" + stNama.toUpperCase() + "%");
        }

        final String sql = sqa.getSQL() + " group by d.ent_name,a.cust_name,a.pol_id,a.pol_no,b.ref1,"
                + "b.ref11,b.refd1,b.refd2,b.insured_amount,b.premi_total,b.ins_pol_obj_id "
                + "order by a.pol_no,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_DATA_INVOICE() throws Exception {

        HSSFWorkbook wb = new HSSFWorkbook();

        //bikin sheet
        HSSFSheet sheet = wb.createSheet("nasabah");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            HSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("sumbis");
            row0.createCell(1).setCellValue("tertanggung");
            row0.createCell(2).setCellValue("polis");
            row0.createCell(3).setCellValue("nama");
            row0.createCell(4).setCellValue("tsi");
            row0.createCell(5).setCellValue("premi");
            row0.createCell(6).setCellValue("tgl awal");
            row0.createCell(7).setCellValue("tgl akhir");
            row0.createCell(8).setCellValue("inst1");
            row0.createCell(9).setCellValue("inst2");
            row0.createCell(10).setCellValue("inst3");
            row0.createCell(11).setCellValue("inst4");
            row0.createCell(12).setCellValue("inst5");
            row0.createCell(13).setCellValue("inst6");
            row0.createCell(14).setCellValue("inst7");
            row0.createCell(15).setCellValue("inst8");
            row0.createCell(16).setCellValue("inst9");
            row0.createCell(17).setCellValue("inst10");
            row0.createCell(18).setCellValue("inst11");
            row0.createCell(19).setCellValue("inst12");
            row0.createCell(20).setCellValue("inst13");
            row0.createCell(21).setCellValue("inst14");
            row0.createCell(22).setCellValue("inst15");
            row0.createCell(23).setCellValue("inst16");
            row0.createCell(24).setCellValue("inst17");
            row0.createCell(25).setCellValue("inst18");
            row0.createCell(26).setCellValue("inst19");
            row0.createCell(27).setCellValue("inst20");
            row0.createCell(28).setCellValue("inst21");
            row0.createCell(29).setCellValue("inst22");
            row0.createCell(30).setCellValue("inst23");
            row0.createCell(31).setCellValue("inst24");
            row0.createCell(32).setCellValue("inst25");
            row0.createCell(33).setCellValue("inst26");
            row0.createCell(34).setCellValue("inst27");
            row0.createCell(35).setCellValue("inst28");
            row0.createCell(36).setCellValue("inst29");
            row0.createCell(37).setCellValue("inst30");

            //bikin isi cell
            HSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("ent_name"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("cust_name"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameST("nama"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameBD("insured_amount").doubleValue());
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            if (h.getFieldValueByFieldNameBD("inst1") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameBD("inst1").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst2") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameBD("inst2").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst3") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameBD("inst3").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst4") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("inst4").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst5") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("inst5").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst6") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("inst6").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst7") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("inst7").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst8") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("inst8").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst9") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameBD("inst9").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst10") != null) {
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameBD("inst10").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst11") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("inst11").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst12") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("inst12").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst13") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("inst13").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst14") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("inst14").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst15") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("inst15").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst16") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("inst16").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst17") != null) {
                row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("inst17").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst18") != null) {
                row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("inst18").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst19") != null) {
                row.createCell(26).setCellValue(h.getFieldValueByFieldNameBD("inst19").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("inst20") != null) {
                row.createCell(27).setCellValue(h.getFieldValueByFieldNameBD("inst20").doubleValue());
            }
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameBD("inst21").doubleValue());
            row.createCell(29).setCellValue(h.getFieldValueByFieldNameBD("inst22").doubleValue());
            row.createCell(30).setCellValue(h.getFieldValueByFieldNameBD("inst23").doubleValue());
            row.createCell(31).setCellValue(h.getFieldValueByFieldNameBD("inst24").doubleValue());
            row.createCell(32).setCellValue(h.getFieldValueByFieldNameBD("inst25").doubleValue());
            row.createCell(33).setCellValue(h.getFieldValueByFieldNameBD("inst26").doubleValue());
            row.createCell(34).setCellValue(h.getFieldValueByFieldNameBD("inst27").doubleValue());
            row.createCell(35).setCellValue(h.getFieldValueByFieldNameBD("inst28").doubleValue());
            row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("inst29").doubleValue());
            row.createCell(37).setCellValue(h.getFieldValueByFieldNameBD("inst30").doubleValue());
        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xls;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList DEBITUR_OBJEK() throws Exception {

        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.pol_id,a.pol_no,a.ccy,a.ccy_rate as kurs,b.refd1,b.refd2,b.refd3,b.refd4,b.refd5,b.refd6,"
                + " b.ref1,b.ref2,b.ref2d,b.ref3,b.ref4,b.ref5,b.ref6,b.ref7,b.ref7d,b.ref8,b.ref9,b.ref9d as postal_code,b.ref10,b.ref11,b.ref13,"
                + " b.ref14,b.ref15,b.ref16,b.ref17,b.ref19,b.ref20,b.ref23,b.ref24,b.ref25,b.ref26,b.ref28,b.ref29,b.ref30,b.refn1,b.refn2,"
                + " b.risk_class,c.ins_risk_cat_code,c.description, a.ccy,a.ccy_rate,b.insured_amount,b.premi_total,d.ent_name as sumbis,e.ent_name as pemasar,a.policy_date ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join ins_risk_cat c on b.ins_risk_cat_id = c.ins_risk_cat_id"
                + " left join ent_master d on d.ent_id = a.entity_id "
                + " left join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        sqa.addClause("(b.insured_amount <> 0 or b.premi_total <> 0)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = " + stPolicyTypeGroupID);
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = " + stPolicyTypeID);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            sqa.addClause("a.cc_code = '" + stBranch + "'");
            //sqa.addPar(stPolicyTypeID);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = " + stRegion);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("d.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stCompanyID != null) {
            sqa.addClause("d.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stKategoriDebitur != null) {
            sqa.addClause("b.ref7 = '" + stKategoriDebitur + "'");
            //sqa.addPar(stCompanyProdID);
        }

        String sql = sqa.getSQL() + " order by a.cc_code,a.policy_date,a.pol_no ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

        /*
        HashMap map1 = l.getMapOf(
        new DTOList.KeyBuilder() {

        public String buildKey(DTO x) {
        final InsurancePolicyView pol = (InsurancePolicyView) x;

        return pol.getStCostCenterCode();
        }
        });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

    }

    public void EXCEL_DEBITUR_OBJEK2() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect("';'||a.pol_no as no_polis,a.ccy as kurs,a.ccy_rate as rate_kurs,b.refd1 as tanggal_lahir,b.refd2 as tanggal_awal,b.refd3 as tanggal_akhir,b.refd6 as tanggal_stnc,"
                + " b.ref1 as nama_debitur,b.ref2 as usia,b.ref3 as no_ktp,b.ref4 as no_pk,b.ref5 as jangka_waktu_tahun,b.ref7 as kode_kategori_debitur,b.ref7d as kategori_debitur,"
                + " b.ref16 as no_rek_pinjaman,"
                + " b.insured_amount,b.premi_total,d.ent_name as sumbis,e.ent_name as pemasar ");

        sqa.addQuery(" from ins_policy a "
                + " inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + " left join ins_risk_cat c on b.ins_risk_cat_id = c.ins_risk_cat_id"
                + " left join ent_master d on d.ent_id = a.entity_id "
                + " left join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        sqa.addClause("a.active_flag='Y' and a.effective_flag='Y'");
        sqa.addClause("(b.insured_amount <> 0 or b.premi_total <> 0)");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= '" + policyDateFrom + "'");
            //sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= '" + policyDateTo + "'");
            //sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = " + stPolicyTypeGroupID);
            //sqa.addPar(stPolicyTypeGroupID);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = " + stPolicyTypeID);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = '" + stBranch + "'");

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = '" + stBranchSource + "'");
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = '" + stRegionSource + "'");
                }
            } else {
                sqa.addClause("((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))");
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = " + stRegion);
            //sqa.addPar(stPolicyTypeID);
        }

        if (stEntityID != null) {
            sqa.addClause("a.entity_id = '" + stEntityID + "'");
            //sqa.addPar(stEntityID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.prod_id = '" + stMarketerID + "'");
            //sqa.addPar(stMarketerID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("(a.pol_no||coalesce(a.ref1,'')) like '%" + stPolicyNo + "%'");
            //sqa.addPar('%' + stPolicyNo + '%');
        }

        if (stCompTypeID != null) {
            String type = null;
            if (stCompTypeID.equalsIgnoreCase("93") || stCompTypeID.equalsIgnoreCase("98")) {
                type = "('93','98')";
            } else if (stCompTypeID.equalsIgnoreCase("89") || stCompTypeID.equalsIgnoreCase("97")) {
                type = "('89','97')";
            } else {
                type = "('" + stCompTypeID + "')";
            }
            sqa.addClause("d.ref1 in " + type);
//            sqa.addPar(type);
        }

        if (stCompanyID != null) {
            sqa.addClause("d.ref2 = '" + stCompanyID + "'");
            //sqa.addPar(stCompanyID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("e.ref2 = '" + stCompanyProdID + "'");
            //sqa.addPar(stCompanyProdID);
        }

        if (stKategoriDebitur != null) {
            sqa.addClause("b.ref7 = '" + stKategoriDebitur + "'");
            //sqa.addPar(stCompanyProdID);
        }

        String sql = sqa.getSQL() + " order by a.cc_code,a.policy_date,a.pol_no ";

        /*
        final DTOList l = ListUtil.getDTOListFromQuery(
        sql,
        sqa.getPar(),
        HashDTO.class
        );

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
         */

        //sql = sql + " order by a.cc_code,a.policy_date,a.pol_no";

        SQLUtil S = new SQLUtil();

        String nama_file = "debitur_objek_" + System.currentTimeMillis() + ".csv";

        sql = "Copy ("
                + sql
                + " ) To 'D://exportdb/csv/" + nama_file + "' With CSV HEADER;";

        final PreparedStatement ps = S.setQuery(sql);

        boolean tes = ps.execute();

        S.release();

        File file = new File(Parameter.readString("SYS_DB_FOLDER") + nama_file);
        int length = 0;
        ServletOutputStream outStream = SessionManager.getInstance().getResponse().getOutputStream();

        SessionManager.getInstance().getResponse().setContentType("text/csv");
        SessionManager.getInstance().getResponse().setContentLength((int) file.length());

        // sets HTTP header
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=\"" + nama_file + "\"");

        int BUFSIZE = 4096;
        byte[] byteBuffer = new byte[BUFSIZE];
        DataInputStream in = new DataInputStream(new FileInputStream(file));

        // reads the file's bytes and writes them to the response stream
        while ((in != null) && ((length = in.read(byteBuffer)) != -1)) {
            outStream.write(byteBuffer, 0, length);
        }

        in.close();
        outStream.close();

        file.delete();

    }

    public String getKategoriDebiturName() throws Exception {
        final SQLUtil S = new SQLUtil();
        String kategori = "";

        try {

            final PreparedStatement PS = S.setQuery("select vs_description"
                    + " from s_valueset "
                    + " where vs_group = 'INSOBJ_CREDIT_STATUS' and vs_code = ?");

            PS.setString(1, getStKategoriDebitur());

            final ResultSet RS = PS.executeQuery();

            if (RS.next()) {
                kategori = RS.getString("vs_description");
            }

            return kategori;

        } finally {
            S.release();
        }
    }
    private String stKategoriDebitur;

    /**
     * @return the stKategoriDebitur
     */
    public String getStKategoriDebitur() {
        return stKategoriDebitur;
    }

    /**
     * @param stKategoriDebitur the stKategoriDebitur to set
     */
    public void setStKategoriDebitur(String stKategoriDebitur) {
        this.stKategoriDebitur = stKategoriDebitur;
    }

    /**
     * @return the stBussinessPolType
     */
    public String getStBussinessPolType() {
        return stBussinessPolType;
    }

    /**
     * @param stBussinessPolType the stBussinessPolType to set
     */
    public void setStBussinessPolType(String stBussinessPolType) {
        this.stBussinessPolType = stBussinessPolType;
    }

    /**
     * @return the stBranchSource
     */
    public String getStBranchSource() {
        return stBranchSource;
    }

    /**
     * @param stBranchSource the stBranchSource to set
     */
    public void setStBranchSource(String stBranchSource) {
        this.stBranchSource = stBranchSource;
    }

    /**
     * @return the stBranchSourceDesc
     */
    public String getStBranchSourceDesc() {
        return stBranchSourceDesc;
    }

    /**
     * @param stBranchSourceDesc the stBranchSourceDesc to set
     */
    public void setStBranchSourceDesc(String stBranchSourceDesc) {
        this.stBranchSourceDesc = stBranchSourceDesc;
    }

    /**
     * @return the stRegionSource
     */
    public String getStRegionSource() {
        return stRegionSource;
    }

    /**
     * @param stRegionSource the stRegionSource to set
     */
    public void setStRegionSource(String stRegionSource) {
        this.stRegionSource = stRegionSource;
    }

    /**
     * @return the stRegionSourceDesc
     */
    public String getStRegionSourceDesc() {
        return stRegionSourceDesc;
    }

    /**
     * @param stRegionSourceDesc the stRegionSourceDesc to set
     */
    public void setStRegionSourceDesc(String stRegionSourceDesc) {
        this.stRegionSourceDesc = stRegionSourceDesc;
    }

    /**
     * @return the stBussinessPolTypeCob
     */
    public String getStBussinessPolTypeCob() {
        return stBussinessPolTypeCob;
    }

    /**
     * @param stBussinessPolTypeCob the stBussinessPolTypeCob to set
     */
    public void setStBussinessPolTypeCob(String stBussinessPolTypeCob) {
        this.stBussinessPolTypeCob = stBussinessPolTypeCob;
    }

    public DTOList RPP_JENIS_SMG() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" pol_type_id,count(pol_no) as pol_no, sum(tsi) as tsi,"
                + "(case when pol_type_id = 59 then sum(premi_total)-sum(diskon) else sum(premi_total) end) as premi_total,"
                + "(case when pol_type_id = 59 then 0 else sum(diskon) end) as diskon,sum(fbase) as fbase "
                + "from (  "
                + "select (case when a.pol_type_id = 97 then 59 else a.pol_type_id end) as pol_type_id,a.pol_no,"
                + "(a.tsi-a.tsi_ko) as tsi, (a.premi_total-a.premi_ko) as premi_total,(a.diskon-a.diskon_ko) as diskon,(a.fbase) as fbase ");

        sqa.addQuery(" from data_polis a ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa.addClause("a.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        final String sql = " select pol_type_id,"
                + "sum(tsi) as insured_amount,sum(premi_total) as premi_amt,sum(diskon) as nd_disc1,sum(fbase) as nd_feebase1 "
                + "from ( " + sqa.getSQL() + " ) x group by pol_type_id "
                + " ) x group by pol_type_id order by pol_type_id ";

        final DTOList l = ListUtil.getDTOListFromQueryDS(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class, "WHOUSEDS");

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList REKAP_JENIS_SMG() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" pol_type_id,bus_source,count(pol_no) as pol_no, sum(tsi) as tsi,"
                + "(case when a.pol_type_id = 59 then sum(premi)-sum(diskon) else sum(premi) end) as premi,"
                + "(case when a.pol_type_id = 59 then 0 else sum(diskon) end) as diskon,sum(fbase) as fbase from ( "
                + "select (case when a.pol_type_id = 97 then 59 else a.pol_type_id end) as pol_type_id,"
                + "a.category1 as bus_source,a.pol_no,(a.tsi-a.tsi_ko) as tsi,"
                + "(a.premi_total-a.premi_ko) as premi,(a.diskon-a.diskon_ko) as diskon,(a.fbase) as fbase ");

        sqa.addQuery(" from data_polis a  ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ?");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ?");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        String sql = "select e.pol_type_id,e.description,"
                + "sum(getkoas(bus_source='1',(premi-diskon))) as nd_comm1,"
                + "sum(getkoas(bus_source='2',(premi-diskon))) as nd_comm2,"
                + "sum(getkoas(bus_source='3',(premi-diskon))) as nd_comm3,"
                + "sum(getkoas(bus_source='4',(premi-diskon))) as nd_comm4,"
                + "coalesce(sum(premi-diskon),0) as premi_total_adisc "
                + "from data_cob e "
                + "left join ( "
                + sqa.getSQL() + " ) a "
                + "group by pol_type_id,bus_source ) z on z.pol_type_id = e.pol_type_id "
                + "group by e.pol_type_id,e.description order by e.pol_type_id ";

        final DTOList l = ListUtil.getDTOListFromQueryDS(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class, "WHOUSEDS");

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList RPP_TAHUN_SMG() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" tahun,bulan,pol_type_id,count(pol_no) as pol_no, sum(tsi) as tsi,"
                + "(case when pol_type_id = 59 then sum(premi_total)-sum(diskon) else sum(premi_total) end) as premi_total,"
                + "(case when pol_type_id = 59 then 0 else sum(diskon) end) as diskon, sum(fbase) as fbase from ( "
                + "select substr(policy_date::text,1,4) as tahun,substr(policy_date::text,6,2) as bulan,"
                + "(case when a.pol_type_id = 97 then 59 else a.pol_type_id end) as pol_type_id,a.pol_no,"
                + "(a.tsi-a.tsi_ko) as tsi, (a.premi_total-a.premi_ko) as premi_total,(a.diskon-a.diskon_ko) as diskon,(a.fbase) as fbase  ");

        sqa.addQuery(" from data_polis a ");

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ?");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ?");
            sqa.addPar(policyDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ?");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ?");
            sqa.addPar(periodTo);
        }

//        if (stPolicyTypeGroupID != null) {
//            sqa.addClause("a.ins_policy_type_grp_id = ?");
//            sqa.addPar(stPolicyTypeGroupID);
//        }

        if (stPolicyTypeID != null) {
            if (stPolicyTypeID.equalsIgnoreCase("59") || stPolicyTypeID.equalsIgnoreCase("97")) {
                sqa.addClause("a.pol_type_id in (59,97)");
            } else {
                sqa.addClause("a.pol_type_id = ?");
                sqa.addPar(stPolicyTypeID);
            }
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa.addClause("a.category1 = ?");
            sqa.addPar(stCustCategory1);
        }

        final String sql = " select tahun as pol_type_id,"
                + "sum(tsi) as insured_amount,sum(premi_total) as premi_amt,sum(diskon) as nd_disc1,sum(fbase) as nd_feebase1 "
                + "from ( " + sqa.getSQL() + " ) x group by tahun,bulan,pol_type_id "
                + " ) x group by tahun order by tahun ";

        final DTOList l = ListUtil.getDTOListFromQueryDS(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class, "WHOUSEDS");

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;

    }

    public DTOList REKAP_JENIS_SUMMARY() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        Date tglPolisFrom = null;
        if (getPolicyDateFrom() != null) {
            tglPolisFrom = getPolicyDateFrom();
        } else if (getAppDateFrom() != null) {
            tglPolisFrom = getAppDateFrom();
        }

        Date tglPolisTo = null;
        if (getPolicyDateTo() != null) {
            tglPolisTo = getPolicyDateTo();
        } else if (getAppDateTo() != null) {
            tglPolisTo = getAppDateTo();
        }

        String tahun = DateUtil.getYear(tglPolisTo);
        String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
        String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

        System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
        System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

        String beforeMonth = null;
        String currentMonth = null;
        String addQuery = null;

        if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

            beforeMonth = "select sumbis as catsumbis,pol_type_id,sum(premi) as premi "
                    + "from ins_rekap_produksi_det a "
                    + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            beforeMonth = beforeMonth + "group by sumbis,pol_type_id ";

            currentMonth = "select bus_source,a.pol_type_id,sum(premi-diskon) as preminett from ( "
                    + "select b.category1 as bus_source,a.pol_type_id,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                    + "from ins_policies a "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                    + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

            if (policyDateFrom != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
            }

            if (policyDateTo != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }

            if (appDateFrom != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
            }

            if (appDateTo != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    currentMonth = currentMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    currentMonth = currentMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }
        }//current month
        else {
            beforeMonth = "select sumbis as catsumbis,pol_type_id,sum(premi) as premi "
                    + "from ins_rekap_produksi_det a "
                    + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            beforeMonth = beforeMonth + "group by sumbis,pol_type_id ";
        }


        sqa.addSelect("	catsumbis,pol_type_id,sum(premi) as premi ");


        if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
            addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.pol_type_id ) a group by a.bus_source,a.pol_type_id ";
        } else {
            addQuery = beforeMonth;
        }

        sqa.addQuery(" from (" + addQuery + ") a ");

        String inward = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

        if (getPolicyDateFrom() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
        }

        if (getPolicyDateTo() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
        }

        if (getAppDateFrom() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
        }

        if (getAppDateTo() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
        }

        if (getStBranch() != null) {
            inward = inward + " and c.cc_code = '" + stBranch + "'";
        }

        if (getStBussinessPolType() != null) {
            if (getStBussinessPolType().equalsIgnoreCase("1")) {
                inward = inward + " and c.cc_code = '80'";
            } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                inward = inward + " and c.cc_code <> '80'";
            }
        }

        if (getStBussinessPolTypeCob() != null) {
            if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
            } else {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
            }
        }

        String sql = "select e.pol_type_id,e.description,"
                + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                + "coalesce(sum(premi),0) as premi_total_adisc, " + inward + " ) as premi_base "
                + "from ins_policy_types e "
                + "left join ( "
                + sqa.getSQL() + " group by 1,2 "
                + ") z on z.pol_type_id = e.pol_type_id "
                + "group by e.pol_type_id,e.description order by e.pol_type_id";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public DTOList REKAP_CAB_SUMMARY() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        Date tglPolisFrom = null;
        if (getPolicyDateFrom() != null) {
            tglPolisFrom = getPolicyDateFrom();
        } else if (getAppDateFrom() != null) {
            tglPolisFrom = getAppDateFrom();
        }

        Date tglPolisTo = null;
        if (getPolicyDateTo() != null) {
            tglPolisTo = getPolicyDateTo();
        } else if (getAppDateTo() != null) {
            tglPolisTo = getAppDateTo();
        }

        String tahun = DateUtil.getYear(tglPolisTo);
        String bulanAwal = DateUtil.getMonth2Digit(tglPolisFrom);
        String bulanAkhir = DateUtil.getMonth2Digit(tglPolisTo);

        System.out.print("@@@@@@@@@@@@@@@@1 " + DateUtil.getMonth2Digit(tglPolisTo));
        System.out.print("@@@@@@@@@@@@@@@@2 " + DateUtil.getMonth2Digit(new Date()));

        String beforeMonth = null;
        String currentMonth = null;
        String addQuery = null;

        if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {

            beforeMonth = "select sumbis as catsumbis,cc_code,cc_code_source,sum(premi) as premi "
                    + "from ins_rekap_produksi_det a "
                    + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }

            beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source ";

            currentMonth = "select bus_source,a.cc_code,a.cc_code_source,sum(premi-diskon) as preminett from ( "
                    + "select b.category1 as bus_source,a.cc_code,a.cc_code_source,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.premi_total*a.ccy_rate,0),d.premi_amt*a.ccy_rate*-1)) as premi,"
                    + "sum(getpremiend(d.entity_id,coalesce(a.nd_disc1*a.ccy_rate,0),((coalesce(d.disc_amount,0))*a.ccy_rate)*-1)) as diskon "
                    + "from ins_policies a "
                    + " left join ent_master b on b.ent_id = a.entity_id "
                    + " inner join ins_pol_coins d on d.policy_id = a.pol_id  "
                    + "where a.status in ('POLICY','ENDORSE','RENEWAL') and a.effective_flag='Y' and (d.entity_id <> 1 or d.coins_type <> 'COINS_COVER')";

            if (policyDateFrom != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.policy_date) >= date_trunc('month', current_date) ";
            }

            if (policyDateTo != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.policy_date) <= '" + policyDateTo + "'";
            }

            if (appDateFrom != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.approved_date) >= date_trunc('month', current_date) ";
            }

            if (appDateTo != null) {
                currentMonth = currentMonth + " and date_trunc('day',a.approved_date) <= '" + appDateTo + "'";
            }

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    currentMonth = currentMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        currentMonth = currentMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        currentMonth = currentMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    currentMonth = currentMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                currentMonth = currentMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    currentMonth = currentMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    currentMonth = currentMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    currentMonth = currentMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    currentMonth = currentMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }
        }//current month
        else {
            beforeMonth = "select sumbis as catsumbis,a.cc_code,a.cc_code_source,sum(premi) as premi "
                    + "from ins_rekap_produksi_det a "
                    + "where tahun = '" + tahun + "' and bulan between '" + bulanAwal + "' and '" + bulanAkhir + "' ";

            if (stBranch != null) {
                if (stBranch.equalsIgnoreCase("80")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '" + stBranch + "'";

                    if (stBranchSource != null) {
                        beforeMonth = beforeMonth + " and a.cc_code_source = '" + stBranchSource + "'";
                    }
                    if (stRegionSource != null) {
                        beforeMonth = beforeMonth + " and a.region_id_source = '" + stRegionSource + "'";
                    }
                } else {
                    beforeMonth = beforeMonth + " and ((a.cc_code = '" + stBranch + "') or (a.cc_code = '80' and a.cc_code_source = '" + stBranch + "'))";
                }
            }

            if (stRegion != null) {
                beforeMonth = beforeMonth + " and a.region_id = '" + stRegion + "'";
            }

            if (stBussinessPolType != null) {
                if (stBussinessPolType.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.cc_code = '80'";
                } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.cc_code <> '80'";
                }
            }

            if (stBussinessPolTypeCob != null) {
                if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
                } else if (stBussinessPolTypeCob.equalsIgnoreCase("2")) {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
                } else {
                    beforeMonth = beforeMonth + " and a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
                }
            }
            beforeMonth = beforeMonth + "group by sumbis,a.cc_code,a.cc_code_source ";
        }


        sqa.addSelect("	catsumbis,a.cc_code,a.cc_code_source,sum(premi) as premi ");


        if (DateUtil.getMonth2Digit(tglPolisTo).equalsIgnoreCase(DateUtil.getMonth2Digit(new Date()))) {
            addQuery = beforeMonth + " union all " + currentMonth + " group by b.category1,a.cc_code,a.cc_code_source ) a group by a.bus_source,a.cc_code,a.cc_code_source ";
        } else {
            addQuery = beforeMonth;
        }

        sqa.addQuery(" from (" + addQuery + ") a ");

        String inward = " ( select sum(checkreas(d.ar_trx_line_id in ('1','4','77','79','135'),d.amount)) "
                + " from ins_pol_inward c inner join ins_pol_inward_details d on d.ar_invoice_id = c.ar_invoice_id "
                + " where c.approved_flag = 'Y' and (c.ar_trx_type_id in (1,2,3,20,21) or (c.claim_status = 'DLA' and c.ar_trx_type_id = 23))";

        if (getPolicyDateFrom() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
        }

        if (getPolicyDateTo() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
        }

        if (getAppDateFrom() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) >= '" + tglPolisFrom + "'";
        }

        if (getAppDateTo() != null) {
            inward = inward + " and date_trunc('day',c.mutation_date) <= '" + tglPolisTo + "'";
        }

        if (getStBranch() != null) {
            inward = inward + " and c.cc_code = '" + stBranch + "'";
        }

        if (getStBussinessPolType() != null) {
            if (getStBussinessPolType().equalsIgnoreCase("1")) {
                inward = inward + " and c.cc_code = '80'";
            } else if (getStBussinessPolType().equalsIgnoreCase("2")) {
                inward = inward + " and c.cc_code <> '80'";
            }
        }

        if (getStBussinessPolTypeCob() != null) {
            if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)";
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("1")) {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)";
            } else {
                inward = inward + " and coalesce(c.attr_pol_type_id,d.attr_pol_type_id) in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)";
            }
        }

        String sql = null;
        if (stBussinessPolType == null) {
            sql = "select e.cc_code,"
                    + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                    + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                    + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                    + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                    + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                    + "from gl_cost_center e "
                    + "left join ( "
                    + sqa.getSQL() + " group by 1,2,3 "
                    + ") z on z.cc_code = e.cc_code "
                    + "group by e.cc_code order by e.cc_code";
        } else {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sql = "select e.cc_code as cc_code,"
                        + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                        + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                        + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                        + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                        + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                        + "from gl_cost_center e "
                        + "left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + ") z on z.cc_code_source = e.cc_code where e.cc_code not in ('80')"
                        + "group by e.cc_code order by e.cc_code";
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sql = "select e.cc_code,"
                        + "sum(getkoas(catsumbis='1',premi)) as nd_comm1,"
                        + "sum(getkoas(catsumbis='2',premi)) as nd_comm2,"
                        + "sum(getkoas(catsumbis='3',premi)) as nd_comm3,"
                        + "sum(getkoas(catsumbis='4',premi)) as nd_comm4,"
                        + "sum(premi) as premi_total_adisc, " + inward + " ) as premi_base "
                        + "from gl_cost_center e "
                        + "left join ( "
                        + sqa.getSQL() + " group by 1,2,3 "
                        + ") z on z.cc_code = e.cc_code where e.cc_code not in ('80') "
                        + "group by e.cc_code order by e.cc_code";
            }
        }

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class);

        HashMap map1 = l.getMapOf(
                new DTOList.KeyBuilder() {

                    public String buildKey(DTO x) {
                        final InsurancePolicyView pol = (InsurancePolicyView) x;

                        return pol.getStPolicyTypeID() + "/" + pol.getStBusinessSourceCode();
                    }
                });

        l.setAttribute("AMOUNT_MAP", map1);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }
    private String stFilterAdd;

    /**
     * @return the stFilterAdd
     */
    public String getStFilterAdd() {
        return stFilterAdd;
    }

    /**
     * @param stFilterAdd the stFilterAdd to set
     */
    public void setStFilterAdd(String stFilterAdd) {
        this.stFilterAdd = stFilterAdd;
    }

    public String setDefault() {

        ref1 = LOVManager.getInstance().getRef1("PROD_PRINTING", stReport);

        refPropMap = Tools.getPropMap(ref1);

        String filterAdd = (String) refPropMap.get("FILTERADD");
        System.out.print("##############1 " + filterAdd);

        String filterReport = null;
        if (filterAdd != null) {
            setStFilterAdd("N");
        } else {
            setStFilterAdd("Y");
        }
        return filterAdd;
    }

    public void refresh() {
    }
    private String treatyTypeList;
    private String policyTypeList;

    public String getTreatyTypeList() {
        return treatyTypeList;
    }

    public void setTreatyTypeList(String treatyTypeList) {
        this.treatyTypeList = treatyTypeList;
    }

    public void addTreatyType() {

        String treatyList = getTreatyTypeList();

        treatyList = treatyList + ",'" + stFltTreatyType + "'";

        treatyList = treatyList.replaceAll("null,", "");

        setTreatyTypeList(treatyList);
    }

    /**
     * @return the policyTypeList
     */
    public String getPolicyTypeList() {
        return policyTypeList;
    }

    /**
     * @param policyTypeList the policyTypeList to set
     */
    public void setPolicyTypeList(String policyTypeList) {
        this.policyTypeList = policyTypeList;
    }

    public void addPolicyType() {

        String treatyList = getPolicyTypeList();

        treatyList = treatyList + "," + stPolicyTypeID;

        treatyList = treatyList.replaceAll("null,", "");

        setPolicyTypeList(treatyList);

    }

    public DTOList EXCEL_EXPIRED_WHOUSE() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.cc_code,a.pol_type_id,a.policy_date,a.period_start,a.period_end,a.pol_id,a.pol_no,a.status,a.tertanggung,a.marketer,a.ccy as mata_uang,a.ccy_rate as kurs,a.tsi,a.premi_total,"
                + "b.ins_pol_obj_id,b.nama,b.refd2 as tglawal,b.refd3 as tglakhir,b.tsi_obj_rev as tsi_obj,b.premi_obj_rev as premi_obj,"
                + "c.ref1,c.ref2,c.ref3,c.ref4,c.ref5,c.ref6,c.ref7,c.ref8,c.ref9d as kode_pos,c.ref10,c.ref11,c.ref1d,c.ref2d,c.ref3d,c.ref4d,"
                + "c.ref5d,c.ref6d,c.ref7d,c.ref8d,c.ref11,c.risk_class,c.refd1,c.refd2,c.refd3,b.rate_ojk,b.rate_premi ");

        sqa.addQuery(" from data_debitur b "
                + "inner join data_polis a on a.pol_id = b.pol_id "
                + "inner join prod_obj_detil c on c.ins_pol_obj_id = b.ins_pol_obj_id ");

        sqa.addClause("b.delete_f is null and b.status IN ('POLICY','ENDORSE','RENEWAL')");

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',b.refd3) >= ? ");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',b.refd3) <= ? ");
            sqa.addPar(expirePeriodTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',b.refd2) >= ? ");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',b.refd2) <= ? ");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ? ");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ? ");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ? ");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ? ");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa.addClause("a.category1 = ? ");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.idsumbis = ? ");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("a.grups = ? ");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.idmarketer = ? ");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("a.grupm = ? ");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ? ");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = sqa.getSQL() + " order by b.pol_id,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQueryDS(
                sql,
                sqa.getPar(),
                HashDTO.class, "WHOUSEDS");

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    public void EXPORT_EXPIRED_WHOUSE() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheet = wb.createSheet("new sheet");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheet.createRow(0);
            row0.createCell(0).setCellValue("cabang");
            row0.createCell(1).setCellValue("jenid");
            row0.createCell(2).setCellValue("tglpolis");
            row0.createCell(3).setCellValue("period_start");
            row0.createCell(4).setCellValue("period_end");
            row0.createCell(5).setCellValue("pol_id");
            row0.createCell(6).setCellValue("pol_no");
            row0.createCell(7).setCellValue("status");
            row0.createCell(8).setCellValue("tertanggung");
            row0.createCell(9).setCellValue("marketer");
            row0.createCell(10).setCellValue("mata_uang");
            row0.createCell(11).setCellValue("kurs");
            row0.createCell(12).setCellValue("tsi");
            row0.createCell(13).setCellValue("premi_total");
            row0.createCell(14).setCellValue("ins_pol_obj_id");
            row0.createCell(15).setCellValue("nama");
            row0.createCell(16).setCellValue("tglawal");
            row0.createCell(17).setCellValue("tglakhir");
            row0.createCell(18).setCellValue("tsi_obj");
            row0.createCell(19).setCellValue("premi_obj");
            row0.createCell(20).setCellValue("rate");
            row0.createCell(21).setCellValue("ref1");
            row0.createCell(22).setCellValue("ref2");
            row0.createCell(23).setCellValue("ref3");
            row0.createCell(24).setCellValue("ref4");
            row0.createCell(25).setCellValue("ref5");
            row0.createCell(26).setCellValue("ref6");
            row0.createCell(27).setCellValue("ref7");
            row0.createCell(28).setCellValue("ref8");
            row0.createCell(29).setCellValue("kode_pos");
            row0.createCell(30).setCellValue("ref10");
            row0.createCell(31).setCellValue("ref11");
            row0.createCell(32).setCellValue("ref1d");
            row0.createCell(33).setCellValue("ref2d");
            row0.createCell(34).setCellValue("ref3d");
            row0.createCell(35).setCellValue("ref4d");
            row0.createCell(36).setCellValue("ref5d");
            row0.createCell(37).setCellValue("ref6d");
            row0.createCell(38).setCellValue("ref7d");
            row0.createCell(39).setCellValue("ref8d");
            row0.createCell(40).setCellValue("risk_class");
            row0.createCell(41).setCellValue("refd1");
            row0.createCell(42).setCellValue("refd2");
            row0.createCell(43).setCellValue("refd3");

            //bikin isi cell
            XSSFRow row = sheet.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameST("cc_code"));
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameDT("policy_date"));
            row.createCell(3).setCellValue(h.getFieldValueByFieldNameDT("period_start"));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("period_end"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("status"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("tertanggung"));
            row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("marketer"));
            row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("mata_uang"));
            row.createCell(11).setCellValue(h.getFieldValueByFieldNameBD("kurs").doubleValue());
            row.createCell(12).setCellValue(h.getFieldValueByFieldNameBD("tsi").doubleValue());
            row.createCell(13).setCellValue(h.getFieldValueByFieldNameBD("premi_total").doubleValue());
            row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("ins_pol_obj_id").doubleValue());
            row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("nama"));
            row.createCell(16).setCellValue(h.getFieldValueByFieldNameDT("tglawal"));
            row.createCell(17).setCellValue(h.getFieldValueByFieldNameDT("tglakhir"));
            row.createCell(18).setCellValue(h.getFieldValueByFieldNameBD("tsi_obj").doubleValue());
            row.createCell(19).setCellValue(h.getFieldValueByFieldNameBD("premi_obj").doubleValue());
            if (h.getFieldValueByFieldNameBD("rate_ojk") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameBD("rate_ojk").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("ref1") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameST("ref1"));
            }
            if (h.getFieldValueByFieldNameST("ref2") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("ref2"));
            }
            if (h.getFieldValueByFieldNameST("ref3") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameST("ref3"));
            }
            if (h.getFieldValueByFieldNameST("ref4") != null) {
                row.createCell(24).setCellValue(h.getFieldValueByFieldNameST("ref4"));
            }
            if (h.getFieldValueByFieldNameST("ref5") != null) {
                row.createCell(25).setCellValue(h.getFieldValueByFieldNameST("ref5"));
            }
            if (h.getFieldValueByFieldNameST("ref6") != null) {
                row.createCell(26).setCellValue(h.getFieldValueByFieldNameST("ref6"));
            }
            if (h.getFieldValueByFieldNameST("ref7") != null) {
                row.createCell(27).setCellValue(h.getFieldValueByFieldNameST("ref7"));
            }
            if (h.getFieldValueByFieldNameST("ref8") != null) {
                row.createCell(28).setCellValue(h.getFieldValueByFieldNameST("ref8"));
            }
            if (h.getFieldValueByFieldNameST("ref9") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameST("kode_pos"));
            }
            if (h.getFieldValueByFieldNameST("ref10") != null) {
                row.createCell(30).setCellValue(h.getFieldValueByFieldNameST("ref10"));
            }
            if (h.getFieldValueByFieldNameST("ref11") != null) {
                row.createCell(31).setCellValue(h.getFieldValueByFieldNameST("ref11"));
            }
            row.createCell(32).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref1d")));
            row.createCell(33).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref2d")));
            row.createCell(34).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref3d")));
            row.createCell(35).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref4d")));
            row.createCell(36).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref5d")));
            row.createCell(37).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref6d")));
            row.createCell(38).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref7d")));
            row.createCell(39).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("ref8d")));
            if (h.getFieldValueByFieldNameST("risk_class") != null) {
                row.createCell(40).setCellValue(h.getFieldValueByFieldNameST("risk_class"));
            }
            if (h.getFieldValueByFieldNameDT("refd1") != null) {
                row.createCell(41).setCellValue(h.getFieldValueByFieldNameDT("refd1"));
            }
            if (h.getFieldValueByFieldNameDT("refd2") != null) {
                row.createCell(42).setCellValue(h.getFieldValueByFieldNameDT("refd2"));
            }
            if (h.getFieldValueByFieldNameDT("refd3") != null) {
                row.createCell(43).setCellValue(h.getFieldValueByFieldNameDT("refd3"));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXCEL_PRINCIPAL() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.pol_id,a.pol_no,a.pol_type_id,c.description as jenis,a.period_start as tglawal,a.period_end as tglakhir,"
                + "a.cust_name as obligee,a.prod_name as pemasar,"
                + "(case when a.pol_type_id = 60 then b.ref3d else b.ref1 end) as principal,(case when a.pol_type_id in (55,56,57,58) then a.ref1 end) as no_pp,"
                + "(case when a.pol_type_id = 51 then b.ref10 when a.pol_type_id in (55,56,57,58) then b.ref13 end) as noUndangan,"
                + "(case when a.pol_type_id = 51 then b.refd1 when a.pol_type_id in (55,56,57,58) then b.refd5 end) as tglUndangan,"
                + "(case when a.pol_type_id = 52 then b.ref10 when a.pol_type_id in (55,56,57,58) then b.ref14 end) as noSPPBJ,"
                + "(case when a.pol_type_id = 52 then b.refd1 when a.pol_type_id in (55,56,57,58) then b.refd6 end) as tglSPPBJ,"
                + "(case when a.pol_type_id = 52 then b.ref11 when a.pol_type_id in (55,56,57,58) then b.ref11 end) as noKontrak,"
                + "(case when a.pol_type_id = 52 then b.refd2 when a.pol_type_id in (55,56,57,58) then b.refd3 end) as tglKontrak,"
                + "(case when a.pol_type_id = 53 then b.ref10 when a.pol_type_id in (55,56,57,58) then b.ref7 end) as noSPK,"
                + "(case when a.pol_type_id = 53 then b.refd1 when a.pol_type_id in (55,56,57,58) then b.refd2 end) as tglSPK,"
                + "(case when a.pol_type_id = 54 then b.ref10 when a.pol_type_id in (55,56,57,58) then b.ref15 end) as noBAST,"
                + "(case when a.pol_type_id = 54 then b.refd1 when a.pol_type_id in (55,56,57,58) then b.refd7 end) as tglBAST,"
                + "(case when a.pol_type_id in (51,53,54) then b.ref11 when a.pol_type_id = 52 then b.ref12 when a.pol_type_id in (55,56,57,58) then b.ref6 end) as namaproyek,"
                + "(case when a.pol_type_id = 53 then b.refn2 when a.pol_type_id in (55,56,57,58) then b.refn3 end) as nilaiproyek,"
                + "(case when a.pol_type_id in (55,56,57,58) then b.refn4 end) as agunan,"
                + "(case when a.pol_type_id in (55,56,57,58) then b.ref8 end) as jenisagunan,"
                + "(case when a.pol_type_id in (55,56,57,58) then b.ref9d end) as bankagunan,"
                + "b.ref15 as jenisproduksi,b.ref13 as kegpabean,b.ref14 as dokumen,b.ref25 as kantorpabean,"
                + "b.insured_amount as jaminan,b.premi_total as premi,a.nd_comm1 as komisi,a.approved_date as tglsetuju,a.approved_who as setuju,"
                + "a.payment_date as tglbayar,a.create_date as tglbuat,a.create_who as buat,a.parent_pol_no as polissebelum,"
                + "(case when a.pol_type_id in (51,52,53,54) then b.ref14 else a.coins_pol_no end) as polisrujukan ");

        sqa.addQuery(" from ins_policy a inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
                + "inner join ent_master d on d.ent_id = a.entity_id inner join ent_master e on e.ent_id = a.prod_id ");

        sqa.addClause("a.active_flag='Y'");
        sqa.addClause("a.effective_flag='Y'");
        sqa.addClause("a.pol_type_id in (51,52,53,54,55,56,57,58,60,78)");

        if (stStatus != null) {
            sqa.addClause("a.status = '" + stStatus + "'");
            //sqa.addPar(stStatus);
        } else {
            sqa.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ? ");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ? ");
            sqa.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqa.addClause("date_trunc('day',a.approved_date) >= ? ");
            sqa.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqa.addClause("date_trunc('day',a.approved_date) <= ? ");
            sqa.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',a.period_start) >= ? ");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',a.period_start) <= ? ");
            sqa.addPar(periodTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ? ");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ? ");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ? ");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = sqa.getSQL() + " order by b.pol_id,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQuery(
                sql,
                sqa.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        final SQLAssembler sqaCredit = new SQLAssembler();

        sqaCredit.addSelect(" a.pol_id,a.pol_no,a.pol_type_id,c.description as jenis,a.period_start as tglawal,a.period_end as tglakhir,"
                + "a.cust_name as obligee,a.prod_name as pemasar,(case when a.pol_type_id = 60 then b.ref3d else b.ref1 end) as principal,"
                + "(case when a.pol_type_id in (60) then b.ref15 end) as alamatprincipal,(case when a.pol_type_id in (60) then b.ref1d end) as tertanggung,"
                + "(case when a.pol_type_id in (60) then b.ref3 end) as alamattertanggung,(case when a.pol_type_id in (60) then b.ref7d end) as penanggung,"
                + "(case when a.pol_type_id in (60) then b.ref8 end) as alamatpenanggung,(case when a.pol_type_id in (60,73,74) then b.refn1 end) as insured,"
                + "(case when a.pol_type_id in (60) then b.refn2 when a.pol_type_id in (73,74) then b.refn7 end) as agunan,"
                + "(case when a.pol_type_id in (60) then b.ref25 when a.pol_type_id in (73,74) then b.ref20 end) as jenis,"
                + "(case when a.pol_type_id in (60) then b.ref26 when a.pol_type_id in (73,74) then b.ref21 end) as pengikatan,"
                + "(case when a.pol_type_id in (60) then b.refd7 end) as tglskp,(case when a.pol_type_id in (60) then b.ref28 end) as noskp,"
                + "(case when a.pol_type_id in (60) then b.ref29 end) as nopks,b.insured_amount as tsi,b.premi_total as premi,a.nd_comm1 as komisi,"
                + "a.approved_date as tglsetuju,a.approved_who as setuju,a.payment_date as tglbayar,a.create_date as tglbuat,a.create_who as buat,"
                + "a.parent_pol_no as polissebelum,(case when a.pol_type_id in (51,52,53,54) then b.ref14 else a.coins_pol_no end) as polisrujukan ");

        sqaCredit.addQuery(" from ins_policy a inner join ins_pol_obj b on b.pol_id = a.pol_id "
                + "inner join ins_policy_types c on c.pol_type_id = a.pol_type_id "
                + "inner join ent_master d on d.ent_id = a.entity_id inner join ent_master e on e.ent_id = a.prod_id ");

        sqaCredit.addClause("a.status in ('POLICY','RENEWAL','ENDORSE')");
        sqaCredit.addClause("a.active_flag='Y'");
        sqaCredit.addClause("a.effective_flag='Y'");
        sqaCredit.addClause("a.pol_type_id in (60,73,74)");

        if (policyDateFrom != null) {
            sqaCredit.addClause("date_trunc('day',a.policy_date) >= ? ");
            sqaCredit.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqaCredit.addClause("date_trunc('day',a.policy_date) <= ? ");
            sqaCredit.addPar(policyDateTo);
        }

        if (appDateFrom != null) {
            sqaCredit.addClause("date_trunc('day',a.approved_date) >= ? ");
            sqaCredit.addPar(appDateFrom);
        }

        if (appDateTo != null) {
            sqaCredit.addClause("date_trunc('day',a.approved_date) <= ? ");
            sqaCredit.addPar(appDateTo);
        }

        if (periodFrom != null) {
            sqaCredit.addClause("date_trunc('day',a.period_start) >= ? ");
            sqaCredit.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqaCredit.addClause("date_trunc('day',a.period_start) <= ? ");
            sqaCredit.addPar(periodTo);
        }

        if (stPolicyTypeID != null) {
            sqaCredit.addClause("a.pol_type_id = ? ");
            sqaCredit.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqaCredit.addClause("a.ins_policy_type_grp_id = ? ");
            sqaCredit.addPar(stPolicyTypeGroupID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqaCredit.addClause("a.cc_code = ?");
                sqaCredit.addPar(stBranch);

                if (stBranchSource != null) {
                    sqaCredit.addClause("a.cc_code_source = ?");
                    sqaCredit.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqaCredit.addClause("a.region_id_source = ?");
                    sqaCredit.addPar(stRegionSource);
                }
            } else {
                sqaCredit.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqaCredit.addPar(stBranch);
                sqaCredit.addPar(stBranch);
            }
            //sqaCredit.addPar(stBranch);
        }

        if (stRegion != null) {
            sqaCredit.addClause("a.region_id = ?");
            sqaCredit.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqaCredit.addClause("a.cc_code = '80'");
//            sqaCredit.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqaCredit.addClause("a.cc_code <> '80'");
//            sqaCredit.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqaCredit.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqaCredit.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqaCredit.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stStatus != null) {
            sqaCredit.addClause("a.status = '" + stStatus + "'");
            //sqa.addPar(stStatus);
        } else {
            sqaCredit.addClause("a.status in ('POLICY','ENDORSE','RENEWAL')");
        }

        if (stPolicyNo != null) {
            sqaCredit.addClause("a.pol_no like ? ");
            sqaCredit.addPar('%' + stPolicyNo + '%');
        }

        String sql2 = sqaCredit.getSQL() + " order by b.pol_id,b.ins_pol_obj_id ";

        final DTOList l2 = ListUtil.getDTOListFromQuery(
                sql2,
                sqaCredit.getPar(),
                HashDTO.class);

        SessionManager.getInstance().getRequest().setAttribute("RPT2", l2);

        return l;
    }

    public void EXPORT_PRINCIPAL() throws Exception {

        XSSFWorkbook wb = new XSSFWorkbook();

        //bikin sheet
        XSSFSheet sheetsurety = wb.createSheet("surety");
        XSSFSheet sheetkredit = wb.createSheet("kredit");

        final DTOList list = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT");
        final DTOList list2 = (DTOList) SessionManager.getInstance().getRequest().getAttribute("RPT2");

        for (int i = 0; i < list.size(); i++) {
            HashDTO h = (HashDTO) list.get(i);

            //bikin header
            XSSFRow row0 = sheetsurety.createRow(0);
            row0.createCell(0).setCellValue("pol_id");
            row0.createCell(1).setCellValue("pol_no");
            row0.createCell(2).setCellValue("pol_type_id");
            row0.createCell(3).setCellValue("jenis");
            row0.createCell(4).setCellValue("tgl awal");
            row0.createCell(5).setCellValue("tgl akhir");
            row0.createCell(6).setCellValue("obligee");
            row0.createCell(7).setCellValue("pemasar");
            row0.createCell(8).setCellValue("principal");
            row0.createCell(9).setCellValue("no undangan");
            row0.createCell(10).setCellValue("tgl undangan");
            row0.createCell(11).setCellValue("no sppbj");
            row0.createCell(12).setCellValue("tgl sppbj");
            row0.createCell(13).setCellValue("no kontrak");
            row0.createCell(14).setCellValue("tgl kontrak");
            row0.createCell(15).setCellValue("no spk");
            row0.createCell(16).setCellValue("tgl spk");
            row0.createCell(17).setCellValue("no bast");
            row0.createCell(18).setCellValue("tgl bast");
            row0.createCell(19).setCellValue("nama proyek");
            row0.createCell(20).setCellValue("jenis produksi");
            row0.createCell(21).setCellValue("keg pabean");
            row0.createCell(22).setCellValue("dokumen");
            row0.createCell(23).setCellValue("kantor pabean");
            row0.createCell(24).setCellValue("jaminan");
            row0.createCell(25).setCellValue("premi");
            row0.createCell(26).setCellValue("komisi");
            row0.createCell(27).setCellValue("tgl setuju");
            row0.createCell(28).setCellValue("setuju");
            row0.createCell(29).setCellValue("tgl bayar");
            row0.createCell(30).setCellValue("tgl buat");
            row0.createCell(31).setCellValue("buat");
            row0.createCell(32).setCellValue("polis sebelum");
            row0.createCell(33).setCellValue("polis rujukan");
            row0.createCell(34).setCellValue("no pp");
            row0.createCell(35).setCellValue("nilai proyek");
            row0.createCell(36).setCellValue("agunan");
            row0.createCell(37).setCellValue("jenis agunan");
            row0.createCell(38).setCellValue("bank agunan");

            //bikin isi cell
            XSSFRow row = sheetsurety.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(3).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("tglawal"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tglakhir"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("obligee"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("pemasar"));
            if (h.getFieldValueByFieldNameST("principal") != null) {
                row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("principal"));
            }
            if (h.getFieldValueByFieldNameST("noundangan") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("noundangan"));
            }
            if (h.getFieldValueByFieldNameDT("tglundangan") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameDT("tglundangan"));
            }
            if (h.getFieldValueByFieldNameST("nosppbj") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("nosppbj"));
            }
            if (h.getFieldValueByFieldNameDT("tglsppbj") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameDT("tglsppbj"));
            }
            if (h.getFieldValueByFieldNameST("nokontrak") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("nokontrak"));
            }
            if (h.getFieldValueByFieldNameDT("tglkontrak") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameDT("tglkontrak"));
            }
            if (h.getFieldValueByFieldNameST("nospk") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameST("nospk"));
            }
            if (h.getFieldValueByFieldNameDT("tglspk") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameDT("tglspk"));
            }
            if (h.getFieldValueByFieldNameST("nobast") != null) {
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameST("nobast"));
            }
            if (h.getFieldValueByFieldNameDT("tglbast") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameDT("tglbast"));
            }
            if (h.getFieldValueByFieldNameST("namaproyek") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameST("namaproyek"));
            }
            if (h.getFieldValueByFieldNameST("jenisproduksi") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameST("jenisproduksi"));
            }
            if (h.getFieldValueByFieldNameST("kegpabean") != null) {
                row.createCell(21).setCellValue(h.getFieldValueByFieldNameST("kegpabean"));
            }
            if (h.getFieldValueByFieldNameST("dokumen") != null) {
                row.createCell(22).setCellValue(h.getFieldValueByFieldNameST("dokumen"));
            }
            if (h.getFieldValueByFieldNameST("kantorpabean") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameST("kantorpabean"));
            }
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameBD("jaminan").doubleValue());
            row.createCell(25).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            if (h.getFieldValueByFieldNameBD("komisi") != null) {
                row.createCell(26).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            }
            row.createCell(27).setCellValue(h.getFieldValueByFieldNameDT("tglsetuju"));
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameST("setuju"));
            if (h.getFieldValueByFieldNameDT("tglbayar") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameDT("tglbayar"));
            }
            row.createCell(30).setCellValue(h.getFieldValueByFieldNameDT("tglbuat"));
            row.createCell(31).setCellValue(h.getFieldValueByFieldNameST("buat"));
            if (h.getFieldValueByFieldNameST("polissebelum") != null) {
                row.createCell(32).setCellValue(h.getFieldValueByFieldNameST("polissebelum"));
            }
            if (h.getFieldValueByFieldNameST("polisrujukan") != null) {
                row.createCell(33).setCellValue(h.getFieldValueByFieldNameST("polisrujukan"));
            }
            if (h.getFieldValueByFieldNameST("no_pp") != null) {
                row.createCell(34).setCellValue(h.getFieldValueByFieldNameST("no_pp"));
            }
            if (h.getFieldValueByFieldNameBD("nilaiproyek") != null) {
                row.createCell(35).setCellValue(h.getFieldValueByFieldNameBD("nilaiproyek").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("agunan") != null) {
                row.createCell(36).setCellValue(h.getFieldValueByFieldNameBD("agunan").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jenisagunan") != null) {
                row.createCell(37).setCellValue(h.getFieldValueByFieldNameST("jenisagunan"));
            }
            if (h.getFieldValueByFieldNameST("bankagunan") != null) {
                row.createCell(38).setCellValue(h.getFieldValueByFieldNameST("bankagunan"));
            }

        }

        for (int i = 0; i < list2.size(); i++) {
            HashDTO h = (HashDTO) list2.get(i);

            //bikin header
            XSSFRow row0 = sheetkredit.createRow(0);
            row0.createCell(0).setCellValue("pol_id");
            row0.createCell(1).setCellValue("pol_no");
            row0.createCell(2).setCellValue("pol_type_id");
            row0.createCell(3).setCellValue("jenis");
            row0.createCell(4).setCellValue("tglawal");
            row0.createCell(5).setCellValue("tglakhir");
            row0.createCell(6).setCellValue("obligee");
            row0.createCell(7).setCellValue("pemasar");
            row0.createCell(8).setCellValue("principal");
            row0.createCell(9).setCellValue("alamat principal");
            row0.createCell(10).setCellValue("tertanggung");
            row0.createCell(11).setCellValue("alamat tertanggung");
            row0.createCell(12).setCellValue("penanggung");
            row0.createCell(13).setCellValue("alamat penanggung");
            row0.createCell(14).setCellValue("insured");
            row0.createCell(15).setCellValue("agunan");
            row0.createCell(16).setCellValue("jenis");
            row0.createCell(17).setCellValue("pengikatan");
            row0.createCell(18).setCellValue("tglskp");
            row0.createCell(19).setCellValue("noskp");
            row0.createCell(20).setCellValue("nopks");
            row0.createCell(21).setCellValue("tsi");
            row0.createCell(22).setCellValue("premi");
            row0.createCell(23).setCellValue("komisi");
            row0.createCell(24).setCellValue("tglsetuju");
            row0.createCell(25).setCellValue("setuju");
            row0.createCell(26).setCellValue("tglbayar");
            row0.createCell(27).setCellValue("tglbuat");
            row0.createCell(28).setCellValue("buat");
            row0.createCell(29).setCellValue("polissebelum");
            row0.createCell(30).setCellValue("polisrujukan");

            //bikin isi cell
            XSSFRow row = sheetkredit.createRow(i + 1);
            row.createCell(0).setCellValue(h.getFieldValueByFieldNameBD("pol_id").doubleValue());
            row.createCell(1).setCellValue(h.getFieldValueByFieldNameST("pol_no"));
            row.createCell(2).setCellValue(h.getFieldValueByFieldNameBD("pol_type_id").doubleValue());
            row.createCell(3).setCellValue(LanguageManager.getInstance().translate(h.getFieldValueByFieldNameST("jenis")));
            row.createCell(4).setCellValue(h.getFieldValueByFieldNameDT("tglawal"));
            row.createCell(5).setCellValue(h.getFieldValueByFieldNameDT("tglakhir"));
            row.createCell(6).setCellValue(h.getFieldValueByFieldNameST("obligee"));
            row.createCell(7).setCellValue(h.getFieldValueByFieldNameST("pemasar"));
            row.createCell(8).setCellValue(h.getFieldValueByFieldNameST("principal"));
            if (h.getFieldValueByFieldNameST("alamatprincipal") != null) {
                row.createCell(9).setCellValue(h.getFieldValueByFieldNameST("alamatprincipal"));
            }
            if (h.getFieldValueByFieldNameST("alamat") != null) {
                row.createCell(10).setCellValue(h.getFieldValueByFieldNameST("tertanggung"));
            }
            if (h.getFieldValueByFieldNameST("alamattertanggung") != null) {
                row.createCell(11).setCellValue(h.getFieldValueByFieldNameST("alamattertanggung"));
            }
            if (h.getFieldValueByFieldNameST("alamat") != null) {
                row.createCell(12).setCellValue(h.getFieldValueByFieldNameST("penanggung"));
            }
            if (h.getFieldValueByFieldNameST("alamatpenanggung") != null) {
                row.createCell(13).setCellValue(h.getFieldValueByFieldNameST("alamatpenanggung"));
            }
            if (h.getFieldValueByFieldNameBD("insured") != null) {
                row.createCell(14).setCellValue(h.getFieldValueByFieldNameBD("insured").doubleValue());
            }
            if (h.getFieldValueByFieldNameBD("agunan") != null) {
                row.createCell(15).setCellValue(h.getFieldValueByFieldNameBD("agunan").doubleValue());
            }
            if (h.getFieldValueByFieldNameST("jenis") != null) {
                row.createCell(16).setCellValue(h.getFieldValueByFieldNameST("jenis"));
            }
            if (h.getFieldValueByFieldNameST("pengikatan") != null) {
                row.createCell(17).setCellValue(h.getFieldValueByFieldNameST("pengikatan"));
            }
            if (h.getFieldValueByFieldNameDT("tglskp") != null) {
                row.createCell(18).setCellValue(h.getFieldValueByFieldNameDT("tglskp"));
            }
            if (h.getFieldValueByFieldNameST("noskp") != null) {
                row.createCell(19).setCellValue(h.getFieldValueByFieldNameST("noskp"));
            }
            if (h.getFieldValueByFieldNameST("nopks") != null) {
                row.createCell(20).setCellValue(h.getFieldValueByFieldNameST("nopks"));
            }
            row.createCell(21).setCellValue(h.getFieldValueByFieldNameBD("tsi").doubleValue());
            row.createCell(22).setCellValue(h.getFieldValueByFieldNameBD("premi").doubleValue());
            if (h.getFieldValueByFieldNameBD("komisi") != null) {
                row.createCell(23).setCellValue(h.getFieldValueByFieldNameBD("komisi").doubleValue());
            }
            row.createCell(24).setCellValue(h.getFieldValueByFieldNameDT("tglsetuju"));
            row.createCell(25).setCellValue(h.getFieldValueByFieldNameST("setuju"));
            if (h.getFieldValueByFieldNameDT("tglbayar") != null) {
                row.createCell(26).setCellValue(h.getFieldValueByFieldNameDT("tglbayar"));
            }
            row.createCell(27).setCellValue(h.getFieldValueByFieldNameDT("tglbuat"));
            row.createCell(28).setCellValue(h.getFieldValueByFieldNameST("buat"));
            if (h.getFieldValueByFieldNameST("polissebelum") != null) {
                row.createCell(29).setCellValue(h.getFieldValueByFieldNameST("polissebelum"));
            }
            if (h.getFieldValueByFieldNameST("polisrujukan") != null) {
                row.createCell(30).setCellValue(h.getFieldValueByFieldNameST("polisrujukan"));
            }

        }

        SessionManager.getInstance().getResponse().setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        SessionManager.getInstance().getResponse().setHeader("Content-Disposition", "attachment; filename=" + getStFileName() + ".xlsx;");
        ServletOutputStream sosStream = SessionManager.getInstance().getResponse().getOutputStream();

        wb.write(sosStream);
        sosStream.flush();
        sosStream.close();
    }

    public DTOList EXPIRED_WHOUSE() throws Exception {
        final SQLAssembler sqa = new SQLAssembler();

        sqa.addSelect(" a.policy_date,a.status,b.ins_pol_obj_id,b.refd2 as period_start,b.refd3 as period_end,"
                + "a.pol_id,a.pol_no,a.tertanggung as cust_name,a.tsi as insured_amount,a.premi_total,"
                + "b.nama as prod_name,b.tsi_obj_rev as tsi_obj,b.premi_obj_rev as premi_obj ");

        sqa.addQuery(" from data_debitur b "
                + "inner join data_polis a on a.pol_id = b.pol_id "
                + "inner join prod_obj_detil c on c.ins_pol_obj_id = b.ins_pol_obj_id ");

        sqa.addClause("b.delete_f is null and b.status IN ('POLICY','ENDORSE','RENEWAL')");

        if (expirePeriodFrom != null) {
            sqa.addClause("date_trunc('day',b.refd3) >= ? ");
            sqa.addPar(expirePeriodFrom);
        }

        if (expirePeriodTo != null) {
            sqa.addClause("date_trunc('day',b.refd3) <= ? ");
            sqa.addPar(expirePeriodTo);
        }

        if (periodFrom != null) {
            sqa.addClause("date_trunc('day',b.refd2) >= ? ");
            sqa.addPar(periodFrom);
        }

        if (periodTo != null) {
            sqa.addClause("date_trunc('day',b.refd2) <= ? ");
            sqa.addPar(periodTo);
        }

        if (policyDateFrom != null) {
            sqa.addClause("date_trunc('day',a.policy_date) >= ? ");
            sqa.addPar(policyDateFrom);
        }

        if (policyDateTo != null) {
            sqa.addClause("date_trunc('day',a.policy_date) <= ? ");
            sqa.addPar(policyDateTo);
        }

        if (stPolicyTypeID != null) {
            sqa.addClause("a.pol_type_id = ? ");
            sqa.addPar(stPolicyTypeID);
        }

        if (stPolicyTypeGroupID != null) {
            sqa.addClause("a.ins_policy_type_grp_id = ? ");
            sqa.addPar(stPolicyTypeGroupID);
        }

        if (stBranch != null) {
            if (stBranch.equalsIgnoreCase("80")) {
                sqa.addClause("a.cc_code = ?");
                sqa.addPar(stBranch);

                if (stBranchSource != null) {
                    sqa.addClause("a.cc_code_source = ?");
                    sqa.addPar(stBranchSource);
                }
                if (stRegionSource != null) {
                    sqa.addClause("a.region_id_source = ?");
                    sqa.addPar(stRegionSource);
                }
            } else {
                sqa.addClause("((a.cc_code = ?) or (a.cc_code = '80' and a.cc_code_source = ?))");
                sqa.addPar(stBranch);
                sqa.addPar(stBranch);
            }
            //sqa.addPar(stBranch);
        }

        if (stRegion != null) {
            sqa.addClause("a.region_id = ?");
            sqa.addPar(stRegion);
        }

        if (stBussinessPolType != null) {
            if (stBussinessPolType.equalsIgnoreCase("1")) {
                sqa.addClause("a.cc_code = '80'");
//            sqa.addPar(stBussinessPolType);
            } else if (stBussinessPolType.equalsIgnoreCase("2")) {
                sqa.addClause("a.cc_code <> '80'");
//            sqa.addPar(stBussinessPolType);
            }
        }

        if (stBussinessPolTypeCob != null) {
            if (stBussinessPolTypeCob.equalsIgnoreCase("1")) {
                sqa.addClause("a.pol_type_id in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,31,32,33,35,36,37,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,92,95,96,86)");
            } else if (getStBussinessPolTypeCob().equalsIgnoreCase("2")) {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,59,60,73,74,75,76,77,78,80,97,87,88)");
            } else {
                sqa.addClause("a.pol_type_id in (21,38,45,46,47,48,51,52,53,54,55,56,57,58,60,73,74,75,76,77,78,80,97)");
            }
        }

        if (stCustCategory1 != null) {
            sqa.addClause("a.category1 = ? ");
            sqa.addPar(stCustCategory1);
        }

        if (stEntityID != null) {
            sqa.addClause("a.idsumbis = ? ");
            sqa.addPar(stEntityID);
        }

        if (stCompanyID != null) {
            sqa.addClause("a.grups = ? ");
            sqa.addPar(stCompanyID);
        }

        if (stMarketerID != null) {
            sqa.addClause("a.idmarketer = ? ");
            sqa.addPar(stMarketerID);
        }

        if (stCompanyProdID != null) {
            sqa.addClause("a.grupm = ? ");
            sqa.addPar(stCompanyProdID);
        }

        if (stPolicyNo != null) {
            sqa.addClause("a.pol_no like ? ");
            sqa.addPar('%' + stPolicyNo + '%');
        }

        String sql = sqa.getSQL() + " order by b.pol_id,b.ins_pol_obj_id ";

        final DTOList l = ListUtil.getDTOListFromQueryDS(
                sql,
                sqa.getPar(),
                InsurancePolicyView.class, "WHOUSEDS");

        SessionManager.getInstance().getRequest().setAttribute("RPT", l);

        return l;
    }

    /**
     * @return the stBussinessSourceID
     */
    public String getStBussinessSourceID() {
        return stBussinessSourceID;
    }

    /**
     * @param stBussinessSourceID the stBussinessSourceID to set
     */
    public void setStBussinessSourceID(String stBussinessSourceID) {
        this.stBussinessSourceID = stBussinessSourceID;
    }

    /**
     * @return the stBussinessSourceName
     */
    public String getStBussinessSourceName() {
        return stBussinessSourceName;
    }

    /**
     * @param stBussinessSourceName the stBussinessSourceName to set
     */
    public void setStBussinessSourceName(String stBussinessSourceName) {
        this.stBussinessSourceName = stBussinessSourceName;
    }
}
